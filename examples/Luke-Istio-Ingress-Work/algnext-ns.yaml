apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: alertmanager
    creationTimestamp: "2022-06-30T12:44:51Z"
    generateName: alertmanager-algnext-kube-prometheus-alertmanager-
    labels:
      alertmanager: algnext-kube-prometheus-alertmanager
      app.kubernetes.io/component: alertmanager
      app.kubernetes.io/instance: algnext-kube-prometheus-alertmanager
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/version: 0.24.0
      controller-revision-hash: alertmanager-algnext-kube-prometheus-alertmanager-cd956b9bd
      statefulset.kubernetes.io/pod-name: alertmanager-algnext-kube-prometheus-alertmanager-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:alertmanager: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3735aefc-c536-40e4-8031-c801992823f2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"alertmanager"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9093,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9094,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9094,"protocol":"UDP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/alertmanager"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"alertmanager-algnext-kube-prometheus-alertmanager-db"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"config-volume"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tls-assets"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.4.113"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:33Z"
    name: alertmanager-algnext-kube-prometheus-alertmanager-0
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: alertmanager-algnext-kube-prometheus-alertmanager
      uid: 3735aefc-c536-40e4-8031-c801992823f2
    resourceVersion: "19777216"
    uid: a054797d-f70e-4271-9488-69b15001d8e6
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: alertmanager
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: kube-prometheus
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --config.file=/etc/alertmanager/config/alertmanager.yaml
      - --storage.path=/alertmanager
      - --data.retention=120h
      - --cluster.listen-address=
      - --web.listen-address=:9093
      - --web.external-url=http://algnext-kube-prometheus-alertmanager.algnext-ns:9093/
      - --web.route-prefix=/
      - --cluster.peer=alertmanager-algnext-kube-prometheus-alertmanager-0.alertmanager-operated:9094
      - --cluster.reconnect-timeout=5m
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: docker.io/bitnami/alertmanager:0.24.0-debian-10-r57
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 120
        httpGet:
          path: /-/healthy
          port: web
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      name: alertmanager
      ports:
      - containerPort: 9093
        name: web
        protocol: TCP
      - containerPort: 9094
        name: mesh-tcp
        protocol: TCP
      - containerPort: 9094
        name: mesh-udp
        protocol: UDP
      readinessProbe:
        failureThreshold: 120
        httpGet:
          path: /-/ready
          port: web
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        requests:
          memory: 200Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
      - mountPath: /etc/alertmanager/certs
        name: tls-assets
        readOnly: true
      - mountPath: /alertmanager
        name: alertmanager-algnext-kube-prometheus-alertmanager-db
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-kube-prometheus-alertmanager-token-wbbrs
        readOnly: true
    - args:
      - --listen-address=:8080
      - --reload-url=http://127.0.0.1:9093/-/reload
      - --watched-dir=/etc/alertmanager/config
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "-1"
      image: docker.io/bitnami/prometheus-operator:0.56.3-debian-10-r0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: reloader-web
        timeoutSeconds: 5
      name: config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: reloader-web
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-kube-prometheus-alertmanager-token-wbbrs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: alertmanager-algnext-kube-prometheus-alertmanager-0
    nodeName: ip-10-0-13-60.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-kube-prometheus-alertmanager
    serviceAccountName: algnext-kube-prometheus-alertmanager
    subdomain: alertmanager-operated
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: config-volume
      secret:
        defaultMode: 420
        secretName: alertmanager-algnext-kube-prometheus-alertmanager-generated
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: alertmanager-algnext-kube-prometheus-alertmanager-tls-assets-0
    - emptyDir: {}
      name: alertmanager-algnext-kube-prometheus-alertmanager-db
    - name: algnext-kube-prometheus-alertmanager-token-wbbrs
      secret:
        defaultMode: 420
        secretName: algnext-kube-prometheus-alertmanager-token-wbbrs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3c25d40ff24ddebe8723fb5c5682a6d87e62d3bacfa1d67d5d5b6ccdaf6a6298
      image: bitnami/alertmanager:0.24.0-debian-10-r57
      imageID: docker-pullable://bitnami/alertmanager@sha256:b0f98757adc8c87d284727ab05afb31f557dd2de2243b1f0f3dfc386b1963025
      lastState: {}
      name: alertmanager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:59Z"
    - containerID: docker://593110acd7269933d5a7124a6e3f2aa6dbc02dab8e95979995c53fb2a7c4e2be
      image: bitnami/prometheus-operator:0.56.3-debian-10-r0
      imageID: docker-pullable://bitnami/prometheus-operator@sha256:5918c9a4d49616cf70c764c7dc471aaffdd2c5453d08bbd0967d5927d58e8729
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:59Z"
    hostIP: 10.0.13.60
    phase: Running
    podIP: 10.200.4.113
    podIPs:
    - ip: 10.200.4.113
    qosClass: Burstable
    startTime: "2022-06-30T12:44:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      kubectl.kubernetes.io/restartedAt: "2022-07-08T18:17:24Z"
    creationTimestamp: "2022-07-08T18:17:24Z"
    generateName: algnext-argo-workflows-controller-bc47b48c4-
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
      pod-template-hash: bc47b48c4
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:kubectl.kubernetes.io/restartedAt: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4bdde772-9295-444a-8ce3-6b0b91d6dda0"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"controller"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"LEADER_ELECTION_IDENTITY"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6060,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-07-08T18:17:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.96"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-08T18:18:25Z"
    name: algnext-argo-workflows-controller-bc47b48c4-djdr4
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: algnext-argo-workflows-controller-bc47b48c4
      uid: 4bdde772-9295-444a-8ce3-6b0b91d6dda0
    resourceVersion: "22366598"
    uid: 5cb85b9c-ed6d-4af6-9a9e-183b9e2800a8
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: controller
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: argo-workflows
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --configmap
      - algnext-argo-workflows-controller
      - --executor-image
      - docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      - --executor-image-pull-policy
      - Always
      - --loglevel
      - info
      - --gloglevel
      - "0"
      - --workflow-workers
      - "32"
      env:
      - name: ARGO_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: LEADER_ELECTION_IDENTITY
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: docker.io/bitnami/argo-workflow-controller:3.3.5-scratch-r0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 90
        periodSeconds: 60
        successThreshold: 1
        tcpSocket:
          port: 6060
        timeoutSeconds: 30
      name: controller
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 6060
        name: controller
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        tcpSocket:
          port: 6060
        timeoutSeconds: 30
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-argo-workflows-controller-token-fkwc6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
    serviceAccount: algnext-argo-workflows-controller
    serviceAccountName: algnext-argo-workflows-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: algnext-argo-workflows-controller-token-fkwc6
      secret:
        defaultMode: 420
        secretName: algnext-argo-workflows-controller-token-fkwc6
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-08T18:17:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-08T18:18:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-08T18:18:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-08T18:17:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8a296415ac626a721f1d0f840f93bee0e8205f3ce4a76973b5aadac755f95fe8
      image: bitnami/argo-workflow-controller:3.3.5-scratch-r0
      imageID: docker-pullable://bitnami/argo-workflow-controller@sha256:d9ff63553147cd09fb5bff3108153455a0c4052c5ca9a4eb1148d403a95abb1f
      lastState: {}
      name: controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-07-08T18:17:28Z"
    hostIP: 10.0.13.61
    phase: Running
    podIP: 10.200.74.96
    podIPs:
    - ip: 10.200.74.96
    qosClass: BestEffort
    startTime: "2022-07-08T18:17:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      kubectl.kubernetes.io/restartedAt: "2022-07-08T18:27:05Z"
    creationTimestamp: "2022-07-08T18:27:05Z"
    generateName: algnext-argo-workflows-server-66cd88cb47-
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
      pod-template-hash: 66cd88cb47
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:kubectl.kubernetes.io/restartedAt: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"47a22d45-ef2c-42a2-ac7f-36d55247a8c0"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"argo-server"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"BASE_HREF"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_CLUSTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":2746,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"tmp"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-07-08T18:27:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.86"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-08T18:27:23Z"
    name: algnext-argo-workflows-server-66cd88cb47-hzgb7
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: algnext-argo-workflows-server-66cd88cb47
      uid: 47a22d45-ef2c-42a2-ac7f-36d55247a8c0
    resourceVersion: "22368636"
    uid: 8235d79f-6166-4e4b-8ae2-ff9d8fbf9e06
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: server
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: argo-workflows
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - server
      - --configmap=algnext-argo-workflows-controller
      - --secure=false
      - --auth-mode
      - client
      - --port
      - "2746"
      env:
      - name: BASE_HREF
        value: /app/algnext/
      - name: IN_CLUSTER
        value: "true"
      - name: ARGO_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: docker.io/bitnami/argo-workflow-cli:3.3.5-scratch-r2
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 2746
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: argo-server
      ports:
      - containerPort: 2746
        name: web
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 2746
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-argo-workflows-server-token-4cqxt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
    serviceAccount: algnext-argo-workflows-server
    serviceAccountName: algnext-argo-workflows-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp
    - name: algnext-argo-workflows-server-token-4cqxt
      secret:
        defaultMode: 420
        secretName: algnext-argo-workflows-server-token-4cqxt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-08T18:27:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-08T18:27:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-08T18:27:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-08T18:27:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5d7637ae860d7e78b017c67bc5ac1e7cffcdf28176ee76419e8b47722eb794b6
      image: bitnami/argo-workflow-cli:3.3.5-scratch-r2
      imageID: docker-pullable://bitnami/argo-workflow-cli@sha256:ebc5244ed9c500477b7a3045e8275a2ba3fc02cf9208aeed06ff496a112e919a
      lastState: {}
      name: argo-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-07-08T18:27:07Z"
    hostIP: 10.0.12.126
    phase: Running
    podIP: 10.200.29.86
    podIPs:
    - ip: 10.200.29.86
    qosClass: BestEffort
    startTime: "2022-07-08T18:27:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-eventbus-controller-9cdb4778f-
    labels:
      app: algnext-eventbus-controller
      pod-template-hash: 9cdb4778f
      release: algnext
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a24b93c1-2f50-4bfd-8a0a-2b0f2f0813b2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"eventbus-controller"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"NATS_METRICS_EXPORTER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NATS_STREAMING_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.92"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:44:53Z"
    name: algnext-eventbus-controller-9cdb4778f-ktk5j
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: algnext-eventbus-controller-9cdb4778f
      uid: a24b93c1-2f50-4bfd-8a0a-2b0f2f0813b2
    resourceVersion: "19776873"
    uid: 346000e5-fb79-4e9e-a3c2-8ac6f815ef3a
  spec:
    containers:
    - args:
      - eventbus-controller
      - --namespaced
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NATS_STREAMING_IMAGE
        value: nats-streaming:0.22.1
      - name: NATS_METRICS_EXPORTER_IMAGE
        value: natsio/prometheus-nats-exporter:0.8.0
      image: quay.io/argoproj/argo-events:v1.6.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      name: eventbus-controller
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argo-events-sa-token-hdqmr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 9731
    serviceAccount: argo-events-sa
    serviceAccountName: argo-events-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argo-events-sa-token-hdqmr
      secret:
        defaultMode: 420
        secretName: argo-events-sa-token-hdqmr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://fb65c9057c15edbcc1b91a855b721fa52dac289f595d7ad5d960ffe31fddcddd
      image: quay.io/argoproj/argo-events:v1.6.0
      imageID: docker-pullable://quay.io/argoproj/argo-events@sha256:d65105c8cf3e525d8d1e6067992614191c89a907c50c48216a38e026e6a71332
      lastState: {}
      name: eventbus-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:48Z"
    hostIP: 10.0.13.59
    phase: Running
    podIP: 10.200.56.92
    podIPs:
    - ip: 10.200.56.92
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-eventsource-controller-8c99b48bc-
    labels:
      app: algnext-eventsource-controller
      pod-template-hash: 8c99b48bc
      release: algnext
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"699cf3dc-c877-4eeb-bf79-a73f1ae1bf46"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"eventsource-controller"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"EVENTSOURCE_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.90"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:44:52Z"
    name: algnext-eventsource-controller-8c99b48bc-bhzh5
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: algnext-eventsource-controller-8c99b48bc
      uid: 699cf3dc-c877-4eeb-bf79-a73f1ae1bf46
    resourceVersion: "19776861"
    uid: f3188b42-8385-4ecd-be54-39a2e7595429
  spec:
    containers:
    - args:
      - eventsource-controller
      - --namespaced
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: EVENTSOURCE_IMAGE
        value: quay.io/argoproj/argo-events:v1.6.0
      image: quay.io/argoproj/argo-events:v1.6.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      name: eventsource-controller
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argo-events-sa-token-hdqmr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 9731
    serviceAccount: argo-events-sa
    serviceAccountName: argo-events-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argo-events-sa-token-hdqmr
      secret:
        defaultMode: 420
        secretName: argo-events-sa-token-hdqmr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e97cea2c0e4038151d1e6e9d38e4f32c90519c75b5b3849d29c1638f2c2734af
      image: quay.io/argoproj/argo-events:v1.6.0
      imageID: docker-pullable://quay.io/argoproj/argo-events@sha256:d65105c8cf3e525d8d1e6067992614191c89a907c50c48216a38e026e6a71332
      lastState: {}
      name: eventsource-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:48Z"
    hostIP: 10.0.12.125
    phase: Running
    podIP: 10.200.45.90
    podIPs:
    - ip: 10.200.45.90
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d7896ad385f216aacb163112514df14dd73075ede9b1d5d8297d1082a635a734
      checksum/dashboard-provider: deaaaf2448c97596cc368026544a49b8ecbb8efd729ecc44814399aceef000f9
      checksum/secret: c01667fd514fce67f5e8f16e3bada1c2f4262274ce6cb72a311586a83bb0315c
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-grafana-69d7dcdc94-
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      helm.sh/chart: grafana-7.8.1
      pod-template-hash: 69d7dcdc94
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/dashboard-provider: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cd20d428-15c2-4b38-b3b5-a69def548a63"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"grafana"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"GF_SECURITY_ADMIN_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/bitnami/grafana/conf/provisioning/dashboards"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/grafana/conf/provisioning/datasources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/grafana/dashboards/argo-workflows-controller-dash.json"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/grafana/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"argo-workflows-controller-dash"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"dashboards-provider"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"data"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
            k:{"name":"datasources"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.4.112"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:51Z"
    name: algnext-grafana-69d7dcdc94-8kbmb
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: algnext-grafana-69d7dcdc94
      uid: cd20d428-15c2-4b38-b3b5-a69def548a63
    resourceVersion: "19777302"
    uid: 7fd2f6d1-d8ed-4153-bcef-7c2e582e67d0
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: grafana
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: grafana
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: GF_SECURITY_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: GF_SECURITY_ADMIN_PASSWORD
            name: algnext-grafana-admin
      envFrom:
      - configMapRef:
          name: algnext-grafana-envvars
      image: docker.io/bitnami/grafana:8.5.3-debian-10-r5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /api/health
          port: dashboard
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: grafana
      ports:
      - containerPort: 3000
        name: dashboard
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /api/health
          port: dashboard
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/bitnami/grafana/data
        name: data
      - mountPath: /opt/bitnami/grafana/conf/provisioning/dashboards
        name: dashboards-provider
      - mountPath: /opt/bitnami/grafana/dashboards/argo-workflows-controller-dash.json
        name: argo-workflows-controller-dash
        subPath: argo-workflows-controller-dash.json
      - mountPath: /opt/bitnami/grafana/conf/provisioning/datasources
        name: datasources
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-13-60.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
    serviceAccount: algnext-grafana
    serviceAccountName: algnext-grafana
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: algnext-grafana
    - configMap:
        defaultMode: 420
        name: algnext-grafana-provider
      name: dashboards-provider
    - configMap:
        defaultMode: 420
        name: argo-workflows-controller-dash
      name: argo-workflows-controller-dash
    - name: datasources
      secret:
        defaultMode: 420
        secretName: grafana-datasources
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://80dfeadcc9a69e195de41845bf551d341723e355a4f305b3922153af2104caab
      image: bitnami/grafana:8.5.3-debian-10-r5
      imageID: docker-pullable://bitnami/grafana@sha256:d22c81934769074874aed2c7e593adfb90299ca9e5d2a5c1f7177fd5deb2e6c1
      lastState: {}
      name: grafana
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:59Z"
    hostIP: 10.0.13.60
    phase: Running
    podIP: 10.200.4.112
    podIPs:
    - ip: 10.200.4.112
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 8c938de560d9ec36e6f0645a081c3da3ac5e7c97fab385ebadbd76c07633df27
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-kube-prometheus-blackbox-exporter-57bc6fdc94-
    labels:
      app.kubernetes.io/component: blackbox-exporter
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
      pod-template-hash: 57bc6fdc94
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"31d98a48-069d-49ed-909c-18d965737f4d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"blackbox-exporter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":19115,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/blackbox-exporter/conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"blackbox-exporter-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.123"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:52Z"
    name: algnext-kube-prometheus-blackbox-exporter-57bc6fdc94-8qxgb
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: algnext-kube-prometheus-blackbox-exporter-57bc6fdc94
      uid: 31d98a48-069d-49ed-909c-18d965737f4d
    resourceVersion: "19777315"
    uid: cabbb16b-2fa9-4043-98b7-aef7c178b141
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: blackbox-exporter
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: kube-prometheus
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --config.file=/bitnami/blackbox-exporter/conf/config.yml
      - --web.listen-address=:19115
      image: docker.io/bitnami/blackbox-exporter:0.20.0-debian-10-r66
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: blackbox-exporter
      ports:
      - containerPort: 19115
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/blackbox-exporter/conf
        name: blackbox-exporter-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-kube-prometheus-blackbox-exporter-token-89rxr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
    serviceAccount: algnext-kube-prometheus-blackbox-exporter
    serviceAccountName: algnext-kube-prometheus-blackbox-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: algnext-kube-prometheus-blackbox-exporter
      name: blackbox-exporter-config
    - name: algnext-kube-prometheus-blackbox-exporter-token-89rxr
      secret:
        defaultMode: 420
        secretName: algnext-kube-prometheus-blackbox-exporter-token-89rxr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b38df3d3ff8fed4dbf58e8f0759e68a2a1fe9843c09fa6318e526ff617456ef7
      image: bitnami/blackbox-exporter:0.20.0-debian-10-r66
      imageID: docker-pullable://bitnami/blackbox-exporter@sha256:39ac0a875dff0e05c65d02053d5e638e717665000007d9ebb5105f77e4ff2e53
      lastState: {}
      name: blackbox-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:50Z"
    hostIP: 10.0.12.122
    phase: Running
    podIP: 10.200.25.123
    podIPs:
    - ip: 10.200.25.123
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-kube-prometheus-operator-5f85cb66-
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
      pod-template-hash: 5f85cb66
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ac0b9c5f-9476-447f-95e4-fe22e09f69db"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"prometheus-operator"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"PROMETHEUS_CONFIG_RELOADER"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.83"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:22Z"
    name: algnext-kube-prometheus-operator-5f85cb66-r4x9l
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: algnext-kube-prometheus-operator-5f85cb66
      uid: ac0b9c5f-9476-447f-95e4-fe22e09f69db
    resourceVersion: "19777127"
    uid: bb30cb9b-3a2b-4d89-a432-79b117f13521
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: operator
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: kube-prometheus
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --kubelet-service=kube-system/algnext-kube-prometheus-kubelet
      - --log-format=logfmt
      - --log-level=info
      - --localhost=127.0.0.1
      - --prometheus-config-reloader=$(PROMETHEUS_CONFIG_RELOADER)
      env:
      - name: PROMETHEUS_CONFIG_RELOADER
        valueFrom:
          configMapKeyRef:
            key: prometheus-config-reloader
            name: algnext-kube-prometheus-operator
      image: docker.io/bitnami/prometheus-operator:0.56.3-debian-10-r0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /metrics
          port: http
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: prometheus-operator
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /metrics
          port: http
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-kube-prometheus-operator-token-t6zrl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-kube-prometheus-operator
    serviceAccountName: algnext-kube-prometheus-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: algnext-kube-prometheus-operator-token-t6zrl
      secret:
        defaultMode: 420
        secretName: algnext-kube-prometheus-operator-token-t6zrl
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://42d9fe6abbeb530e48b3cebed69487ef177de288d19e8db2b878f558c7c7cb47
      image: bitnami/prometheus-operator:0.56.3-debian-10-r0
      imageID: docker-pullable://bitnami/prometheus-operator@sha256:5918c9a4d49616cf70c764c7dc471aaffdd2c5453d08bbd0967d5927d58e8729
      lastState: {}
      name: prometheus-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:50Z"
    hostIP: 10.0.13.61
    phase: Running
    podIP: 10.200.74.83
    podIPs:
    - ip: 10.200.74.83
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-kube-state-metrics-75bb59fbf9-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      helm.sh/chart: kube-state-metrics-2.2.24
      pod-template-hash: 75bb59fbf9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6616b71d-615f-401e-9c55-4f0489e48b4f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-state-metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.89"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:23Z"
    name: algnext-kube-state-metrics-75bb59fbf9-jqcwk
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: algnext-kube-state-metrics-75bb59fbf9
      uid: 6616b71d-615f-401e-9c55-4f0489e48b4f
    resourceVersion: "19777137"
    uid: 324c7895-2d7e-422d-895e-9ea18d6f5c2d
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: kube-state-metrics
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --resources=certificatesigningrequests
      - --resources=configmaps
      - --resources=cronjobs
      - --resources=daemonsets
      - --resources=deployments
      - --resources=endpoints
      - --resources=horizontalpodautoscalers
      - --resources=ingresses
      - --resources=jobs
      - --resources=limitranges
      - --resources=mutatingwebhookconfigurations
      - --resources=namespaces
      - --resources=networkpolicies
      - --resources=nodes
      - --resources=persistentvolumeclaims
      - --resources=persistentvolumes
      - --resources=poddisruptionbudgets
      - --resources=pods
      - --resources=replicasets
      - --resources=replicationcontrollers
      - --resources=resourcequotas
      - --resources=secrets
      - --resources=services
      - --resources=statefulsets
      - --resources=storageclasses
      - --resources=volumeattachments
      image: docker.io/bitnami/kube-state-metrics:2.4.2-debian-10-r72
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: http
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: http
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-kube-state-metrics-token-d5lvd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-kube-state-metrics
    serviceAccountName: algnext-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: algnext-kube-state-metrics-token-d5lvd
      secret:
        defaultMode: 420
        secretName: algnext-kube-state-metrics-token-d5lvd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://03fdd0eeecabafe1a7228d91b1a66df64e592e21488e4d2c72a402c2c24f6215
      image: bitnami/kube-state-metrics:2.4.2-debian-10-r72
      imageID: docker-pullable://bitnami/kube-state-metrics@sha256:fb5bfcfd49f15721ca1f90bb2fe13a6f4eb8b3c9576f76d4fd31604a63a40391
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:50Z"
    hostIP: 10.0.12.125
    phase: Running
    podIP: 10.200.45.89
    podIPs:
    - ip: 10.200.45.89
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-node-exporter-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      controller-revision-hash: 794c74f699
      helm.sh/chart: node-exporter-2.4.16
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"154b0376-0086-4cd2-ab93-b2dd90b6f93c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.13.58"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:23Z"
    name: algnext-node-exporter-527w4
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: algnext-node-exporter
      uid: 154b0376-0086-4cd2-ab93-b2dd90b6f93c
    resourceVersion: "19777142"
    uid: 12e16a16-636b-4c96-83d5-0752bf38e718
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-13-58.us-gov-west-1.compute.internal
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: node-exporter
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --web.listen-address=0.0.0.0:9100
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
      image: docker.io/bitnami/node-exporter:1.3.1-debian-10-r160
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-node-exporter-token-p9lmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-13-58.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-node-exporter
    serviceAccountName: algnext-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: algnext-node-exporter-token-p9lmb
      secret:
        defaultMode: 420
        secretName: algnext-node-exporter-token-p9lmb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6cedbed14dc7940eb22d89cddc22108c1e80749779ba3a97ea76a988cfd0dc71
      image: bitnami/node-exporter:1.3.1-debian-10-r160
      imageID: docker-pullable://bitnami/node-exporter@sha256:d4e1d30f3523e8c28377cd49d46b5a41a5b0532173a33e6398549062cfbbfd35
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:46Z"
    hostIP: 10.0.13.58
    phase: Running
    podIP: 10.0.13.58
    podIPs:
    - ip: 10.0.13.58
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-node-exporter-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      controller-revision-hash: 794c74f699
      helm.sh/chart: node-exporter-2.4.16
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"154b0376-0086-4cd2-ab93-b2dd90b6f93c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.13.59"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:24Z"
    name: algnext-node-exporter-7jcjb
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: algnext-node-exporter
      uid: 154b0376-0086-4cd2-ab93-b2dd90b6f93c
    resourceVersion: "19777156"
    uid: f4af5393-8faf-4a29-b3aa-40a709894fb3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-13-59.us-gov-west-1.compute.internal
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: node-exporter
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --web.listen-address=0.0.0.0:9100
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
      image: docker.io/bitnami/node-exporter:1.3.1-debian-10-r160
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-node-exporter-token-p9lmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-node-exporter
    serviceAccountName: algnext-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: algnext-node-exporter-token-p9lmb
      secret:
        defaultMode: 420
        secretName: algnext-node-exporter-token-p9lmb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://24ef04581e5369eaea3479078320967372c3608be556c73ae14aca899767d663
      image: bitnami/node-exporter:1.3.1-debian-10-r160
      imageID: docker-pullable://bitnami/node-exporter@sha256:d4e1d30f3523e8c28377cd49d46b5a41a5b0532173a33e6398549062cfbbfd35
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:46Z"
    hostIP: 10.0.13.59
    phase: Running
    podIP: 10.0.13.59
    podIPs:
    - ip: 10.0.13.59
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-node-exporter-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      controller-revision-hash: 794c74f699
      helm.sh/chart: node-exporter-2.4.16
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"154b0376-0086-4cd2-ab93-b2dd90b6f93c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.13.61"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:18Z"
    name: algnext-node-exporter-7nhqv
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: algnext-node-exporter
      uid: 154b0376-0086-4cd2-ab93-b2dd90b6f93c
    resourceVersion: "19777090"
    uid: c3b65a3b-2907-4ea0-ac53-91a336bf38d2
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-13-61.us-gov-west-1.compute.internal
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: node-exporter
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --web.listen-address=0.0.0.0:9100
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
      image: docker.io/bitnami/node-exporter:1.3.1-debian-10-r160
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-node-exporter-token-p9lmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-node-exporter
    serviceAccountName: algnext-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: algnext-node-exporter-token-p9lmb
      secret:
        defaultMode: 420
        secretName: algnext-node-exporter-token-p9lmb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://eb9c05dd72e730d025dca4ec6c55b3519aa6b227bc67ae4ede8910d1b06287d1
      image: bitnami/node-exporter:1.3.1-debian-10-r160
      imageID: docker-pullable://bitnami/node-exporter@sha256:d4e1d30f3523e8c28377cd49d46b5a41a5b0532173a33e6398549062cfbbfd35
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:46Z"
    hostIP: 10.0.13.61
    phase: Running
    podIP: 10.0.13.61
    podIPs:
    - ip: 10.0.13.61
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-node-exporter-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      controller-revision-hash: 794c74f699
      helm.sh/chart: node-exporter-2.4.16
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"154b0376-0086-4cd2-ab93-b2dd90b6f93c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.12.122"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:18Z"
    name: algnext-node-exporter-9ggb8
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: algnext-node-exporter
      uid: 154b0376-0086-4cd2-ab93-b2dd90b6f93c
    resourceVersion: "19777096"
    uid: e8b71047-796b-4fc2-8a78-2b05346f870b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-12-122.us-gov-west-1.compute.internal
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: node-exporter
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --web.listen-address=0.0.0.0:9100
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
      image: docker.io/bitnami/node-exporter:1.3.1-debian-10-r160
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-node-exporter-token-p9lmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-node-exporter
    serviceAccountName: algnext-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: algnext-node-exporter-token-p9lmb
      secret:
        defaultMode: 420
        secretName: algnext-node-exporter-token-p9lmb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bb3c1f3caa0071737ea6ee0ddff21ac702cf83a690f83692d6a7a012fb54abeb
      image: bitnami/node-exporter:1.3.1-debian-10-r160
      imageID: docker-pullable://bitnami/node-exporter@sha256:d4e1d30f3523e8c28377cd49d46b5a41a5b0532173a33e6398549062cfbbfd35
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:46Z"
    hostIP: 10.0.12.122
    phase: Running
    podIP: 10.0.12.122
    podIPs:
    - ip: 10.0.12.122
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-node-exporter-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      controller-revision-hash: 794c74f699
      helm.sh/chart: node-exporter-2.4.16
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"154b0376-0086-4cd2-ab93-b2dd90b6f93c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.12.123"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:16Z"
    name: algnext-node-exporter-d7dx7
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: algnext-node-exporter
      uid: 154b0376-0086-4cd2-ab93-b2dd90b6f93c
    resourceVersion: "19777079"
    uid: 2605fcec-6f99-42ba-8e85-9d9df7feb4a7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-12-123.us-gov-west-1.compute.internal
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: node-exporter
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --web.listen-address=0.0.0.0:9100
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
      image: docker.io/bitnami/node-exporter:1.3.1-debian-10-r160
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-node-exporter-token-p9lmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-12-123.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-node-exporter
    serviceAccountName: algnext-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: algnext-node-exporter-token-p9lmb
      secret:
        defaultMode: 420
        secretName: algnext-node-exporter-token-p9lmb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5a4b0648acf66c17d61ed97eaa858f7061810486fef91529cb8bc7a8343bd7a2
      image: bitnami/node-exporter:1.3.1-debian-10-r160
      imageID: docker-pullable://bitnami/node-exporter@sha256:d4e1d30f3523e8c28377cd49d46b5a41a5b0532173a33e6398549062cfbbfd35
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:46Z"
    hostIP: 10.0.12.123
    phase: Running
    podIP: 10.0.12.123
    podIPs:
    - ip: 10.0.12.123
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-node-exporter-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      controller-revision-hash: 794c74f699
      helm.sh/chart: node-exporter-2.4.16
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"154b0376-0086-4cd2-ab93-b2dd90b6f93c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.13.62"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:19Z"
    name: algnext-node-exporter-gb9hm
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: algnext-node-exporter
      uid: 154b0376-0086-4cd2-ab93-b2dd90b6f93c
    resourceVersion: "19777106"
    uid: a48d4feb-d6be-4220-ab1d-f7cb28275971
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-13-62.us-gov-west-1.compute.internal
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: node-exporter
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --web.listen-address=0.0.0.0:9100
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
      image: docker.io/bitnami/node-exporter:1.3.1-debian-10-r160
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-node-exporter-token-p9lmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-13-62.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-node-exporter
    serviceAccountName: algnext-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: algnext-node-exporter-token-p9lmb
      secret:
        defaultMode: 420
        secretName: algnext-node-exporter-token-p9lmb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://03d009913dc15b336ac43ed1a6d1c76ce56c8f45e520ce9206a1357c6613aa1b
      image: bitnami/node-exporter:1.3.1-debian-10-r160
      imageID: docker-pullable://bitnami/node-exporter@sha256:d4e1d30f3523e8c28377cd49d46b5a41a5b0532173a33e6398549062cfbbfd35
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:46Z"
    hostIP: 10.0.13.62
    phase: Running
    podIP: 10.0.13.62
    podIPs:
    - ip: 10.0.13.62
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-node-exporter-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      controller-revision-hash: 794c74f699
      helm.sh/chart: node-exporter-2.4.16
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"154b0376-0086-4cd2-ab93-b2dd90b6f93c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.12.125"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:20Z"
    name: algnext-node-exporter-hc9bh
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: algnext-node-exporter
      uid: 154b0376-0086-4cd2-ab93-b2dd90b6f93c
    resourceVersion: "19777114"
    uid: 73446e2a-1541-4501-bef9-a075702bb45b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-12-125.us-gov-west-1.compute.internal
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: node-exporter
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --web.listen-address=0.0.0.0:9100
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
      image: docker.io/bitnami/node-exporter:1.3.1-debian-10-r160
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-node-exporter-token-p9lmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-node-exporter
    serviceAccountName: algnext-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: algnext-node-exporter-token-p9lmb
      secret:
        defaultMode: 420
        secretName: algnext-node-exporter-token-p9lmb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e91d7673698c1b1aa1817119f258c39d77a3423f3f5b046ac3603b025b5b9c04
      image: bitnami/node-exporter:1.3.1-debian-10-r160
      imageID: docker-pullable://bitnami/node-exporter@sha256:d4e1d30f3523e8c28377cd49d46b5a41a5b0532173a33e6398549062cfbbfd35
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:46Z"
    hostIP: 10.0.12.125
    phase: Running
    podIP: 10.0.12.125
    podIPs:
    - ip: 10.0.12.125
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-node-exporter-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      controller-revision-hash: 794c74f699
      helm.sh/chart: node-exporter-2.4.16
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"154b0376-0086-4cd2-ab93-b2dd90b6f93c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.12.124"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:22Z"
    name: algnext-node-exporter-pmkpt
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: algnext-node-exporter
      uid: 154b0376-0086-4cd2-ab93-b2dd90b6f93c
    resourceVersion: "19777133"
    uid: 6c441a87-9059-4992-915f-832b83ae3b35
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-12-124.us-gov-west-1.compute.internal
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: node-exporter
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --web.listen-address=0.0.0.0:9100
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
      image: docker.io/bitnami/node-exporter:1.3.1-debian-10-r160
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-node-exporter-token-p9lmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-12-124.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-node-exporter
    serviceAccountName: algnext-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: algnext-node-exporter-token-p9lmb
      secret:
        defaultMode: 420
        secretName: algnext-node-exporter-token-p9lmb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c95464a00e9bef1788783ea2ee08f679b9f1496d75a233fdc0f2433f456d87d3
      image: bitnami/node-exporter:1.3.1-debian-10-r160
      imageID: docker-pullable://bitnami/node-exporter@sha256:d4e1d30f3523e8c28377cd49d46b5a41a5b0532173a33e6398549062cfbbfd35
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:46Z"
    hostIP: 10.0.12.124
    phase: Running
    podIP: 10.0.12.124
    podIPs:
    - ip: 10.0.12.124
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-node-exporter-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      controller-revision-hash: 794c74f699
      helm.sh/chart: node-exporter-2.4.16
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"154b0376-0086-4cd2-ab93-b2dd90b6f93c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.12.126"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:24Z"
    name: algnext-node-exporter-qthpj
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: algnext-node-exporter
      uid: 154b0376-0086-4cd2-ab93-b2dd90b6f93c
    resourceVersion: "19777161"
    uid: 0870c82d-b4e8-4607-88dd-88aa8070da26
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-12-126.us-gov-west-1.compute.internal
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: node-exporter
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --web.listen-address=0.0.0.0:9100
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
      image: docker.io/bitnami/node-exporter:1.3.1-debian-10-r160
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-node-exporter-token-p9lmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-node-exporter
    serviceAccountName: algnext-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: algnext-node-exporter-token-p9lmb
      secret:
        defaultMode: 420
        secretName: algnext-node-exporter-token-p9lmb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5d5c3aca51827ac4a3c51c8808f4cdebe0896a1afda808459d088dc3ef97e027
      image: bitnami/node-exporter:1.3.1-debian-10-r160
      imageID: docker-pullable://bitnami/node-exporter@sha256:d4e1d30f3523e8c28377cd49d46b5a41a5b0532173a33e6398549062cfbbfd35
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:46Z"
    hostIP: 10.0.12.126
    phase: Running
    podIP: 10.0.12.126
    podIPs:
    - ip: 10.0.12.126
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-node-exporter-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      controller-revision-hash: 794c74f699
      helm.sh/chart: node-exporter-2.4.16
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"154b0376-0086-4cd2-ab93-b2dd90b6f93c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.13.60"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:24Z"
    name: algnext-node-exporter-xsw5r
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: algnext-node-exporter
      uid: 154b0376-0086-4cd2-ab93-b2dd90b6f93c
    resourceVersion: "19777151"
    uid: 0a84341e-88c7-47df-9e23-6e023b59ee55
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-13-60.us-gov-west-1.compute.internal
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: node-exporter
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --web.listen-address=0.0.0.0:9100
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
      image: docker.io/bitnami/node-exporter:1.3.1-debian-10-r160
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-node-exporter-token-p9lmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-13-60.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-node-exporter
    serviceAccountName: algnext-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: algnext-node-exporter-token-p9lmb
      secret:
        defaultMode: 420
        secretName: algnext-node-exporter-token-p9lmb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c1aa6ef6b4ff278baa9b45d8ac5266c373878b72970c46617576b859a04c56e4
      image: bitnami/node-exporter:1.3.1-debian-10-r160
      imageID: docker-pullable://bitnami/node-exporter@sha256:d4e1d30f3523e8c28377cd49d46b5a41a5b0532173a33e6398549062cfbbfd35
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:46Z"
    hostIP: 10.0.13.60
    phase: Running
    podIP: 10.0.13.60
    podIPs:
    - ip: 10.0.13.60
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-postgresql-
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      controller-revision-hash: algnext-postgresql-6b8bdb6d7c
      helm.sh/chart: postgresql-11.2.6
      statefulset.kubernetes.io/pod-name: algnext-postgresql-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"740894fb-a693-4888-8035-8440754e0a93"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"postgresql"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"BITNAMI_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"PGDATA"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRES_DB"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRES_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"POSTGRESQL_CLIENT_MIN_MESSAGES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRESQL_ENABLE_LDAP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRESQL_ENABLE_TLS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRESQL_LOG_CONNECTIONS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRESQL_LOG_DISCONNECTIONS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRESQL_LOG_HOSTNAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRESQL_PGAUDIT_LOG_CATALOG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRESQL_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRESQL_SHARED_PRELOAD_LIBRARIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRESQL_VOLUME_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":5432,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/postgresql"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/dev/shm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"data"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
            k:{"name":"dshm"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.10.112"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:27Z"
    name: algnext-postgresql-0
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: algnext-postgresql
      uid: 740894fb-a693-4888-8035-8440754e0a93
    resourceVersion: "19777174"
    uid: 6ca608c9-baac-41a0-8dc1-5b139dc55a2e
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: primary
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: postgresql
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: POSTGRESQL_PORT_NUMBER
        value: "5432"
      - name: POSTGRESQL_VOLUME_DIR
        value: /bitnami/postgresql
      - name: PGDATA
        value: /bitnami/postgresql/data
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgres-password
            name: algnext-postgresql
      - name: POSTGRES_DB
        value: bn_argo_workflows
      - name: POSTGRESQL_ENABLE_LDAP
        value: "no"
      - name: POSTGRESQL_ENABLE_TLS
        value: "no"
      - name: POSTGRESQL_LOG_HOSTNAME
        value: "false"
      - name: POSTGRESQL_LOG_CONNECTIONS
        value: "false"
      - name: POSTGRESQL_LOG_DISCONNECTIONS
        value: "false"
      - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
        value: "off"
      - name: POSTGRESQL_CLIENT_MIN_MESSAGES
        value: error
      - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
        value: pgaudit
      image: docker.io/bitnami/postgresql:14.3.0-debian-10-r8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - exec pg_isready -U "postgres" -d "dbname=bn_argo_workflows" -h 127.0.0.1
            -p 5432
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: postgresql
      ports:
      - containerPort: 5432
        name: tcp-postgresql
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - -e
          - |
            exec pg_isready -U "postgres" -d "dbname=bn_argo_workflows" -h 127.0.0.1 -p 5432
            [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /dev/shm
        name: dshm
      - mountPath: /bitnami/postgresql
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: algnext-postgresql-0
    nodeName: ip-10-0-12-123.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
    serviceAccount: default
    serviceAccountName: default
    subdomain: algnext-postgresql-hl
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-algnext-postgresql-0
    - emptyDir:
        medium: Memory
      name: dshm
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3173381b35f031f3c18ef32b4650c460044978b2093e146ce1f3987be76b0141
      image: bitnami/postgresql:14.3.0-debian-10-r8
      imageID: docker-pullable://bitnami/postgresql@sha256:caacb059999534e7bb2cd2f53421677956f5dab21e26d862f1a55841a7a82262
      lastState: {}
      name: postgresql
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:56Z"
    hostIP: 10.0.12.123
    phase: Running
    podIP: 10.200.10.112
    podIPs:
    - ip: 10.200.10.112
    qosClass: Burstable
    startTime: "2022-06-30T12:44:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: algnext-sensor-controller-664dff7b95-
    labels:
      app: algnext-sensor-controller
      pod-template-hash: 664dff7b95
      release: algnext
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"720277d4-64ab-45cb-9577-aab41698b252"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"sensor-controller"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"SENSOR_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.124"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:44:51Z"
    name: algnext-sensor-controller-664dff7b95-kgqc2
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: algnext-sensor-controller-664dff7b95
      uid: 720277d4-64ab-45cb-9577-aab41698b252
    resourceVersion: "19776848"
    uid: 492a83e9-5ddc-4f12-9b72-31c12ff61d91
  spec:
    containers:
    - args:
      - sensor-controller
      - --namespaced
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: SENSOR_IMAGE
        value: quay.io/argoproj/argo-events:v1.6.0
      image: quay.io/argoproj/argo-events:v1.6.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      name: sensor-controller
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argo-events-sa-token-hdqmr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 9731
    serviceAccount: argo-events-sa
    serviceAccountName: argo-events-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argo-events-sa-token-hdqmr
      secret:
        defaultMode: 420
        secretName: argo-events-sa-token-hdqmr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bff21adfe1831c4dc85961ccf61ae3419e9550d5f112ec007852cca71bd7ecd5
      image: quay.io/argoproj/argo-events:v1.6.0
      imageID: docker-pullable://quay.io/argoproj/argo-events@sha256:d65105c8cf3e525d8d1e6067992614191c89a907c50c48216a38e026e6a71332
      lastState: {}
      name: sensor-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:48Z"
    hostIP: 10.0.12.122
    phase: Running
    podIP: 10.200.25.124
    podIPs:
    - ip: 10.200.25.124
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/credentials-secret: 4352ee7f804ca17d5a91bf7f2ac440c439838055e927d1e52fcab48f86a01947
    creationTimestamp: "2022-06-30T12:44:45Z"
    generateName: argo-artifacts-f59f788b9-
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: minio
      helm.sh/chart: minio-11.5.1
      pod-template-hash: f59f788b9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/credentials-secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a568d1fc-7750-4b3e-8337-fece049c2b31"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"minio"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"BITNAMI_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MINIO_BROWSER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MINIO_CONSOLE_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MINIO_DEFAULT_BUCKETS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MINIO_FORCE_NEW_KEYS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MINIO_PROMETHEUS_AUTH_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MINIO_ROOT_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"MINIO_ROOT_USER"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"MINIO_SCHEME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"data"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.70.217"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:00Z"
    name: argo-artifacts-f59f788b9-zngrt
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argo-artifacts-f59f788b9
      uid: a568d1fc-7750-4b3e-8337-fece049c2b31
    resourceVersion: "19776978"
    uid: c591e20b-f0dc-4294-a8fb-1c6e0d184332
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: minio
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: MINIO_SCHEME
        value: http
      - name: MINIO_FORCE_NEW_KEYS
        value: "no"
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: root-user
            name: argo-artifacts
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: root-password
            name: argo-artifacts
      - name: MINIO_DEFAULT_BUCKETS
        value: algnext-dev-input algnext-dev-output
      - name: MINIO_BROWSER
        value: "on"
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      - name: MINIO_CONSOLE_PORT_NUMBER
        value: "9001"
      image: docker.io/bitnami/minio:2022.5.8-debian-10-r8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /minio/health/live
          port: minio-api
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      name: minio
      ports:
      - containerPort: 9000
        name: minio-api
        protocol: TCP
      - containerPort: 9001
        name: minio-console
        protocol: TCP
      readinessProbe:
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: minio-api
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argo-artifacts-token-lt2js
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-13-62.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
    serviceAccount: argo-artifacts
    serviceAccountName: argo-artifacts
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: argo-artifacts
    - name: argo-artifacts-token-lt2js
      secret:
        defaultMode: 420
        secretName: argo-artifacts-token-lt2js
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e8a7e198ea0b61e84a5c697add7d3d1ba095ea6d3a58960475c41f9f86a6da74
      image: bitnami/minio:2022.5.8-debian-10-r8
      imageID: docker-pullable://bitnami/minio@sha256:b38ec94d39edfc743918fb0c7858311c6396f937e8380aacd7e5d3f36462213a
      lastState: {}
      name: minio
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:55Z"
    hostIP: 10.0.13.62
    phase: Running
    podIP: 10.200.70.217
    podIPs:
    - ip: 10.200.70.217
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: coinflip-recursive-bgqfp-1723503138
      workflows.argoproj.io/node-name: coinflip-recursive-bgqfp[0].flip-coin
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"coinflip-recursive-bgqfp/coinflip-recursive-bgqfp-1723503138/main.log"}}],"result":"heads"}'
    creationTimestamp: "2022-07-07T20:05:52Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: coinflip-recursive-bgqfp
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e8834d61-08df-4670-b299-fa00243f4bb0"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/mainctrfs/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"argo-staging"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-07-07T20:05:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-07-07T20:06:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.107"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-07T20:06:02Z"
    name: coinflip-recursive-bgqfp-1723503138
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: coinflip-recursive-bgqfp
      uid: e8834d61-08df-4670-b299-fa00243f4bb0
    resourceVersion: "22075268"
    uid: d49257c7-990b-41b4-8e82-1fa054aa03bf
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-bgqfp
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-bgqfp/coinflip-recursive-bgqfp-1723503138"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-bgqfp-1723503138
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /mainctrfs/argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - /argo/staging/script
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - python
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-bgqfp/coinflip-recursive-bgqfp-1723503138"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-bgqfp-1723503138
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:alpine3.6
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-bgqfp
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-bgqfp/coinflip-recursive-bgqfp-1723503138"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-bgqfp-1723503138
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - emptyDir: {}
      name: argo-staging
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:05:55Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:05:52Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:05:52Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:05:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0447897b3dbd23446b252b7a085d615b629678f33a986cb24eabda3d8b0ae62b
      image: python:alpine3.6
      imageID: docker-pullable://python@sha256:766a961bf699491995cc29e20958ef11fd63741ff41dcc70ec34355b39d52971
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://0447897b3dbd23446b252b7a085d615b629678f33a986cb24eabda3d8b0ae62b
          exitCode: 0
          finishedAt: "2022-07-07T20:06:01Z"
          reason: Completed
          startedAt: "2022-07-07T20:06:01Z"
    - containerID: docker://946d3ab9dc098d00a41a396b8c62dbccca04d668655e0a734c75cc24b7d157c7
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://946d3ab9dc098d00a41a396b8c62dbccca04d668655e0a734c75cc24b7d157c7
          exitCode: 0
          finishedAt: "2022-07-07T20:06:01Z"
          reason: Completed
          startedAt: "2022-07-07T20:05:56Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://5e25aeb54df02a23334655c22d24f838e277dd2a88ff2e46f6837536a9a8f9f0
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://5e25aeb54df02a23334655c22d24f838e277dd2a88ff2e46f6837536a9a8f9f0
          exitCode: 0
          finishedAt: "2022-07-07T20:05:54Z"
          reason: Completed
          startedAt: "2022-07-07T20:05:54Z"
    phase: Succeeded
    podIP: 10.200.56.107
    podIPs:
    - ip: 10.200.56.107
    qosClass: BestEffort
    startTime: "2022-07-07T20:05:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: coinflip-recursive-bgqfp-3147882231
      workflows.argoproj.io/node-name: coinflip-recursive-bgqfp[1].heads
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"coinflip-recursive-bgqfp/coinflip-recursive-bgqfp-3147882231/main.log"}}]}'
    creationTimestamp: "2022-07-07T20:06:12Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: coinflip-recursive-bgqfp
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e8834d61-08df-4670-b299-fa00243f4bb0"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-07-07T20:06:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-07-07T20:06:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.108"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-07T20:06:20Z"
    name: coinflip-recursive-bgqfp-3147882231
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: coinflip-recursive-bgqfp
      uid: e8834d61-08df-4670-b299-fa00243f4bb0
    resourceVersion: "22075333"
    uid: 0c2d4013-d20d-4434-b674-562a387fbf1b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-bgqfp
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"heads","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.6","command":["sh","-c"],"args":["echo
          \"it was heads\""],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-bgqfp/coinflip-recursive-bgqfp-3147882231"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-bgqfp-3147882231
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - echo "it was heads"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"heads","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.6","command":["sh","-c"],"args":["echo
          \"it was heads\""],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-bgqfp/coinflip-recursive-bgqfp-3147882231"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-bgqfp-3147882231
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: alpine:3.6
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-bgqfp
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"heads","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.6","command":["sh","-c"],"args":["echo
          \"it was heads\""],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-bgqfp/coinflip-recursive-bgqfp-3147882231"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-bgqfp-3147882231
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:15Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:12Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:12Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c5aba739316abe5818cc69d4861db82b207ec25f1ac1ede89043edf7a2106ee7
      image: alpine:3.6
      imageID: docker-pullable://alpine@sha256:66790a2b79e1ea3e1dabac43990c54aca5d1ddf268d9a5a0285e4167c8b24475
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c5aba739316abe5818cc69d4861db82b207ec25f1ac1ede89043edf7a2106ee7
          exitCode: 0
          finishedAt: "2022-07-07T20:06:19Z"
          reason: Completed
          startedAt: "2022-07-07T20:06:19Z"
    - containerID: docker://86f3c66430598eb51145cf9ae07120bd62d78159786e285d688a8cf1ea3ae2fa
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://86f3c66430598eb51145cf9ae07120bd62d78159786e285d688a8cf1ea3ae2fa
          exitCode: 0
          finishedAt: "2022-07-07T20:06:19Z"
          reason: Completed
          startedAt: "2022-07-07T20:06:16Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://33e1b8a3b9cf5d5c1966e7befac8650bfe3a6c1e00952c91e5686b1de2ef76db
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://33e1b8a3b9cf5d5c1966e7befac8650bfe3a6c1e00952c91e5686b1de2ef76db
          exitCode: 0
          finishedAt: "2022-07-07T20:06:14Z"
          reason: Completed
          startedAt: "2022-07-07T20:06:14Z"
    phase: Succeeded
    podIP: 10.200.56.108
    podIPs:
    - ip: 10.200.56.108
    qosClass: BestEffort
    startTime: "2022-07-07T20:06:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: coinflip-recursive-w5dr8-1425824529
      workflows.argoproj.io/node-name: coinflip-recursive-w5dr8[1].tails[1].tails[1].heads
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-1425824529/main.log"}}]}'
    creationTimestamp: "2022-07-07T20:07:11Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: coinflip-recursive-w5dr8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dbcb4653-35fa-44de-9408-485e64fab674"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-07-07T20:07:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-07-07T20:07:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.84"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-07T20:07:19Z"
    name: coinflip-recursive-w5dr8-1425824529
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: coinflip-recursive-w5dr8
      uid: dbcb4653-35fa-44de-9408-485e64fab674
    resourceVersion: "22075660"
    uid: a9a3fcc9-575c-48c6-bd10-ee0c19dd4d95
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-w5dr8
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"heads","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.6","command":["sh","-c"],"args":["echo
          \"it was heads\""],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-1425824529"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-1425824529
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - echo "it was heads"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"heads","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.6","command":["sh","-c"],"args":["echo
          \"it was heads\""],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-1425824529"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-1425824529
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: alpine:3.6
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-w5dr8
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"heads","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.6","command":["sh","-c"],"args":["echo
          \"it was heads\""],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-1425824529"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-1425824529
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:07:14Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:07:11Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:07:11Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:07:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://063aaaf436b30b6b24b56a89543443f974945a2f47fedd06da764a85bc22cb32
      image: alpine:3.6
      imageID: docker-pullable://alpine@sha256:66790a2b79e1ea3e1dabac43990c54aca5d1ddf268d9a5a0285e4167c8b24475
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://063aaaf436b30b6b24b56a89543443f974945a2f47fedd06da764a85bc22cb32
          exitCode: 0
          finishedAt: "2022-07-07T20:07:18Z"
          reason: Completed
          startedAt: "2022-07-07T20:07:18Z"
    - containerID: docker://b722da03d085ac10f438daedb6a20d7edc92482158fd45ef4b175dc107111b8a
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://b722da03d085ac10f438daedb6a20d7edc92482158fd45ef4b175dc107111b8a
          exitCode: 0
          finishedAt: "2022-07-07T20:07:18Z"
          reason: Completed
          startedAt: "2022-07-07T20:07:15Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://8832574a5ad96d08095f32f3439f392d51323b7cb83575a601cbea9f1f6e41c3
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://8832574a5ad96d08095f32f3439f392d51323b7cb83575a601cbea9f1f6e41c3
          exitCode: 0
          finishedAt: "2022-07-07T20:07:13Z"
          reason: Completed
          startedAt: "2022-07-07T20:07:13Z"
    phase: Succeeded
    podIP: 10.200.29.84
    podIPs:
    - ip: 10.200.29.84
    qosClass: BestEffort
    startTime: "2022-07-07T20:07:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: coinflip-recursive-w5dr8-155201416
      workflows.argoproj.io/node-name: coinflip-recursive-w5dr8[0].flip-coin
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-155201416/main.log"}}],"result":"tails"}'
    creationTimestamp: "2022-07-07T20:06:41Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: coinflip-recursive-w5dr8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dbcb4653-35fa-44de-9408-485e64fab674"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/mainctrfs/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"argo-staging"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-07-07T20:06:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-07-07T20:06:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.151"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-07T20:06:51Z"
    name: coinflip-recursive-w5dr8-155201416
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: coinflip-recursive-w5dr8
      uid: dbcb4653-35fa-44de-9408-485e64fab674
    resourceVersion: "22075469"
    uid: 4aa13d17-bb28-454e-a18d-3cf6ea6af860
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-w5dr8
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-155201416"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-155201416
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /mainctrfs/argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - /argo/staging/script
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - python
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-155201416"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-155201416
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:alpine3.6
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-w5dr8
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-155201416"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-155201416
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - emptyDir: {}
      name: argo-staging
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:44Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:41Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:41Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3096ccd95c9cf54b288640273610035c7ff36386a5bc24fe4d7dd4b948f63714
      image: python:alpine3.6
      imageID: docker-pullable://python@sha256:766a961bf699491995cc29e20958ef11fd63741ff41dcc70ec34355b39d52971
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://3096ccd95c9cf54b288640273610035c7ff36386a5bc24fe4d7dd4b948f63714
          exitCode: 0
          finishedAt: "2022-07-07T20:06:50Z"
          reason: Completed
          startedAt: "2022-07-07T20:06:50Z"
    - containerID: docker://c77e4f85fbd621582895980f00f3ebb4cfd2e4735c79c8aca3e6304362f1629c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c77e4f85fbd621582895980f00f3ebb4cfd2e4735c79c8aca3e6304362f1629c
          exitCode: 0
          finishedAt: "2022-07-07T20:06:51Z"
          reason: Completed
          startedAt: "2022-07-07T20:06:45Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://b4cf9f2f2919690c0c001ab0693ca4ba1816096ff5b60884b38f44e8c966dd30
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://b4cf9f2f2919690c0c001ab0693ca4ba1816096ff5b60884b38f44e8c966dd30
          exitCode: 0
          finishedAt: "2022-07-07T20:06:43Z"
          reason: Completed
          startedAt: "2022-07-07T20:06:43Z"
    phase: Succeeded
    podIP: 10.200.25.151
    podIPs:
    - ip: 10.200.25.151
    qosClass: BestEffort
    startTime: "2022-07-07T20:06:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: coinflip-recursive-w5dr8-2279149500
      workflows.argoproj.io/node-name: coinflip-recursive-w5dr8[1].tails[0].flip-coin
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-2279149500/main.log"}}],"result":"tails"}'
    creationTimestamp: "2022-07-07T20:06:51Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: coinflip-recursive-w5dr8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dbcb4653-35fa-44de-9408-485e64fab674"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/mainctrfs/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"argo-staging"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-07-07T20:06:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-07-07T20:06:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.152"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-07T20:06:57Z"
    name: coinflip-recursive-w5dr8-2279149500
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: coinflip-recursive-w5dr8
      uid: dbcb4653-35fa-44de-9408-485e64fab674
    resourceVersion: "22075529"
    uid: 637a84b7-c73a-45b5-b950-dc8a5f0c2f67
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-w5dr8
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-2279149500"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-2279149500
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /mainctrfs/argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - /argo/staging/script
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - python
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-2279149500"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-2279149500
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:alpine3.6
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-w5dr8
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-2279149500"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-2279149500
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - emptyDir: {}
      name: argo-staging
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:54Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:51Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:51Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:06:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://dc3d98480dc59b334575c301c5109ffbae6bb8e5922a68cb054264e03b1ebe4e
      image: python:alpine3.6
      imageID: docker-pullable://python@sha256:766a961bf699491995cc29e20958ef11fd63741ff41dcc70ec34355b39d52971
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://dc3d98480dc59b334575c301c5109ffbae6bb8e5922a68cb054264e03b1ebe4e
          exitCode: 0
          finishedAt: "2022-07-07T20:06:56Z"
          reason: Completed
          startedAt: "2022-07-07T20:06:55Z"
    - containerID: docker://aff147863986ddce2242c9a81b89b35f32cbcbae1f81a147105ce657e3c6b2b3
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://aff147863986ddce2242c9a81b89b35f32cbcbae1f81a147105ce657e3c6b2b3
          exitCode: 0
          finishedAt: "2022-07-07T20:06:56Z"
          reason: Completed
          startedAt: "2022-07-07T20:06:55Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://cd1aec3ae56c57c0b672121a8e3bbd21c082a740dd88ac018bad78ad63b3b4fd
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://cd1aec3ae56c57c0b672121a8e3bbd21c082a740dd88ac018bad78ad63b3b4fd
          exitCode: 0
          finishedAt: "2022-07-07T20:06:53Z"
          reason: Completed
          startedAt: "2022-07-07T20:06:53Z"
    phase: Succeeded
    podIP: 10.200.25.152
    podIPs:
    - ip: 10.200.25.152
    qosClass: BestEffort
    startTime: "2022-07-07T20:06:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: coinflip-recursive-w5dr8-4229621496
      workflows.argoproj.io/node-name: coinflip-recursive-w5dr8[1].tails[1].tails[0].flip-coin
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-4229621496/main.log"}}],"result":"heads"}'
    creationTimestamp: "2022-07-07T20:07:01Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: coinflip-recursive-w5dr8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dbcb4653-35fa-44de-9408-485e64fab674"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/mainctrfs/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/argo/staging"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"argo-staging"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-07-07T20:07:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-07-07T20:07:06Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.109"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-07T20:07:07Z"
    name: coinflip-recursive-w5dr8-4229621496
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: coinflip-recursive-w5dr8
      uid: dbcb4653-35fa-44de-9408-485e64fab674
    resourceVersion: "22075596"
    uid: d0299fe3-b935-40cc-81c3-5b2412a6da12
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-w5dr8
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-4229621496"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-4229621496
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /mainctrfs/argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - /argo/staging/script
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - python
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-4229621496"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-4229621496
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:alpine3.6
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: coinflip-recursive-w5dr8
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"flip-coin","inputs":{},"outputs":{},"metadata":{},"script":{"name":"","image":"python:alpine3.6","command":["python"],"resources":{},"source":"import
          random\nresult = \"heads\" if random.randint(0,1) == 0 else \"tails\"\nprint(result)\n"},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"coinflip-recursive-w5dr8/coinflip-recursive-w5dr8-4229621496"}}}'
      - name: ARGO_NODE_ID
        value: coinflip-recursive-w5dr8-4229621496
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "true"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /argo/staging
        name: argo-staging
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - emptyDir: {}
      name: argo-staging
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:07:04Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:07:01Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:07:01Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:07:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://9f827544c4418d74dafa1f120988707c375e06f19cb442188dbbe91e68b22b4d
      image: python:alpine3.6
      imageID: docker-pullable://python@sha256:766a961bf699491995cc29e20958ef11fd63741ff41dcc70ec34355b39d52971
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://9f827544c4418d74dafa1f120988707c375e06f19cb442188dbbe91e68b22b4d
          exitCode: 0
          finishedAt: "2022-07-07T20:07:06Z"
          reason: Completed
          startedAt: "2022-07-07T20:07:06Z"
    - containerID: docker://a8d1849ee7056dc0236b6785e70a08740f3dfabb29d9c385a8a4f9b8cd489fcf
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://a8d1849ee7056dc0236b6785e70a08740f3dfabb29d9c385a8a4f9b8cd489fcf
          exitCode: 0
          finishedAt: "2022-07-07T20:07:07Z"
          reason: Completed
          startedAt: "2022-07-07T20:07:05Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://1a37eb3c250c0338386397558784667037ac429a701c2f451db74472b7ad0cab
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://1a37eb3c250c0338386397558784667037ac429a701c2f451db74472b7ad0cab
          exitCode: 0
          finishedAt: "2022-07-07T20:07:03Z"
          reason: Completed
          startedAt: "2022-07-07T20:07:03Z"
    phase: Succeeded
    podIP: 10.200.56.109
    podIPs:
    - ip: 10.200.56.109
    qosClass: BestEffort
    startTime: "2022-07-07T20:07:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: dag-diamond-pfl65-3312744334
      workflows.argoproj.io/node-name: dag-diamond-pfl65.D
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"dag-diamond-pfl65/dag-diamond-pfl65-3312744334/main.log"}}]}'
    creationTimestamp: "2022-07-07T20:00:26Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: dag-diamond-pfl65
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9a63e154-ed5f-4809-8d18-1556e0e4338a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-07-07T20:00:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-07-07T20:00:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.106"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-07T20:00:34Z"
    name: dag-diamond-pfl65-3312744334
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: dag-diamond-pfl65
      uid: 9a63e154-ed5f-4809-8d18-1556e0e4338a
    resourceVersion: "22074002"
    uid: 252035af-2ef7-4228-871f-d2bf3c009e41
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: dag-diamond-pfl65
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"D"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","D"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3312744334"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3312744334
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - echo
      - D
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"D"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","D"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3312744334"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3312744334
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: alpine:3.7
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: dag-diamond-pfl65
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"D"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","D"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3312744334"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3312744334
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:29Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:26Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:26Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8e9a13bceed5b821e08a6ce53322ac433a20e9d404be9a358d53bc2196031e58
      image: alpine:3.7
      imageID: docker-pullable://alpine@sha256:8421d9a84432575381bfabd248f1eb56f3aa21d9d7cd2511583c68c9b7511d10
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://8e9a13bceed5b821e08a6ce53322ac433a20e9d404be9a358d53bc2196031e58
          exitCode: 0
          finishedAt: "2022-07-07T20:00:33Z"
          reason: Completed
          startedAt: "2022-07-07T20:00:33Z"
    - containerID: docker://2c9fe4b4e33d597cf66ff54ab541a9e0feeb95bba143ba3457c1fc8bd72e82c3
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://2c9fe4b4e33d597cf66ff54ab541a9e0feeb95bba143ba3457c1fc8bd72e82c3
          exitCode: 0
          finishedAt: "2022-07-07T20:00:33Z"
          reason: Completed
          startedAt: "2022-07-07T20:00:30Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://09d969efba8a66b187ac8b2479d6b93b7a0283cafe06d28d2ec999214e4f0996
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://09d969efba8a66b187ac8b2479d6b93b7a0283cafe06d28d2ec999214e4f0996
          exitCode: 0
          finishedAt: "2022-07-07T20:00:28Z"
          reason: Completed
          startedAt: "2022-07-07T20:00:28Z"
    phase: Succeeded
    podIP: 10.200.56.106
    podIPs:
    - ip: 10.200.56.106
    qosClass: BestEffort
    startTime: "2022-07-07T20:00:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: dag-diamond-pfl65-3346299572
      workflows.argoproj.io/node-name: dag-diamond-pfl65.B
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"dag-diamond-pfl65/dag-diamond-pfl65-3346299572/main.log"}}]}'
    creationTimestamp: "2022-07-07T20:00:16Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: dag-diamond-pfl65
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9a63e154-ed5f-4809-8d18-1556e0e4338a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-07-07T20:00:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-07-07T20:00:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.83"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-07T20:00:23Z"
    name: dag-diamond-pfl65-3346299572
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: dag-diamond-pfl65
      uid: 9a63e154-ed5f-4809-8d18-1556e0e4338a
    resourceVersion: "22073939"
    uid: 90e7a1f9-a408-4297-92cb-c7d1a5bcaf76
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: dag-diamond-pfl65
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"B"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","B"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3346299572"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3346299572
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - echo
      - B
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"B"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","B"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3346299572"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3346299572
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: alpine:3.7
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: dag-diamond-pfl65
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"B"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","B"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3346299572"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3346299572
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:16Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:16Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://087d427ff404853d5a4656401c7aa5ab74a81d257a83d39535a8b48ae2e1234e
      image: alpine:3.7
      imageID: docker-pullable://alpine@sha256:8421d9a84432575381bfabd248f1eb56f3aa21d9d7cd2511583c68c9b7511d10
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://087d427ff404853d5a4656401c7aa5ab74a81d257a83d39535a8b48ae2e1234e
          exitCode: 0
          finishedAt: "2022-07-07T20:00:21Z"
          reason: Completed
          startedAt: "2022-07-07T20:00:21Z"
    - containerID: docker://e846f5a9d24efa015e67610795704476fe5646b92abccf043d406ac0afb0a47d
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://e846f5a9d24efa015e67610795704476fe5646b92abccf043d406ac0afb0a47d
          exitCode: 0
          finishedAt: "2022-07-07T20:00:22Z"
          reason: Completed
          startedAt: "2022-07-07T20:00:20Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://0bed58a881c47021629a016227c76607cca9b8278445cf1439531b49fc52a5ef
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://0bed58a881c47021629a016227c76607cca9b8278445cf1439531b49fc52a5ef
          exitCode: 0
          finishedAt: "2022-07-07T20:00:18Z"
          reason: Completed
          startedAt: "2022-07-07T20:00:18Z"
    phase: Succeeded
    podIP: 10.200.29.83
    podIPs:
    - ip: 10.200.29.83
    qosClass: BestEffort
    startTime: "2022-07-07T20:00:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: dag-diamond-pfl65-3363077191
      workflows.argoproj.io/node-name: dag-diamond-pfl65.C
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"dag-diamond-pfl65/dag-diamond-pfl65-3363077191/main.log"}}]}'
    creationTimestamp: "2022-07-07T20:00:06Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: dag-diamond-pfl65
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9a63e154-ed5f-4809-8d18-1556e0e4338a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-07-07T20:00:06Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-07-07T20:00:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.82"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-07T20:00:14Z"
    name: dag-diamond-pfl65-3363077191
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: dag-diamond-pfl65
      uid: 9a63e154-ed5f-4809-8d18-1556e0e4338a
    resourceVersion: "22073877"
    uid: c8490443-71b2-4f9b-8283-3e255aa6c185
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: dag-diamond-pfl65
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"C"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","C"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3363077191"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3363077191
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - echo
      - C
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"C"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","C"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3363077191"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3363077191
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: alpine:3.7
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: dag-diamond-pfl65
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"C"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","C"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3363077191"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3363077191
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:09Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:06Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:06Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T20:00:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5097b9cedb0e1fac2de28da431f3098cb7b58c8196bb21f8e5ad3c95581dab9c
      image: alpine:3.7
      imageID: docker-pullable://alpine@sha256:8421d9a84432575381bfabd248f1eb56f3aa21d9d7cd2511583c68c9b7511d10
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://5097b9cedb0e1fac2de28da431f3098cb7b58c8196bb21f8e5ad3c95581dab9c
          exitCode: 0
          finishedAt: "2022-07-07T20:00:13Z"
          reason: Completed
          startedAt: "2022-07-07T20:00:13Z"
    - containerID: docker://11aa8b3045f35e6e133d81d5329579628546020f0e0aad217f1ee9663fd3ec35
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://11aa8b3045f35e6e133d81d5329579628546020f0e0aad217f1ee9663fd3ec35
          exitCode: 0
          finishedAt: "2022-07-07T20:00:13Z"
          reason: Completed
          startedAt: "2022-07-07T20:00:10Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://e10868523a1fc5df3f6e2e6759e892f6221cee4298c653e3ca98e8d921a6c4f8
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://e10868523a1fc5df3f6e2e6759e892f6221cee4298c653e3ca98e8d921a6c4f8
          exitCode: 0
          finishedAt: "2022-07-07T20:00:08Z"
          reason: Completed
          startedAt: "2022-07-07T20:00:08Z"
    phase: Succeeded
    podIP: 10.200.29.82
    podIPs:
    - ip: 10.200.29.82
    qosClass: BestEffort
    startTime: "2022-07-07T20:00:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: dag-diamond-pfl65-3396632429
      workflows.argoproj.io/node-name: dag-diamond-pfl65.A
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"dag-diamond-pfl65/dag-diamond-pfl65-3396632429/main.log"}}]}'
    creationTimestamp: "2022-07-07T19:59:56Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: dag-diamond-pfl65
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9a63e154-ed5f-4809-8d18-1556e0e4338a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-07-07T19:59:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-07-07T20:00:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.150"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-07T20:00:05Z"
    name: dag-diamond-pfl65-3396632429
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: dag-diamond-pfl65
      uid: 9a63e154-ed5f-4809-8d18-1556e0e4338a
    resourceVersion: "22073820"
    uid: a9f147f9-3fe2-4e2c-83f7-f2911bde4bdf
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: dag-diamond-pfl65
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"A"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","A"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3396632429"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3396632429
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - echo
      - A
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"A"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","A"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3396632429"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3396632429
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: alpine:3.7
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: dag-diamond-pfl65
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"echo","inputs":{"parameters":[{"name":"message","value":"A"}]},"outputs":{},"metadata":{},"container":{"name":"","image":"alpine:3.7","command":["echo","A"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"dag-diamond-pfl65/dag-diamond-pfl65-3396632429"}}}'
      - name: ARGO_NODE_ID
        value: dag-diamond-pfl65-3396632429
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T19:59:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T19:59:56Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T19:59:56Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T19:59:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a1c50c698f2e8e9998afaac74432b68c93d175d25c22962e6ad158f8a7cbe13a
      image: alpine:3.7
      imageID: docker-pullable://alpine@sha256:8421d9a84432575381bfabd248f1eb56f3aa21d9d7cd2511583c68c9b7511d10
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://a1c50c698f2e8e9998afaac74432b68c93d175d25c22962e6ad158f8a7cbe13a
          exitCode: 0
          finishedAt: "2022-07-07T20:00:04Z"
          reason: Completed
          startedAt: "2022-07-07T20:00:04Z"
    - containerID: docker://ffbaafa5878c5d874076c48b187759304a4ceeaa405152e88b23f7d7f618f5f8
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://ffbaafa5878c5d874076c48b187759304a4ceeaa405152e88b23f7d7f618f5f8
          exitCode: 0
          finishedAt: "2022-07-07T20:00:04Z"
          reason: Completed
          startedAt: "2022-07-07T20:00:01Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://bdb9b5a3d7b14245afab116131c871a4744990d8aded57e8d318122b7461aac7
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://bdb9b5a3d7b14245afab116131c871a4744990d8aded57e8d318122b7461aac7
          exitCode: 0
          finishedAt: "2022-07-07T19:59:58Z"
          reason: Completed
          startedAt: "2022-07-07T19:59:58Z"
    phase: Succeeded
    podIP: 10.200.25.150
    podIPs:
    - ip: 10.200.25.150
    qosClass: BestEffort
    startTime: "2022-07-07T19:59:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:49Z"
    generateName: eventbus-default-stan-
    labels:
      controller: eventbus-controller
      controller-revision-hash: eventbus-default-stan-787bc9645c
      eventbus-name: default
      owner-name: default
      statefulset.kubernetes.io/pod-name: eventbus-default-stan-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller: {}
            f:controller-revision-hash: {}
            f:eventbus-name: {}
            f:owner-name: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3ea035e0-726e-4ab8-b211-8b3103bbfa23"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":7777,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"stan"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_ADVERTISE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4222,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":6222,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8222,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data/stan"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/stan-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config-volume"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"stan-data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.22.102"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:44:57Z"
    name: eventbus-default-stan-0
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: eventbus-default-stan
      uid: 3ea035e0-726e-4ab8-b211-8b3103bbfa23
    resourceVersion: "19776913"
    uid: af8d614c-3624-416c-8dd9-4ddaf2efdbd9
  spec:
    containers:
    - command:
      - /nats-streaming-server
      - -sc
      - /etc/stan-config/stan.conf
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CLUSTER_ADVERTISE
        value: $(POD_NAME).eventbus-default-stan-svc.$(POD_NAMESPACE).svc
      image: nats-streaming:0.22.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8222
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: stan
      ports:
      - containerPort: 4222
        name: client
        protocol: TCP
      - containerPort: 6222
        name: cluster
        protocol: TCP
      - containerPort: 8222
        name: monitor
        protocol: TCP
      resources:
        requests:
          cpu: "0"
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/stan-config
        name: config-volume
      - mountPath: /data/stan
        name: stan-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - -connz
      - -routez
      - -subz
      - -varz
      - -channelz
      - -serverz
      - http://localhost:8222
      image: natsio/prometheus-nats-exporter:0.8.0
      imagePullPolicy: IfNotPresent
      name: metrics
      ports:
      - containerPort: 7777
        name: metrics
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: eventbus-default-stan-0
    nodeName: ip-10-0-13-58.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: eventbus-default-stan-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: stan-config
              path: stan.conf
            name: eventbus-default-stan-configmap
        - secret:
            items:
            - key: auth
              path: auth.conf
            name: eventbus-default-server
    - emptyDir: {}
      name: stan-data
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8f5d47e4672385ba1f5259f211962117bf21963649a9c169cb07fe642b214be5
      image: natsio/prometheus-nats-exporter:0.8.0
      imageID: docker-pullable://natsio/prometheus-nats-exporter@sha256:9d5f8e9e8e59896762fa7be7635badd242e4dbd3686e19ec6cf959366db0035e
      lastState: {}
      name: metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:56Z"
    - containerID: docker://8d60c7ab42e9d6fb674b3ceae814322fbf05869c2ba00a178aa505275dd0f654
      image: nats-streaming:0.22.1
      imageID: docker-pullable://nats-streaming@sha256:3dd7b21a7fceebc956629af8ad31b7e5dfb2cc717cba4be55e6b50f7ca726932
      lastState: {}
      name: stan
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:53Z"
    hostIP: 10.0.13.58
    phase: Running
    podIP: 10.200.22.102
    podIPs:
    - ip: 10.200.22.102
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:57Z"
    generateName: eventbus-default-stan-
    labels:
      controller: eventbus-controller
      controller-revision-hash: eventbus-default-stan-787bc9645c
      eventbus-name: default
      owner-name: default
      statefulset.kubernetes.io/pod-name: eventbus-default-stan-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller: {}
            f:controller-revision-hash: {}
            f:eventbus-name: {}
            f:owner-name: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3ea035e0-726e-4ab8-b211-8b3103bbfa23"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":7777,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"stan"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_ADVERTISE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4222,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":6222,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8222,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data/stan"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/stan-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config-volume"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"stan-data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.91"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:44:59Z"
    name: eventbus-default-stan-1
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: eventbus-default-stan
      uid: 3ea035e0-726e-4ab8-b211-8b3103bbfa23
    resourceVersion: "19776947"
    uid: f2ef57e2-6957-4786-b896-878f2a0be840
  spec:
    containers:
    - command:
      - /nats-streaming-server
      - -sc
      - /etc/stan-config/stan.conf
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CLUSTER_ADVERTISE
        value: $(POD_NAME).eventbus-default-stan-svc.$(POD_NAMESPACE).svc
      image: nats-streaming:0.22.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8222
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: stan
      ports:
      - containerPort: 4222
        name: client
        protocol: TCP
      - containerPort: 6222
        name: cluster
        protocol: TCP
      - containerPort: 8222
        name: monitor
        protocol: TCP
      resources:
        requests:
          cpu: "0"
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/stan-config
        name: config-volume
      - mountPath: /data/stan
        name: stan-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - -connz
      - -routez
      - -subz
      - -varz
      - -channelz
      - -serverz
      - http://localhost:8222
      image: natsio/prometheus-nats-exporter:0.8.0
      imagePullPolicy: IfNotPresent
      name: metrics
      ports:
      - containerPort: 7777
        name: metrics
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: eventbus-default-stan-1
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: eventbus-default-stan-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: stan-config
              path: stan.conf
            name: eventbus-default-stan-configmap
        - secret:
            items:
            - key: auth
              path: auth.conf
            name: eventbus-default-server
    - emptyDir: {}
      name: stan-data
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://374692fe3880ebcac1bb20c0d519aa97f1d7a07d5ae939a47bb6f92e83b8125b
      image: natsio/prometheus-nats-exporter:0.8.0
      imageID: docker-pullable://natsio/prometheus-nats-exporter@sha256:9d5f8e9e8e59896762fa7be7635badd242e4dbd3686e19ec6cf959366db0035e
      lastState: {}
      name: metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:58Z"
    - containerID: docker://fe3587d5a5d082c01ce31f2bbb3ec6d83ed9ccafd0b421575a209ebb6914ef50
      image: nats-streaming:0.22.1
      imageID: docker-pullable://nats-streaming@sha256:3dd7b21a7fceebc956629af8ad31b7e5dfb2cc717cba4be55e6b50f7ca726932
      lastState: {}
      name: stan
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:44:58Z"
    hostIP: 10.0.12.125
    phase: Running
    podIP: 10.200.45.91
    podIPs:
    - ip: 10.200.45.91
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-06-30T12:44:59Z"
    generateName: eventbus-default-stan-
    labels:
      controller: eventbus-controller
      controller-revision-hash: eventbus-default-stan-787bc9645c
      eventbus-name: default
      owner-name: default
      statefulset.kubernetes.io/pod-name: eventbus-default-stan-2
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller: {}
            f:controller-revision-hash: {}
            f:eventbus-name: {}
            f:owner-name: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3ea035e0-726e-4ab8-b211-8b3103bbfa23"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":7777,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"stan"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_ADVERTISE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4222,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":6222,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8222,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data/stan"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/stan-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config-volume"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"stan-data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.94"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:01Z"
    name: eventbus-default-stan-2
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: eventbus-default-stan
      uid: 3ea035e0-726e-4ab8-b211-8b3103bbfa23
    resourceVersion: "19776997"
    uid: d41cc6f3-39b6-4290-8452-a7259dbb5c9b
  spec:
    containers:
    - command:
      - /nats-streaming-server
      - -sc
      - /etc/stan-config/stan.conf
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CLUSTER_ADVERTISE
        value: $(POD_NAME).eventbus-default-stan-svc.$(POD_NAMESPACE).svc
      image: nats-streaming:0.22.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8222
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: stan
      ports:
      - containerPort: 4222
        name: client
        protocol: TCP
      - containerPort: 6222
        name: cluster
        protocol: TCP
      - containerPort: 8222
        name: monitor
        protocol: TCP
      resources:
        requests:
          cpu: "0"
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/stan-config
        name: config-volume
      - mountPath: /data/stan
        name: stan-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - -connz
      - -routez
      - -subz
      - -varz
      - -channelz
      - -serverz
      - http://localhost:8222
      image: natsio/prometheus-nats-exporter:0.8.0
      imagePullPolicy: IfNotPresent
      name: metrics
      ports:
      - containerPort: 7777
        name: metrics
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: eventbus-default-stan-2
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: eventbus-default-stan-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: stan-config
              path: stan.conf
            name: eventbus-default-stan-configmap
        - secret:
            items:
            - key: auth
              path: auth.conf
            name: eventbus-default-server
    - emptyDir: {}
      name: stan-data
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://fd8747126e71cce8c8aa52338655b4b41efcbb43d5efca067dc96a3748e83e89
      image: natsio/prometheus-nats-exporter:0.8.0
      imageID: docker-pullable://natsio/prometheus-nats-exporter@sha256:9d5f8e9e8e59896762fa7be7635badd242e4dbd3686e19ec6cf959366db0035e
      lastState: {}
      name: metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:45:00Z"
    - containerID: docker://48a1c6123b6c571df283b0ae6c8b70262700850b607805b24a9729089463d964
      image: nats-streaming:0.22.1
      imageID: docker-pullable://nats-streaming@sha256:3dd7b21a7fceebc956629af8ad31b7e5dfb2cc717cba4be55e6b50f7ca726932
      lastState: {}
      name: stan
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:45:00Z"
    hostIP: 10.0.13.59
    phase: Running
    podIP: 10.200.56.94
    podIPs:
    - ip: 10.200.56.94
    qosClass: BestEffort
    startTime: "2022-06-30T12:44:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-2dt6q
      workflows.argoproj.io/node-name: hello-world-2dt6q
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-2dt6q/hello-world-2dt6q/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:17Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-2dt6q
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c3d51da7-6989-490b-b24a-a19c30b6fefa"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.10.117"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:24Z"
    name: hello-world-2dt6q
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-2dt6q
      uid: c3d51da7-6989-490b-b24a-a19c30b6fefa
    resourceVersion: "19781543"
    uid: 422a5c48-339d-492f-bc65-80300b19afc1
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-2dt6q
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2dt6q/hello-world-2dt6q"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2dt6q
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2dt6q/hello-world-2dt6q"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2dt6q
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-2dt6q
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2dt6q/hello-world-2dt6q"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2dt6q
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-123.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:20Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:17Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:17Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c12bb4063641ab34dcec5aeb9412bac56762624c3b0503b82b6765d2457dc96e
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c12bb4063641ab34dcec5aeb9412bac56762624c3b0503b82b6765d2457dc96e
          exitCode: 0
          finishedAt: "2022-06-30T12:56:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:23Z"
    - containerID: docker://c1e5b1f557fd42421510ede6857265b82cb505c3dc8e6071472744af0df4b28f
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c1e5b1f557fd42421510ede6857265b82cb505c3dc8e6071472744af0df4b28f
          exitCode: 0
          finishedAt: "2022-06-30T12:56:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:21Z"
    hostIP: 10.0.12.123
    initContainerStatuses:
    - containerID: docker://922b39da9ed954f4a73922d8ea86d263cc1650bcd58ad71c41ecd3ea34a6c448
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://922b39da9ed954f4a73922d8ea86d263cc1650bcd58ad71c41ecd3ea34a6c448
          exitCode: 0
          finishedAt: "2022-06-30T12:56:19Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:19Z"
    phase: Succeeded
    podIP: 10.200.10.117
    podIPs:
    - ip: 10.200.10.117
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-2lpbw
      workflows.argoproj.io/node-name: hello-world-2lpbw
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-2lpbw/hello-world-2lpbw/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:54:47Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-2lpbw
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"adf851a7-3fde-4e46-bf67-314aa2e18178"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:54:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:54:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.96"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:54:55Z"
    name: hello-world-2lpbw
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-2lpbw
      uid: adf851a7-3fde-4e46-bf67-314aa2e18178
    resourceVersion: "19779977"
    uid: 26f4674b-511b-4d7d-9dc5-912e26dd1a18
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-2lpbw
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2lpbw/hello-world-2lpbw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2lpbw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2lpbw/hello-world-2lpbw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2lpbw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-2lpbw
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2lpbw/hello-world-2lpbw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2lpbw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:51Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:47Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:47Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://56e9c65227ae055d3c2fdf80424d167494c0dde64e379ac39ea4f6ded472679e
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://56e9c65227ae055d3c2fdf80424d167494c0dde64e379ac39ea4f6ded472679e
          exitCode: 0
          finishedAt: "2022-06-30T12:54:54Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:53Z"
    - containerID: docker://b185a671d0866bd6c3f5839d1e433f645187b5561d9090801c8da9955322cf70
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://b185a671d0866bd6c3f5839d1e433f645187b5561d9090801c8da9955322cf70
          exitCode: 0
          finishedAt: "2022-06-30T12:54:54Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:52Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://15c355ef96dd5609a05dd8e1a70ea54e7573b28426b0e264f4a51b70958a5410
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://15c355ef96dd5609a05dd8e1a70ea54e7573b28426b0e264f4a51b70958a5410
          exitCode: 0
          finishedAt: "2022-06-30T12:54:50Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:50Z"
    phase: Succeeded
    podIP: 10.200.56.96
    podIPs:
    - ip: 10.200.56.96
    qosClass: BestEffort
    startTime: "2022-06-30T12:54:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-2n59t
      workflows.argoproj.io/node-name: hello-world-2n59t
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-2n59t/hello-world-2n59t/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:16Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-2n59t
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"32a79eb4-f0e2-45b5-adcc-8fe276cd4bf5"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.104"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:23Z"
    name: hello-world-2n59t
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-2n59t
      uid: 32a79eb4-f0e2-45b5-adcc-8fe276cd4bf5
    resourceVersion: "19782551"
    uid: 4afbefb4-e77d-4ff0-ae51-df8c532dd4a3
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-2n59t
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2n59t/hello-world-2n59t"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2n59t
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2n59t/hello-world-2n59t"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2n59t
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-2n59t
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2n59t/hello-world-2n59t"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2n59t
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:23Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:23Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4fa6045b21747ab090a93dbfb4e00959b4c8c06f8a9f4a002dffe6eeac8044ce
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://4fa6045b21747ab090a93dbfb4e00959b4c8c06f8a9f4a002dffe6eeac8044ce
          exitCode: 0
          finishedAt: "2022-06-30T12:57:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:22Z"
    - containerID: docker://4fdde3a9c1bd9fa656d4e97a01d0b86234bcc163ab807fb0987a8fcb3d7c0468
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://4fdde3a9c1bd9fa656d4e97a01d0b86234bcc163ab807fb0987a8fcb3d7c0468
          exitCode: 0
          finishedAt: "2022-06-30T12:57:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:20Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://0124b2321ace283852d4c5f93c4f41543f6f82e2ce79d0ff2e3861248d245e68
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://0124b2321ace283852d4c5f93c4f41543f6f82e2ce79d0ff2e3861248d245e68
          exitCode: 0
          finishedAt: "2022-06-30T12:57:18Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:18Z"
    phase: Succeeded
    podIP: 10.200.56.104
    podIPs:
    - ip: 10.200.56.104
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-2s7pc
      workflows.argoproj.io/node-name: hello-world-2s7pc
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-2s7pc/hello-world-2s7pc/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:14Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-2s7pc
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e14a05e3-c5d6-4f37-b38c-d72923864e08"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:20Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.90"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:21Z"
    name: hello-world-2s7pc
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-2s7pc
      uid: e14a05e3-c5d6-4f37-b38c-d72923864e08
    resourceVersion: "19781505"
    uid: 2de88b76-67dd-4302-a073-765b6d4688a8
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-2s7pc
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2s7pc/hello-world-2s7pc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2s7pc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2s7pc/hello-world-2s7pc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2s7pc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-2s7pc
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-2s7pc/hello-world-2s7pc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-2s7pc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:17Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:14Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:14Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bba7082f33955d1f59d41dc2683560b6bb063854c355339f45e7749061ff5d68
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://bba7082f33955d1f59d41dc2683560b6bb063854c355339f45e7749061ff5d68
          exitCode: 0
          finishedAt: "2022-06-30T12:56:20Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:20Z"
    - containerID: docker://00c6f8785f289e857c226af4a7cdf827e3cdc1d2895b60163691e8995166dd2b
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://00c6f8785f289e857c226af4a7cdf827e3cdc1d2895b60163691e8995166dd2b
          exitCode: 0
          finishedAt: "2022-06-30T12:56:21Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:18Z"
    hostIP: 10.0.13.61
    initContainerStatuses:
    - containerID: docker://9610943a963fdae5d1fa70450ea30a4f0dc76738da6920630cfc03b21df20342
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://9610943a963fdae5d1fa70450ea30a4f0dc76738da6920630cfc03b21df20342
          exitCode: 0
          finishedAt: "2022-06-30T12:56:16Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:16Z"
    phase: Succeeded
    podIP: 10.200.74.90
    podIPs:
    - ip: 10.200.74.90
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-49zv9
      workflows.argoproj.io/node-name: hello-world-49zv9
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-49zv9/hello-world-49zv9/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:36Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-49zv9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"accf5b78-e687-43bd-a5d3-01010eedecff"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.80"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:43Z"
    name: hello-world-49zv9
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-49zv9
      uid: accf5b78-e687-43bd-a5d3-01010eedecff
    resourceVersion: "19782855"
    uid: 4c071550-85e3-4acd-85aa-5bd348180e4d
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-49zv9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-49zv9/hello-world-49zv9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-49zv9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-49zv9/hello-world-49zv9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-49zv9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-49zv9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-49zv9/hello-world-49zv9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-49zv9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:39Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6bc43e6e2c38694a32e2b7c9b15bcb1af9cd51af20bef8dc62e3fb857d6a0e02
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://6bc43e6e2c38694a32e2b7c9b15bcb1af9cd51af20bef8dc62e3fb857d6a0e02
          exitCode: 0
          finishedAt: "2022-06-30T12:57:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:42Z"
    - containerID: docker://89b03e2ec95280a87c0a26426a9422ede42ac54dc3522a6c380414b9c0fc9274
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://89b03e2ec95280a87c0a26426a9422ede42ac54dc3522a6c380414b9c0fc9274
          exitCode: 0
          finishedAt: "2022-06-30T12:57:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:40Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://602f4890b464328b6a5bb09ace6e4394a58bafbaeaf5dda09031001b68251ba7
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://602f4890b464328b6a5bb09ace6e4394a58bafbaeaf5dda09031001b68251ba7
          exitCode: 0
          finishedAt: "2022-06-30T12:57:38Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:38Z"
    phase: Succeeded
    podIP: 10.200.29.80
    podIPs:
    - ip: 10.200.29.80
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-4l95c
      workflows.argoproj.io/node-name: hello-world-4l95c
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-4l95c/hello-world-4l95c/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:49Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-4l95c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"51d5a37e-ce20-40ff-b773-f6d76fc06e5d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.103"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:56Z"
    name: hello-world-4l95c
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-4l95c
      uid: 51d5a37e-ce20-40ff-b773-f6d76fc06e5d
    resourceVersion: "19782068"
    uid: eb656d70-7a72-4ff3-81d6-b74e923e32b7
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-4l95c
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-4l95c/hello-world-4l95c"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-4l95c
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-4l95c/hello-world-4l95c"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-4l95c
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-4l95c
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-4l95c/hello-world-4l95c"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-4l95c
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:52Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:49Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:49Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6ac826e09bc32297a98b71079993a96e7365b58e0825bca0d78eeca82c393269
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://6ac826e09bc32297a98b71079993a96e7365b58e0825bca0d78eeca82c393269
          exitCode: 0
          finishedAt: "2022-06-30T12:56:55Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:54Z"
    - containerID: docker://03238687e91f6dd959aa97b45a0cd66bd00dd6cc7185955fdf8a0c2e76d9b1c2
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://03238687e91f6dd959aa97b45a0cd66bd00dd6cc7185955fdf8a0c2e76d9b1c2
          exitCode: 0
          finishedAt: "2022-06-30T12:56:55Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:53Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://9cb5d5d3582baf330b15e1ac613b75deb5f9b321eef91f33efa20fda453709e6
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://9cb5d5d3582baf330b15e1ac613b75deb5f9b321eef91f33efa20fda453709e6
          exitCode: 0
          finishedAt: "2022-06-30T12:56:51Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:51Z"
    phase: Succeeded
    podIP: 10.200.45.103
    podIPs:
    - ip: 10.200.45.103
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-4sl2m
      workflows.argoproj.io/node-name: hello-world-4sl2m
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-4sl2m/hello-world-4sl2m/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:16Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-4sl2m
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ee1fe894-5006-44e4-9ade-691486c571bc"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.84.105"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:24Z"
    name: hello-world-4sl2m
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-4sl2m
      uid: ee1fe894-5006-44e4-9ade-691486c571bc
    resourceVersion: "19780507"
    uid: c5f29367-3974-4819-b666-65bfd334f1b4
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-4sl2m
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-4sl2m/hello-world-4sl2m"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-4sl2m
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-4sl2m/hello-world-4sl2m"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-4sl2m
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-4sl2m
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-4sl2m/hello-world-4sl2m"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-4sl2m
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-124.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:20Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:17Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:17Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://9d767452bebf74b3c8d4ee3298796708b1d589683ee252a85843b985c974141d
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://9d767452bebf74b3c8d4ee3298796708b1d589683ee252a85843b985c974141d
          exitCode: 0
          finishedAt: "2022-06-30T12:55:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:23Z"
    - containerID: docker://d5713fcbaf20e35227e0cf41f7f5cedb745ea7e35831f8d510d8fc56ba7e09a7
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://d5713fcbaf20e35227e0cf41f7f5cedb745ea7e35831f8d510d8fc56ba7e09a7
          exitCode: 0
          finishedAt: "2022-06-30T12:55:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:21Z"
    hostIP: 10.0.12.124
    initContainerStatuses:
    - containerID: docker://0cff6521d3bf6a05971849c79fbc994d16f0a6b410298564a2956eedf840826b
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://0cff6521d3bf6a05971849c79fbc994d16f0a6b410298564a2956eedf840826b
          exitCode: 0
          finishedAt: "2022-06-30T12:55:19Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:19Z"
    phase: Succeeded
    podIP: 10.200.84.105
    podIPs:
    - ip: 10.200.84.105
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-54kh7
      workflows.argoproj.io/node-name: hello-world-54kh7
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-54kh7/hello-world-54kh7/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:34Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-54kh7
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b79fabd2-7ebd-4356-a274-4ff48894b6aa"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.91"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:41Z"
    name: hello-world-54kh7
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-54kh7
      uid: b79fabd2-7ebd-4356-a274-4ff48894b6aa
    resourceVersion: "19781842"
    uid: 239c9c22-4b45-4d75-91a3-2af99c40b75d
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-54kh7
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-54kh7/hello-world-54kh7"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-54kh7
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-54kh7/hello-world-54kh7"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-54kh7
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-54kh7
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-54kh7/hello-world-54kh7"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-54kh7
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:37Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:34Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:34Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://08955affa58a5d74de17476a1c77a4dd1a8fd67bf9d14da1ea948f2330bfbdc2
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://08955affa58a5d74de17476a1c77a4dd1a8fd67bf9d14da1ea948f2330bfbdc2
          exitCode: 0
          finishedAt: "2022-06-30T12:56:40Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:40Z"
    - containerID: docker://a0cee43e2869d3a1ce86aa1c9935c3f82d402ed383c3c33047121b7219b91924
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://a0cee43e2869d3a1ce86aa1c9935c3f82d402ed383c3c33047121b7219b91924
          exitCode: 0
          finishedAt: "2022-06-30T12:56:41Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:38Z"
    hostIP: 10.0.13.61
    initContainerStatuses:
    - containerID: docker://26d1ba77f3fd45ad2daa08ed77ee1a31b6f6819987c045d3227ba58d3e89a817
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://26d1ba77f3fd45ad2daa08ed77ee1a31b6f6819987c045d3227ba58d3e89a817
          exitCode: 0
          finishedAt: "2022-06-30T12:56:37Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:36Z"
    phase: Succeeded
    podIP: 10.200.74.91
    podIPs:
    - ip: 10.200.74.91
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-5cmkc
      workflows.argoproj.io/node-name: hello-world-5cmkc
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-5cmkc/hello-world-5cmkc/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:54:55Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-5cmkc
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"21972202-d522-48d2-a984-832607c2d17d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:54:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.97"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:02Z"
    name: hello-world-5cmkc
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-5cmkc
      uid: 21972202-d522-48d2-a984-832607c2d17d
    resourceVersion: "19780139"
    uid: 42829eaa-301f-49e2-8e23-608ba47d404b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-5cmkc
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-5cmkc/hello-world-5cmkc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-5cmkc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-5cmkc/hello-world-5cmkc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-5cmkc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-5cmkc
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-5cmkc/hello-world-5cmkc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-5cmkc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:58Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:55Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:55Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://fb98ef62bba34fb75e94a76f132b52d655cd7c9d1ad14fd5fa76bba3a94d9060
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://fb98ef62bba34fb75e94a76f132b52d655cd7c9d1ad14fd5fa76bba3a94d9060
          exitCode: 0
          finishedAt: "2022-06-30T12:55:01Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:01Z"
    - containerID: docker://1aa1223d80515239f12a2c33472f1e1a7ee846dbf26a15036df158f954e6aa72
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://1aa1223d80515239f12a2c33472f1e1a7ee846dbf26a15036df158f954e6aa72
          exitCode: 0
          finishedAt: "2022-06-30T12:55:01Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:59Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://c843a8b3c7b5a1fb9479e486b2645182f16273fec2417a11924e162fde822450
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://c843a8b3c7b5a1fb9479e486b2645182f16273fec2417a11924e162fde822450
          exitCode: 0
          finishedAt: "2022-06-30T12:54:57Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:57Z"
    phase: Succeeded
    podIP: 10.200.56.97
    podIPs:
    - ip: 10.200.56.97
    qosClass: BestEffort
    startTime: "2022-06-30T12:54:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-5s4pw
      workflows.argoproj.io/node-name: hello-world-5s4pw
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-5s4pw/hello-world-5s4pw/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:35Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-5s4pw
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0c0d1af4-bee0-41fd-a288-45b5ee040f68"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.130"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:41Z"
    name: hello-world-5s4pw
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-5s4pw
      uid: 0c0d1af4-bee0-41fd-a288-45b5ee040f68
    resourceVersion: "19780819"
    uid: 06efb39d-365f-4fbc-b6b6-d058df1b727b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-5s4pw
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-5s4pw/hello-world-5s4pw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-5s4pw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-5s4pw/hello-world-5s4pw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-5s4pw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-5s4pw
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-5s4pw/hello-world-5s4pw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-5s4pw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:37Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:35Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:35Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e2733743ed76bc61bb10418bde8bc28b3c0373b7b49ca465ecf0c4f1ddef6e0e
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://e2733743ed76bc61bb10418bde8bc28b3c0373b7b49ca465ecf0c4f1ddef6e0e
          exitCode: 0
          finishedAt: "2022-06-30T12:55:40Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:40Z"
    - containerID: docker://83864cfd356af5d6a697925abad4b1712602980bdd0cb36969f228e316495bbd
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://83864cfd356af5d6a697925abad4b1712602980bdd0cb36969f228e316495bbd
          exitCode: 0
          finishedAt: "2022-06-30T12:55:40Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:38Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://542c60fdc6e3623ba4dde495145f03d999b8a7d3ed0c7eb6dfaaf0af07cb38a4
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://542c60fdc6e3623ba4dde495145f03d999b8a7d3ed0c7eb6dfaaf0af07cb38a4
          exitCode: 0
          finishedAt: "2022-06-30T12:55:37Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:37Z"
    phase: Succeeded
    podIP: 10.200.25.130
    podIPs:
    - ip: 10.200.25.130
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-5w4xk
      workflows.argoproj.io/node-name: hello-world-5w4xk
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-5w4xk/hello-world-5w4xk/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:16Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-5w4xk
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"87005d1e-2761-494a-813b-0781fc966a1d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.22.109"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:24Z"
    name: hello-world-5w4xk
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-5w4xk
      uid: 87005d1e-2761-494a-813b-0781fc966a1d
    resourceVersion: "19780500"
    uid: 303f48ee-2b87-48f2-8642-91f370028cff
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-5w4xk
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-5w4xk/hello-world-5w4xk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-5w4xk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-5w4xk/hello-world-5w4xk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-5w4xk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-5w4xk
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-5w4xk/hello-world-5w4xk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-5w4xk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-58.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:16Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:16Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://40485f6f4a6a5f1f69ddf8307b3b61819c61997f20a36597c163b1c6f60ed81b
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://40485f6f4a6a5f1f69ddf8307b3b61819c61997f20a36597c163b1c6f60ed81b
          exitCode: 0
          finishedAt: "2022-06-30T12:55:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:22Z"
    - containerID: docker://490a9a68f67c8dfaa07313091eb8f47b135421a65c25ea9c7368832809e39adb
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://490a9a68f67c8dfaa07313091eb8f47b135421a65c25ea9c7368832809e39adb
          exitCode: 0
          finishedAt: "2022-06-30T12:55:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:20Z"
    hostIP: 10.0.13.58
    initContainerStatuses:
    - containerID: docker://8033f7112a6d8bc6de6ba7168f665278bdca7ccabc116055a475debb8aa5e19e
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://8033f7112a6d8bc6de6ba7168f665278bdca7ccabc116055a475debb8aa5e19e
          exitCode: 0
          finishedAt: "2022-06-30T12:55:19Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:18Z"
    phase: Succeeded
    podIP: 10.200.22.109
    podIPs:
    - ip: 10.200.22.109
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-74z2c
      workflows.argoproj.io/node-name: hello-world-74z2c
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-74z2c/hello-world-74z2c/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:57Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-74z2c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"94cb201a-e14c-45a6-942b-96878d9d8f1f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.22.110"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:05Z"
    name: hello-world-74z2c
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-74z2c
      uid: 94cb201a-e14c-45a6-942b-96878d9d8f1f
    resourceVersion: "19781213"
    uid: 5a949829-eb7b-4bd7-9a54-e7a26fe88bcc
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-74z2c
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-74z2c/hello-world-74z2c"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-74z2c
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-74z2c/hello-world-74z2c"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-74z2c
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-74z2c
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-74z2c/hello-world-74z2c"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-74z2c
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-58.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:57Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:57Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0489778d088835ae026a286e4ac028b44bd6e0da93ca702a87ae2215f77b96f3
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://0489778d088835ae026a286e4ac028b44bd6e0da93ca702a87ae2215f77b96f3
          exitCode: 0
          finishedAt: "2022-06-30T12:56:03Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:03Z"
    - containerID: docker://86d2d821be52d471795cdf4f3eda91870825b7709d8a655be87a7faefc4f00eb
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://86d2d821be52d471795cdf4f3eda91870825b7709d8a655be87a7faefc4f00eb
          exitCode: 0
          finishedAt: "2022-06-30T12:56:04Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:02Z"
    hostIP: 10.0.13.58
    initContainerStatuses:
    - containerID: docker://e5b1db0849139abf0818bdf2d118d6f6456277380df99b07c4603a05b0ba0700
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://e5b1db0849139abf0818bdf2d118d6f6456277380df99b07c4603a05b0ba0700
          exitCode: 0
          finishedAt: "2022-06-30T12:56:00Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:00Z"
    phase: Succeeded
    podIP: 10.200.22.110
    podIPs:
    - ip: 10.200.22.110
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-7hvv8
      workflows.argoproj.io/node-name: hello-world-7hvv8
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-7hvv8/hello-world-7hvv8/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:48Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-7hvv8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b7a433ba-6a1d-4714-8bc4-2cb52e086023"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:48Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.97"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:56Z"
    name: hello-world-7hvv8
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-7hvv8
      uid: b7a433ba-6a1d-4714-8bc4-2cb52e086023
    resourceVersion: "19781045"
    uid: 1f51ab49-80c4-4463-b69c-3afc4aa1b3ea
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-7hvv8
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7hvv8/hello-world-7hvv8"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7hvv8
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7hvv8/hello-world-7hvv8"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7hvv8
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-7hvv8
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7hvv8/hello-world-7hvv8"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7hvv8
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:52Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:48Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:48Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1f70e033818c44793f492231e2bfb63647f56f0153ba1d62865f6dc4e68a7dd6
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://1f70e033818c44793f492231e2bfb63647f56f0153ba1d62865f6dc4e68a7dd6
          exitCode: 0
          finishedAt: "2022-06-30T12:55:55Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:54Z"
    - containerID: docker://bab2492316119d16ab1c9628462f479620a1e40611b067fa16eb6dee67694b3d
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://bab2492316119d16ab1c9628462f479620a1e40611b067fa16eb6dee67694b3d
          exitCode: 0
          finishedAt: "2022-06-30T12:55:55Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:53Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://cac967ece2d19c88fe579472cbbed1361b9410063cd84ca640f804167ff7ee27
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://cac967ece2d19c88fe579472cbbed1361b9410063cd84ca640f804167ff7ee27
          exitCode: 0
          finishedAt: "2022-06-30T12:55:51Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:51Z"
    phase: Succeeded
    podIP: 10.200.45.97
    podIPs:
    - ip: 10.200.45.97
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-7jtpx
      workflows.argoproj.io/node-name: hello-world-7jtpx
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-7jtpx/hello-world-7jtpx/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:15Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-7jtpx
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d7b33bd0-d603-45d6-8d4a-8f78656618d4"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.98"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:23Z"
    name: hello-world-7jtpx
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-7jtpx
      uid: d7b33bd0-d603-45d6-8d4a-8f78656618d4
    resourceVersion: "19780490"
    uid: a5b2a072-a2ee-4630-b6d1-e42cf908ccd5
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-7jtpx
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7jtpx/hello-world-7jtpx"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7jtpx
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7jtpx/hello-world-7jtpx"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7jtpx
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-7jtpx
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7jtpx/hello-world-7jtpx"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7jtpx
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:15Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:15Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d3d031365e186bdfa3bb75362d1dcecb9b0b492b80c4c6275b5c37455b113c7f
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://d3d031365e186bdfa3bb75362d1dcecb9b0b492b80c4c6275b5c37455b113c7f
          exitCode: 0
          finishedAt: "2022-06-30T12:55:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:21Z"
    - containerID: docker://8ec60676a8d3abdd87f10ba3dc8bcda3ecaa30b75d0fa57e226b790747b318b0
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://8ec60676a8d3abdd87f10ba3dc8bcda3ecaa30b75d0fa57e226b790747b318b0
          exitCode: 0
          finishedAt: "2022-06-30T12:55:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:20Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://fe6c37d88da8706e0fb2006df7ce98550a8f76a9c6e1c059708f30c14824ae32
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://fe6c37d88da8706e0fb2006df7ce98550a8f76a9c6e1c059708f30c14824ae32
          exitCode: 0
          finishedAt: "2022-06-30T12:55:18Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:18Z"
    phase: Succeeded
    podIP: 10.200.56.98
    podIPs:
    - ip: 10.200.56.98
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-7str2
      workflows.argoproj.io/node-name: hello-world-7str2
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-7str2/hello-world-7str2/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:55Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-7str2
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"35b848c0-39dd-443c-915c-7eee29913648"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.100"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:03Z"
    name: hello-world-7str2
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-7str2
      uid: 35b848c0-39dd-443c-915c-7eee29913648
    resourceVersion: "19781183"
    uid: 5c2bd926-506c-49ae-b03d-bcff19aef1a4
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-7str2
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7str2/hello-world-7str2"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7str2
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7str2/hello-world-7str2"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7str2
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-7str2
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7str2/hello-world-7str2"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7str2
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:56Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:56Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3504214d1bc6db7789e11f85158604b03c920e06ee1e5ee762c64b14f2d2d79c
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://3504214d1bc6db7789e11f85158604b03c920e06ee1e5ee762c64b14f2d2d79c
          exitCode: 0
          finishedAt: "2022-06-30T12:56:01Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:01Z"
    - containerID: docker://d3991a463c78d254396bde20ed11db3b29eba4d30537d3b00aac16bedfb697ea
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://d3991a463c78d254396bde20ed11db3b29eba4d30537d3b00aac16bedfb697ea
          exitCode: 0
          finishedAt: "2022-06-30T12:56:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:00Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://01c7037cbcd986ce1acc75923b7ffce3a8a8e13c239ddf3790834f162d55f814
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://01c7037cbcd986ce1acc75923b7ffce3a8a8e13c239ddf3790834f162d55f814
          exitCode: 0
          finishedAt: "2022-06-30T12:55:58Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:58Z"
    phase: Succeeded
    podIP: 10.200.56.100
    podIPs:
    - ip: 10.200.56.100
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-7tk4j
      workflows.argoproj.io/node-name: hello-world-7tk4j
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-7tk4j/hello-world-7tk4j/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:35Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-7tk4j
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8f7529a4-f60d-4ed1-958d-a723ae61678f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.148"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:43Z"
    name: hello-world-7tk4j
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-7tk4j
      uid: 8f7529a4-f60d-4ed1-958d-a723ae61678f
    resourceVersion: "19782832"
    uid: 5230af00-6b50-43fd-8175-2acde895caa4
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-7tk4j
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7tk4j/hello-world-7tk4j"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7tk4j
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7tk4j/hello-world-7tk4j"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7tk4j
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-7tk4j
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-7tk4j/hello-world-7tk4j"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-7tk4j
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:38Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:35Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:35Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d4759462d5270f3b675c7da2cc8e35e39df19d7d675c13c48c576578897c4cee
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://d4759462d5270f3b675c7da2cc8e35e39df19d7d675c13c48c576578897c4cee
          exitCode: 0
          finishedAt: "2022-06-30T12:57:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:42Z"
    - containerID: docker://12e6b5ef408a737b0edcd61aabdbea05becf97bc45c983b61d648704ca46db80
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://12e6b5ef408a737b0edcd61aabdbea05becf97bc45c983b61d648704ca46db80
          exitCode: 0
          finishedAt: "2022-06-30T12:57:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:40Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://5e54acf801210a377cc98f26b8c1e2dc01bd508efc15dcddda59da88edbe015c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://5e54acf801210a377cc98f26b8c1e2dc01bd508efc15dcddda59da88edbe015c
          exitCode: 0
          finishedAt: "2022-06-30T12:57:37Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:37Z"
    phase: Succeeded
    podIP: 10.200.25.148
    podIPs:
    - ip: 10.200.25.148
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-8ptbc
      workflows.argoproj.io/node-name: hello-world-8ptbc
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-8ptbc/hello-world-8ptbc/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:54Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-8ptbc
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ba67ef2a-6fa2-4aee-a6fb-cb18558dd74c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.89"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:01Z"
    name: hello-world-8ptbc
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-8ptbc
      uid: ba67ef2a-6fa2-4aee-a6fb-cb18558dd74c
    resourceVersion: "19781161"
    uid: 70538213-1e7c-4773-8884-3d03f1ede07f
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-8ptbc
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-8ptbc/hello-world-8ptbc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-8ptbc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-8ptbc/hello-world-8ptbc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-8ptbc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-8ptbc
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-8ptbc/hello-world-8ptbc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-8ptbc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:57Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:54Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:54Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://12806bf20a390d6f7be541415e0a1d8936a12f39fe9075f4b517ac6be45cbe08
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://12806bf20a390d6f7be541415e0a1d8936a12f39fe9075f4b517ac6be45cbe08
          exitCode: 0
          finishedAt: "2022-06-30T12:56:00Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:00Z"
    - containerID: docker://d034f1031678a6d9985fee89d1c95660ab6831111495afce1a0b1b525621b10c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://d034f1031678a6d9985fee89d1c95660ab6831111495afce1a0b1b525621b10c
          exitCode: 0
          finishedAt: "2022-06-30T12:56:00Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:58Z"
    hostIP: 10.0.13.61
    initContainerStatuses:
    - containerID: docker://5af5bbd0f6217b1638550c38341abe1c2e2d11cdb994eeace2ea88fcbe3284c2
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://5af5bbd0f6217b1638550c38341abe1c2e2d11cdb994eeace2ea88fcbe3284c2
          exitCode: 0
          finishedAt: "2022-06-30T12:55:56Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:56Z"
    phase: Succeeded
    podIP: 10.200.74.89
    podIPs:
    - ip: 10.200.74.89
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-8q8rr
      workflows.argoproj.io/node-name: hello-world-8q8rr
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-8q8rr/hello-world-8q8rr/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:55Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-8q8rr
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d349483b-b47e-4e2f-9954-d77c20dd589f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.143"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:03Z"
    name: hello-world-8q8rr
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-8q8rr
      uid: d349483b-b47e-4e2f-9954-d77c20dd589f
    resourceVersion: "19782200"
    uid: d4420382-ba12-4d90-acdb-629296cc1c81
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-8q8rr
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-8q8rr/hello-world-8q8rr"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-8q8rr
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-8q8rr/hello-world-8q8rr"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-8q8rr
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-8q8rr
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-8q8rr/hello-world-8q8rr"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-8q8rr
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:58Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:55Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:55Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4781f932eb390a71974d6bccd6e529be85843d29316746b98c7204ade77a3431
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://4781f932eb390a71974d6bccd6e529be85843d29316746b98c7204ade77a3431
          exitCode: 0
          finishedAt: "2022-06-30T12:57:01Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:01Z"
    - containerID: docker://e9ac6dc1198b899d686b7de3fd02baa5299cd3ca3625849ecdb93d891d154cb2
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://e9ac6dc1198b899d686b7de3fd02baa5299cd3ca3625849ecdb93d891d154cb2
          exitCode: 0
          finishedAt: "2022-06-30T12:57:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:00Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://39cea57c48d0eee3c6171a986d2a7d513d2e836ff17c0c389c2ef4e977e04854
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://39cea57c48d0eee3c6171a986d2a7d513d2e836ff17c0c389c2ef4e977e04854
          exitCode: 0
          finishedAt: "2022-06-30T12:56:58Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:57Z"
    phase: Succeeded
    podIP: 10.200.25.143
    podIPs:
    - ip: 10.200.25.143
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-8zqdb
      workflows.argoproj.io/node-name: hello-world-8zqdb
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-8zqdb/hello-world-8zqdb/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:54:55Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-8zqdb
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"81cf78bb-584b-431b-a096-5a878f36e58f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:54:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.10.114"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:02Z"
    name: hello-world-8zqdb
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-8zqdb
      uid: 81cf78bb-584b-431b-a096-5a878f36e58f
    resourceVersion: "19780134"
    uid: 47ce0a22-1da4-4544-ab8e-e4590f837ee7
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-8zqdb
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-8zqdb/hello-world-8zqdb"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-8zqdb
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-8zqdb/hello-world-8zqdb"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-8zqdb
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-8zqdb
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-8zqdb/hello-world-8zqdb"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-8zqdb
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-123.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:58Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:55Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:55Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b320c65266ffb23ededf481a099c3a476ecf76283e8447444fd06d71769300cb
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://b320c65266ffb23ededf481a099c3a476ecf76283e8447444fd06d71769300cb
          exitCode: 0
          finishedAt: "2022-06-30T12:55:01Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:01Z"
    - containerID: docker://b51ff5d650b9f7cc9367ecd31f26fb345ff42bada06e499c753581c4c82d1168
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://b51ff5d650b9f7cc9367ecd31f26fb345ff42bada06e499c753581c4c82d1168
          exitCode: 0
          finishedAt: "2022-06-30T12:55:01Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:59Z"
    hostIP: 10.0.12.123
    initContainerStatuses:
    - containerID: docker://9d938ed4ac4797d6c3e6513efee502583826bdab07fb8c385776355e84de1a35
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://9d938ed4ac4797d6c3e6513efee502583826bdab07fb8c385776355e84de1a35
          exitCode: 0
          finishedAt: "2022-06-30T12:54:57Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:57Z"
    phase: Succeeded
    podIP: 10.200.10.114
    podIPs:
    - ip: 10.200.10.114
    qosClass: BestEffort
    startTime: "2022-06-30T12:54:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-92rmm
      workflows.argoproj.io/node-name: hello-world-92rmm
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-92rmm/hello-world-92rmm/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:16Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-92rmm
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a8834da6-989f-43bc-9d46-f99795b7f069"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.106"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:24Z"
    name: hello-world-92rmm
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-92rmm
      uid: a8834da6-989f-43bc-9d46-f99795b7f069
    resourceVersion: "19782561"
    uid: a3a01175-8199-497b-9628-e474f1ffe514
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-92rmm
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-92rmm/hello-world-92rmm"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-92rmm
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-92rmm/hello-world-92rmm"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-92rmm
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-92rmm
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-92rmm/hello-world-92rmm"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-92rmm
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:16Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:16Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://94427cd6cc5356e0a3517ed7c2b0ba6cb419813a64f5fd3fb51fded8e78a8762
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://94427cd6cc5356e0a3517ed7c2b0ba6cb419813a64f5fd3fb51fded8e78a8762
          exitCode: 0
          finishedAt: "2022-06-30T12:57:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:22Z"
    - containerID: docker://70c511bd8be35b0c9ea8d92871727599b5ed47c822a6d9a6c00e5bb2bbf8757d
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://70c511bd8be35b0c9ea8d92871727599b5ed47c822a6d9a6c00e5bb2bbf8757d
          exitCode: 0
          finishedAt: "2022-06-30T12:57:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:21Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://ce4706767002bab79cb36349392b9299cd145c8d68224950e990676a3363fff6
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://ce4706767002bab79cb36349392b9299cd145c8d68224950e990676a3363fff6
          exitCode: 0
          finishedAt: "2022-06-30T12:57:19Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:19Z"
    phase: Succeeded
    podIP: 10.200.45.106
    podIPs:
    - ip: 10.200.45.106
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-9pb8s
      workflows.argoproj.io/node-name: hello-world-9pb8s
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-9pb8s/hello-world-9pb8s/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:56Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-9pb8s
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"41e31fe0-f797-418c-8d5e-b62f31855471"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.104"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:04Z"
    name: hello-world-9pb8s
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-9pb8s
      uid: 41e31fe0-f797-418c-8d5e-b62f31855471
    resourceVersion: "19782217"
    uid: a74ed6e7-30e3-40b5-ba62-c7eb3d52ea67
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-9pb8s
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-9pb8s/hello-world-9pb8s"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-9pb8s
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-9pb8s/hello-world-9pb8s"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-9pb8s
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-9pb8s
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-9pb8s/hello-world-9pb8s"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-9pb8s
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:56Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:56Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bd9d66adcf7537346fc0e0475f9292d6affb257abdc37543870487252e9aae4d
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://bd9d66adcf7537346fc0e0475f9292d6affb257abdc37543870487252e9aae4d
          exitCode: 0
          finishedAt: "2022-06-30T12:57:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:02Z"
    - containerID: docker://7b6084497f725a3399da272525570ccc0eac4445d1604b8c4339fa37681bcac9
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://7b6084497f725a3399da272525570ccc0eac4445d1604b8c4339fa37681bcac9
          exitCode: 0
          finishedAt: "2022-06-30T12:57:03Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:01Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://ff1a9768af67343c3366ad0ac712cd2b0e81aa09b43a45e07d1ed4bbf1c3fe81
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://ff1a9768af67343c3366ad0ac712cd2b0e81aa09b43a45e07d1ed4bbf1c3fe81
          exitCode: 0
          finishedAt: "2022-06-30T12:56:59Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:59Z"
    phase: Succeeded
    podIP: 10.200.45.104
    podIPs:
    - ip: 10.200.45.104
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-b7dxg
      workflows.argoproj.io/node-name: hello-world-b7dxg
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-b7dxg/hello-world-b7dxg/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:36Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-b7dxg
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"407cbe74-a986-47c0-94a1-6b2a7e03d169"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.96"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:44Z"
    name: hello-world-b7dxg
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-b7dxg
      uid: 407cbe74-a986-47c0-94a1-6b2a7e03d169
    resourceVersion: "19780845"
    uid: 6bd97a9b-1dba-43bb-855c-9303e8ea46d5
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-b7dxg
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-b7dxg/hello-world-b7dxg"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-b7dxg
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-b7dxg/hello-world-b7dxg"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-b7dxg
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-b7dxg
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-b7dxg/hello-world-b7dxg"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-b7dxg
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:39Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c67ce3c2315dacfba7ef467e368f201afffe2a19d1a463e023b9901e6f3bf674
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c67ce3c2315dacfba7ef467e368f201afffe2a19d1a463e023b9901e6f3bf674
          exitCode: 0
          finishedAt: "2022-06-30T12:55:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:42Z"
    - containerID: docker://e5de5837ed09cccd2beafe6ae3c330ceb4a37f35e61960eb85f85eab596bc1ec
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://e5de5837ed09cccd2beafe6ae3c330ceb4a37f35e61960eb85f85eab596bc1ec
          exitCode: 0
          finishedAt: "2022-06-30T12:55:43Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:40Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://a1955cfcb77fef7464baca40fb57bd3e5c9ada50720e526f68bec49f6b3dd7af
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://a1955cfcb77fef7464baca40fb57bd3e5c9ada50720e526f68bec49f6b3dd7af
          exitCode: 0
          finishedAt: "2022-06-30T12:55:39Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:38Z"
    phase: Succeeded
    podIP: 10.200.45.96
    podIPs:
    - ip: 10.200.45.96
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-bgvkr
      workflows.argoproj.io/node-name: hello-world-bgvkr
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-bgvkr/hello-world-bgvkr/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:56Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-bgvkr
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e4ef79ec-fc6d-4afb-b2e5-6ebe9211c067"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.103"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:03Z"
    name: hello-world-bgvkr
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-bgvkr
      uid: e4ef79ec-fc6d-4afb-b2e5-6ebe9211c067
    resourceVersion: "19782207"
    uid: 099cb9ed-134a-48d1-8352-9e94ffa26275
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-bgvkr
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-bgvkr/hello-world-bgvkr"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-bgvkr
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-bgvkr/hello-world-bgvkr"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-bgvkr
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-bgvkr
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-bgvkr/hello-world-bgvkr"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-bgvkr
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:56Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:56Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f709156461dadfae7fc3b7056429e49890796b32fcba6622a6585e18bad67208
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://f709156461dadfae7fc3b7056429e49890796b32fcba6622a6585e18bad67208
          exitCode: 0
          finishedAt: "2022-06-30T12:57:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:02Z"
    - containerID: docker://72d87020fae34fed203ac3fefc787ac9a1baa95637930c25934910f99484afc1
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://72d87020fae34fed203ac3fefc787ac9a1baa95637930c25934910f99484afc1
          exitCode: 0
          finishedAt: "2022-06-30T12:57:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:00Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://bf43ab1e01ba1adbef2e72ee2ac1bc5c4d2fc37f117cee71d719afb0ad5f357c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://bf43ab1e01ba1adbef2e72ee2ac1bc5c4d2fc37f117cee71d719afb0ad5f357c
          exitCode: 0
          finishedAt: "2022-06-30T12:56:58Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:58Z"
    phase: Succeeded
    podIP: 10.200.56.103
    podIPs:
    - ip: 10.200.56.103
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-bkthz
      workflows.argoproj.io/node-name: hello-world-bkthz
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-bkthz/hello-world-bkthz/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:36Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-bkthz
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"38c15e31-538a-47fd-8bb8-7b00913336cd"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.78"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:44Z"
    name: hello-world-bkthz
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-bkthz
      uid: 38c15e31-538a-47fd-8bb8-7b00913336cd
    resourceVersion: "19781877"
    uid: ddfeb994-f3eb-44aa-99a5-d227af4ebb06
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-bkthz
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-bkthz/hello-world-bkthz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-bkthz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-bkthz/hello-world-bkthz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-bkthz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-bkthz
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-bkthz/hello-world-bkthz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-bkthz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:40Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a6b4e1a5cc898207842d2f3f3981379d2630024159b7db45e3e98ed2d08aa16e
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://a6b4e1a5cc898207842d2f3f3981379d2630024159b7db45e3e98ed2d08aa16e
          exitCode: 0
          finishedAt: "2022-06-30T12:56:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:42Z"
    - containerID: docker://372b9f7b5b7bf1ba43c9afda407892c27b0cd88ac499a38a3ed8ad19803d6462
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://372b9f7b5b7bf1ba43c9afda407892c27b0cd88ac499a38a3ed8ad19803d6462
          exitCode: 0
          finishedAt: "2022-06-30T12:56:43Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:41Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://2ec09fd695a5bee64657cc2649f34140fdd7ad1dc5db5022adde029fbc0c3658
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://2ec09fd695a5bee64657cc2649f34140fdd7ad1dc5db5022adde029fbc0c3658
          exitCode: 0
          finishedAt: "2022-06-30T12:56:39Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:39Z"
    phase: Succeeded
    podIP: 10.200.29.78
    podIPs:
    - ip: 10.200.29.78
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-brz87
      workflows.argoproj.io/node-name: hello-world-brz87
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-brz87/hello-world-brz87/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:34Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-brz87
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e78f0b49-a8f3-43fd-93fe-e5ca3e9a519c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.88"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:42Z"
    name: hello-world-brz87
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-brz87
      uid: e78f0b49-a8f3-43fd-93fe-e5ca3e9a519c
    resourceVersion: "19780808"
    uid: d4b26fbb-1794-4127-b0ff-2d7cedca4af2
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-brz87
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-brz87/hello-world-brz87"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-brz87
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-brz87/hello-world-brz87"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-brz87
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-brz87
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-brz87/hello-world-brz87"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-brz87
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:37Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:34Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:34Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7966ff91993424d592720ee2fb5478d81532935156327921c35cf8710a8ad553
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://7966ff91993424d592720ee2fb5478d81532935156327921c35cf8710a8ad553
          exitCode: 0
          finishedAt: "2022-06-30T12:55:40Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:40Z"
    - containerID: docker://d14959b8beee5760ec7f64effb02d4b0d4dfc27bb6aa0aeaf3b098e619a4b32f
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://d14959b8beee5760ec7f64effb02d4b0d4dfc27bb6aa0aeaf3b098e619a4b32f
          exitCode: 0
          finishedAt: "2022-06-30T12:55:41Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:38Z"
    hostIP: 10.0.13.61
    initContainerStatuses:
    - containerID: docker://c9e144dc40280ead5a9c3bf09a2b28f15f0428ab454928f9cd3beecbbee1064a
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://c9e144dc40280ead5a9c3bf09a2b28f15f0428ab454928f9cd3beecbbee1064a
          exitCode: 0
          finishedAt: "2022-06-30T12:55:36Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:36Z"
    phase: Succeeded
    podIP: 10.200.74.88
    podIPs:
    - ip: 10.200.74.88
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-dc6g5
      workflows.argoproj.io/node-name: hello-world-dc6g5
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-dc6g5/hello-world-dc6g5/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:15Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-dc6g5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dd5202c1-32ba-4638-a51d-0125e480559c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.94"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:22Z"
    name: hello-world-dc6g5
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-dc6g5
      uid: dd5202c1-32ba-4638-a51d-0125e480559c
    resourceVersion: "19780479"
    uid: a9cc1a5f-c07c-4315-925f-db2dd57b212a
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dc6g5
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dc6g5/hello-world-dc6g5"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dc6g5
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dc6g5/hello-world-dc6g5"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dc6g5
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dc6g5
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dc6g5/hello-world-dc6g5"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dc6g5
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:18Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:15Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:15Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5ec642f193235459eb9b871c6778a061e5f9778bf14f2f6d32cd2700174e5872
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://5ec642f193235459eb9b871c6778a061e5f9778bf14f2f6d32cd2700174e5872
          exitCode: 0
          finishedAt: "2022-06-30T12:55:21Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:21Z"
    - containerID: docker://3ce1572c71c486b676df7b1d8a18d977857783d0e8560b6df75defa606491c0e
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://3ce1572c71c486b676df7b1d8a18d977857783d0e8560b6df75defa606491c0e
          exitCode: 0
          finishedAt: "2022-06-30T12:55:21Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:19Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://4ad917f287155fc50ca312ee56160507f8ced42053c49724e90740d6e95aa47b
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://4ad917f287155fc50ca312ee56160507f8ced42053c49724e90740d6e95aa47b
          exitCode: 0
          finishedAt: "2022-06-30T12:55:17Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:17Z"
    phase: Succeeded
    podIP: 10.200.45.94
    podIPs:
    - ip: 10.200.45.94
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-dp5gp
      workflows.argoproj.io/node-name: hello-world-dp5gp
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-dp5gp/hello-world-dp5gp/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:07Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-dp5gp
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f9075fec-411d-465d-ba40-0f42e0375a50"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.93"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:15Z"
    name: hello-world-dp5gp
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-dp5gp
      uid: f9075fec-411d-465d-ba40-0f42e0375a50
    resourceVersion: "19780322"
    uid: 17875789-768d-4ad3-9599-c08f52a74b80
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dp5gp
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dp5gp/hello-world-dp5gp"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dp5gp
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dp5gp/hello-world-dp5gp"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dp5gp
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dp5gp
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dp5gp/hello-world-dp5gp"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dp5gp
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:10Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:07Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:07Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d275cd5ec0094371a551263b58c11ddfadbdcfc721cb4af19924b61349cda749
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://d275cd5ec0094371a551263b58c11ddfadbdcfc721cb4af19924b61349cda749
          exitCode: 0
          finishedAt: "2022-06-30T12:55:13Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:13Z"
    - containerID: docker://3a53cf46b7b37d1c808ab06119be4d8c8cefa43a4de28a38f66aa58af81dbf10
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://3a53cf46b7b37d1c808ab06119be4d8c8cefa43a4de28a38f66aa58af81dbf10
          exitCode: 0
          finishedAt: "2022-06-30T12:55:14Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:12Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://c6327938d5d948ebd74691de9fbed3c254cd277dc0d599a52facd365a77f4194
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://c6327938d5d948ebd74691de9fbed3c254cd277dc0d599a52facd365a77f4194
          exitCode: 0
          finishedAt: "2022-06-30T12:55:10Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:10Z"
    phase: Succeeded
    podIP: 10.200.45.93
    podIPs:
    - ip: 10.200.45.93
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-dpjgn
      workflows.argoproj.io/node-name: hello-world-dpjgn
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-dpjgn/hello-world-dpjgn/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:28Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-dpjgn
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ae3bbedf-f6b9-45c9-95e1-4a1e95fd326f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.95"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:36Z"
    name: hello-world-dpjgn
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-dpjgn
      uid: ae3bbedf-f6b9-45c9-95e1-4a1e95fd326f
    resourceVersion: "19780696"
    uid: bf746a9c-f0cb-4ceb-8875-6aa016f764e1
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dpjgn
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dpjgn/hello-world-dpjgn"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dpjgn
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dpjgn/hello-world-dpjgn"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dpjgn
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dpjgn
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dpjgn/hello-world-dpjgn"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dpjgn
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:32Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:28Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:28Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://323b50b6f039cc45d9017c79d8be70de8c61c7f2a75a5afaf9c22eeab3b102c2
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://323b50b6f039cc45d9017c79d8be70de8c61c7f2a75a5afaf9c22eeab3b102c2
          exitCode: 0
          finishedAt: "2022-06-30T12:55:35Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:34Z"
    - containerID: docker://034d8a573955fac886b9da08f3a2373516428ccd5387fbe83f776f12c827704e
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://034d8a573955fac886b9da08f3a2373516428ccd5387fbe83f776f12c827704e
          exitCode: 0
          finishedAt: "2022-06-30T12:55:35Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:33Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://979cb922ce381e4a331f5d60d99c1c9cee9fa3e6f300f5b14133a5f3df060db3
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://979cb922ce381e4a331f5d60d99c1c9cee9fa3e6f300f5b14133a5f3df060db3
          exitCode: 0
          finishedAt: "2022-06-30T12:55:31Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:31Z"
    phase: Succeeded
    podIP: 10.200.45.95
    podIPs:
    - ip: 10.200.45.95
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-dqfvh
      workflows.argoproj.io/node-name: hello-world-dqfvh
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-dqfvh/hello-world-dqfvh/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:37Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-dqfvh
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"52817dfc-2e96-4b2f-98e7-2a7aaff8cd91"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.102"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:44Z"
    name: hello-world-dqfvh
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-dqfvh
      uid: 52817dfc-2e96-4b2f-98e7-2a7aaff8cd91
    resourceVersion: "19781884"
    uid: fd295949-5bbe-40d8-9ccf-f5e941cdf7fa
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dqfvh
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dqfvh/hello-world-dqfvh"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dqfvh
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dqfvh/hello-world-dqfvh"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dqfvh
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dqfvh
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dqfvh/hello-world-dqfvh"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dqfvh
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:40Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:37Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:37Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3696dc9433e55b7ff25fa660c43c08bc8846b601df5f26c9f908918836f15901
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://3696dc9433e55b7ff25fa660c43c08bc8846b601df5f26c9f908918836f15901
          exitCode: 0
          finishedAt: "2022-06-30T12:56:43Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:42Z"
    - containerID: docker://2fdef94186f8d9a705bb09e8b88b8ef1d4331bf1edf265a1fed40220a9ec0525
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://2fdef94186f8d9a705bb09e8b88b8ef1d4331bf1edf265a1fed40220a9ec0525
          exitCode: 0
          finishedAt: "2022-06-30T12:56:43Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:41Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://519c348d020632ee34ce00f89da7d05ceda70a07dc502c7a78de90254f0dee49
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://519c348d020632ee34ce00f89da7d05ceda70a07dc502c7a78de90254f0dee49
          exitCode: 0
          finishedAt: "2022-06-30T12:56:39Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:39Z"
    phase: Succeeded
    podIP: 10.200.45.102
    podIPs:
    - ip: 10.200.45.102
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-dsg62
      workflows.argoproj.io/node-name: hello-world-dsg62
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-dsg62/hello-world-dsg62/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:35Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-dsg62
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d02f7b98-8ef5-4644-8b64-75c65e316585"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.99"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:43Z"
    name: hello-world-dsg62
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-dsg62
      uid: d02f7b98-8ef5-4644-8b64-75c65e316585
    resourceVersion: "19780835"
    uid: 256de2c8-6ebe-49fd-b0c2-9b78b319213e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dsg62
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dsg62/hello-world-dsg62"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dsg62
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dsg62/hello-world-dsg62"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dsg62
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dsg62
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dsg62/hello-world-dsg62"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dsg62
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:39Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:35Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:35Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ca948fbfb5e2b4a787ea2c8c9e3fd97e02c6877a6bf816f0e30df3c21b711dfe
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://ca948fbfb5e2b4a787ea2c8c9e3fd97e02c6877a6bf816f0e30df3c21b711dfe
          exitCode: 0
          finishedAt: "2022-06-30T12:55:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:41Z"
    - containerID: docker://c9abc254270172edf66b32fa9db2dfbc1e9582d0fdaeff5132fcb921d18455ef
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c9abc254270172edf66b32fa9db2dfbc1e9582d0fdaeff5132fcb921d18455ef
          exitCode: 0
          finishedAt: "2022-06-30T12:55:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:40Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://07f0158cf5d483463ddad4e5e83b25b2411f5fb7386e5c4b515e1c69f559b6a5
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://07f0158cf5d483463ddad4e5e83b25b2411f5fb7386e5c4b515e1c69f559b6a5
          exitCode: 0
          finishedAt: "2022-06-30T12:55:38Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:38Z"
    phase: Succeeded
    podIP: 10.200.56.99
    podIPs:
    - ip: 10.200.56.99
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-dsz99
      workflows.argoproj.io/node-name: hello-world-dsz99
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-dsz99/hello-world-dsz99/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:15Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-dsz99
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2a4636c5-add0-4838-a984-d9259109cc3c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.128"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:23Z"
    name: hello-world-dsz99
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-dsz99
      uid: 2a4636c5-add0-4838-a984-d9259109cc3c
    resourceVersion: "19780485"
    uid: e8a9d1c7-7dc4-43a8-913a-7b2021251178
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dsz99
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dsz99/hello-world-dsz99"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dsz99
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dsz99/hello-world-dsz99"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dsz99
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dsz99
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dsz99/hello-world-dsz99"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dsz99
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:18Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:15Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:15Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a87b72ed4fde729ab9b6ca8b3c08317c9c322b2afa7eb5452d7f974d22736a9a
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://a87b72ed4fde729ab9b6ca8b3c08317c9c322b2afa7eb5452d7f974d22736a9a
          exitCode: 0
          finishedAt: "2022-06-30T12:55:21Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:21Z"
    - containerID: docker://0fc7c4357911124c2ae09cd1988fa076dec724480efff8797d091d8ee3324470
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://0fc7c4357911124c2ae09cd1988fa076dec724480efff8797d091d8ee3324470
          exitCode: 0
          finishedAt: "2022-06-30T12:55:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:20Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://9529a0af800e87f630ebb1a033e2fa71410d2792e86181fa9fd67054360b36b2
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://9529a0af800e87f630ebb1a033e2fa71410d2792e86181fa9fd67054360b36b2
          exitCode: 0
          finishedAt: "2022-06-30T12:55:17Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:17Z"
    phase: Succeeded
    podIP: 10.200.25.128
    podIPs:
    - ip: 10.200.25.128
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-dwbgk
      workflows.argoproj.io/node-name: hello-world-dwbgk
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-dwbgk/hello-world-dwbgk/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:15Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-dwbgk
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"645ba67f-b7d8-4b48-b9c3-d4910292ba76"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.145"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:21Z"
    name: hello-world-dwbgk
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-dwbgk
      uid: 645ba67f-b7d8-4b48-b9c3-d4910292ba76
    resourceVersion: "19782536"
    uid: 75688210-9c9f-4a4a-be0b-5d33b206c172
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dwbgk
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dwbgk/hello-world-dwbgk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dwbgk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dwbgk/hello-world-dwbgk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dwbgk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-dwbgk
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-dwbgk/hello-world-dwbgk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-dwbgk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:17Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:15Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:15Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://96876411725dc190b2a7cfdc530dec7ee8e8c02be149e73b8f0a228d9b366294
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://96876411725dc190b2a7cfdc530dec7ee8e8c02be149e73b8f0a228d9b366294
          exitCode: 0
          finishedAt: "2022-06-30T12:57:20Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:20Z"
    - containerID: docker://5532593b5d9921dbdef820128e8589e6a9b6cde1664f511e48c7cdbc49adddab
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://5532593b5d9921dbdef820128e8589e6a9b6cde1664f511e48c7cdbc49adddab
          exitCode: 0
          finishedAt: "2022-06-30T12:57:21Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:18Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://37bfaeddd9cdcacbbf2b4e74b4ce82bb59bb0aff3cdb81fc1ea80bbaadda1563
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://37bfaeddd9cdcacbbf2b4e74b4ce82bb59bb0aff3cdb81fc1ea80bbaadda1563
          exitCode: 0
          finishedAt: "2022-06-30T12:57:17Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:17Z"
    phase: Succeeded
    podIP: 10.200.25.145
    podIPs:
    - ip: 10.200.25.145
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-f6hhg
      workflows.argoproj.io/node-name: hello-world-f6hhg
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-f6hhg/hello-world-f6hhg/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:15Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-f6hhg
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2bb2c053-01dc-4638-af10-56b6f18742ab"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.136"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:21Z"
    name: hello-world-f6hhg
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-f6hhg
      uid: 2bb2c053-01dc-4638-af10-56b6f18742ab
    resourceVersion: "19781512"
    uid: d20508e2-7012-44b2-91af-fa9c0e1da2ca
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-f6hhg
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-f6hhg/hello-world-f6hhg"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-f6hhg
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-f6hhg/hello-world-f6hhg"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-f6hhg
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-f6hhg
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-f6hhg/hello-world-f6hhg"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-f6hhg
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:17Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:15Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:15Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://dbd7a7412f81e612510e117780f86ec86b74b7007979474912f1768274843f90
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://dbd7a7412f81e612510e117780f86ec86b74b7007979474912f1768274843f90
          exitCode: 0
          finishedAt: "2022-06-30T12:56:20Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:20Z"
    - containerID: docker://f65476a55c353fa93f26b695454ddeb2b0e4334455866471af4f47d891858dc4
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://f65476a55c353fa93f26b695454ddeb2b0e4334455866471af4f47d891858dc4
          exitCode: 0
          finishedAt: "2022-06-30T12:56:21Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:18Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://574a9be8d46270d7076dc8c257ad105a3baff2909472e34442493e393057d47e
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://574a9be8d46270d7076dc8c257ad105a3baff2909472e34442493e393057d47e
          exitCode: 0
          finishedAt: "2022-06-30T12:56:17Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:17Z"
    phase: Succeeded
    podIP: 10.200.25.136
    podIPs:
    - ip: 10.200.25.136
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-ffb5d
      workflows.argoproj.io/node-name: hello-world-ffb5d
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-ffb5d/hello-world-ffb5d/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:16Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-ffb5d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"46dcc6a1-1cd1-4d21-b876-9010e8c0d3bc"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.87"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:23Z"
    name: hello-world-ffb5d
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-ffb5d
      uid: 46dcc6a1-1cd1-4d21-b876-9010e8c0d3bc
    resourceVersion: "19780495"
    uid: 57257649-c26f-4ad1-8e77-9cb379dbae79
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-ffb5d
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-ffb5d/hello-world-ffb5d"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-ffb5d
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-ffb5d/hello-world-ffb5d"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-ffb5d
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-ffb5d
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-ffb5d/hello-world-ffb5d"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-ffb5d
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:16Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:16Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5f9ef644e1fdb97b8881174a07ea8c967d061d3dcf2b18d7e0714048b34431b4
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://5f9ef644e1fdb97b8881174a07ea8c967d061d3dcf2b18d7e0714048b34431b4
          exitCode: 0
          finishedAt: "2022-06-30T12:55:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:22Z"
    - containerID: docker://6a0f93c1b773a77725426a6c3671ffa6de8face16faed39860a4b0c35e768d4e
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://6a0f93c1b773a77725426a6c3671ffa6de8face16faed39860a4b0c35e768d4e
          exitCode: 0
          finishedAt: "2022-06-30T12:55:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:20Z"
    hostIP: 10.0.13.61
    initContainerStatuses:
    - containerID: docker://3208b615e165edcd4c981cb6c6c9bc0028aae7ed4a98b1b63ca6741aa3e49ac8
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://3208b615e165edcd4c981cb6c6c9bc0028aae7ed4a98b1b63ca6741aa3e49ac8
          exitCode: 0
          finishedAt: "2022-06-30T12:55:18Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:18Z"
    phase: Succeeded
    podIP: 10.200.74.87
    podIPs:
    - ip: 10.200.74.87
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-fkvjz
      workflows.argoproj.io/node-name: hello-world-fkvjz
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-fkvjz/hello-world-fkvjz/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:17Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-fkvjz
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"31e0be4a-1463-4894-8bb1-35edae9f799d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.22.113"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:25Z"
    name: hello-world-fkvjz
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-fkvjz
      uid: 31e0be4a-1463-4894-8bb1-35edae9f799d
    resourceVersion: "19782583"
    uid: 96a67abc-bce6-4fb3-a5cf-9cdc980ff44e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-fkvjz
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-fkvjz/hello-world-fkvjz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-fkvjz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-fkvjz/hello-world-fkvjz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-fkvjz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-fkvjz
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-fkvjz/hello-world-fkvjz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-fkvjz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-58.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:21Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:17Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:17Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://df3cd785fe8b7a6316257eb1e82864c24506950a1f6a0232db913a8d6251192e
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://df3cd785fe8b7a6316257eb1e82864c24506950a1f6a0232db913a8d6251192e
          exitCode: 0
          finishedAt: "2022-06-30T12:57:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:23Z"
    - containerID: docker://385a03737c10b501d0c24ec937876a8c45a335b63a4013ee454a028d9e7962ff
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://385a03737c10b501d0c24ec937876a8c45a335b63a4013ee454a028d9e7962ff
          exitCode: 0
          finishedAt: "2022-06-30T12:57:24Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:22Z"
    hostIP: 10.0.13.58
    initContainerStatuses:
    - containerID: docker://d09d4a946df50ca297a94f93a2293f0a2f52e2e43ba06a34d4cb79130aa638c4
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://d09d4a946df50ca297a94f93a2293f0a2f52e2e43ba06a34d4cb79130aa638c4
          exitCode: 0
          finishedAt: "2022-06-30T12:57:20Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:20Z"
    phase: Succeeded
    podIP: 10.200.22.113
    podIPs:
    - ip: 10.200.22.113
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-fntz7
      workflows.argoproj.io/node-name: hello-world-fntz7
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-fntz7/hello-world-fntz7/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:16Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-fntz7
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6ec9a638-4806-45d3-af79-72e45fe870c6"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.100"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:24Z"
    name: hello-world-fntz7
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-fntz7
      uid: 6ec9a638-4806-45d3-af79-72e45fe870c6
    resourceVersion: "19781536"
    uid: 314324f4-3cf3-4300-b042-dfad26562bec
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-fntz7
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-fntz7/hello-world-fntz7"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-fntz7
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-fntz7/hello-world-fntz7"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-fntz7
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-fntz7
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-fntz7/hello-world-fntz7"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-fntz7
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:20Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:16Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:16Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://9f6bdb17bfd10c1c701236d9b49a62ec496c49c16a79751563a78db1a33ed05d
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://9f6bdb17bfd10c1c701236d9b49a62ec496c49c16a79751563a78db1a33ed05d
          exitCode: 0
          finishedAt: "2022-06-30T12:56:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:22Z"
    - containerID: docker://1f65ccd661d7d6364d40207f66e4f0d094a28932bdaea3a242e7f9c87e57300a
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://1f65ccd661d7d6364d40207f66e4f0d094a28932bdaea3a242e7f9c87e57300a
          exitCode: 0
          finishedAt: "2022-06-30T12:56:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:21Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://11c5743beb126425f60680ef50e98af00d25c4e4333ff5c0b43d13e8fa70ee97
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://11c5743beb126425f60680ef50e98af00d25c4e4333ff5c0b43d13e8fa70ee97
          exitCode: 0
          finishedAt: "2022-06-30T12:56:19Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:19Z"
    phase: Succeeded
    podIP: 10.200.45.100
    podIPs:
    - ip: 10.200.45.100
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-fsstl
      workflows.argoproj.io/node-name: hello-world-fsstl
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-fsstl/hello-world-fsstl/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:54:55Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-fsstl
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e18cb760-7d93-4f05-8c03-2b049adb4fa6"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:54:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.84.104"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:03Z"
    name: hello-world-fsstl
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-fsstl
      uid: e18cb760-7d93-4f05-8c03-2b049adb4fa6
    resourceVersion: "19780144"
    uid: ef7dd560-af90-42d6-9576-88c4423d73fd
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-fsstl
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-fsstl/hello-world-fsstl"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-fsstl
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-fsstl/hello-world-fsstl"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-fsstl
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-fsstl
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-fsstl/hello-world-fsstl"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-fsstl
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-124.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:55Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:55Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5dfdfe40f6252e4a1732e30635d29123fa7f2168180245fd9a9effebda89f2eb
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://5dfdfe40f6252e4a1732e30635d29123fa7f2168180245fd9a9effebda89f2eb
          exitCode: 0
          finishedAt: "2022-06-30T12:55:01Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:01Z"
    - containerID: docker://f856b6c6ffc91de35ca62ce2ce97727d14001ae2e06dd0c79005666c82f1a7ab
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://f856b6c6ffc91de35ca62ce2ce97727d14001ae2e06dd0c79005666c82f1a7ab
          exitCode: 0
          finishedAt: "2022-06-30T12:55:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:00Z"
    hostIP: 10.0.12.124
    initContainerStatuses:
    - containerID: docker://25e634731919cbf2c60944a9d13bc76b9ac2f0e20dbdd6f2e6e5487b3a0993ac
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://25e634731919cbf2c60944a9d13bc76b9ac2f0e20dbdd6f2e6e5487b3a0993ac
          exitCode: 0
          finishedAt: "2022-06-30T12:54:58Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:58Z"
    phase: Succeeded
    podIP: 10.200.84.104
    podIPs:
    - ip: 10.200.84.104
    qosClass: BestEffort
    startTime: "2022-06-30T12:54:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-gpm6l
      workflows.argoproj.io/node-name: hello-world-gpm6l
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-gpm6l/hello-world-gpm6l/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:27Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-gpm6l
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f6962770-ca44-41d0-a77e-3723aef3d23a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.138"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:35Z"
    name: hello-world-gpm6l
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-gpm6l
      uid: f6962770-ca44-41d0-a77e-3723aef3d23a
    resourceVersion: "19781698"
    uid: 1533d072-2388-45d4-be6c-c9e3bc25fb55
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-gpm6l
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-gpm6l/hello-world-gpm6l"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-gpm6l
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-gpm6l/hello-world-gpm6l"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-gpm6l
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-gpm6l
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-gpm6l/hello-world-gpm6l"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-gpm6l
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:31Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:27Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:27Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a4e0302aa490511797932e32cf8cb2b911b0d7ad9f037f0c86b2a274190c3370
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://a4e0302aa490511797932e32cf8cb2b911b0d7ad9f037f0c86b2a274190c3370
          exitCode: 0
          finishedAt: "2022-06-30T12:56:33Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:33Z"
    - containerID: docker://ae7ecd0385c7ca57b3c60fcb8bcc4f0f141568e433db2c29d5a465f6049c3324
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://ae7ecd0385c7ca57b3c60fcb8bcc4f0f141568e433db2c29d5a465f6049c3324
          exitCode: 0
          finishedAt: "2022-06-30T12:56:34Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:32Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://d0adf7d149431790b59057b7db9bad0374133b596fb14db3ccc9e72adb83b269
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://d0adf7d149431790b59057b7db9bad0374133b596fb14db3ccc9e72adb83b269
          exitCode: 0
          finishedAt: "2022-06-30T12:56:30Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:30Z"
    phase: Succeeded
    podIP: 10.200.25.138
    podIPs:
    - ip: 10.200.25.138
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-grv6l
      workflows.argoproj.io/node-name: hello-world-grv6l
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-grv6l/hello-world-grv6l/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:37Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-grv6l
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"169348b2-de68-4cd0-8bb0-57f3213fb810"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.84.109"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:45Z"
    name: hello-world-grv6l
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-grv6l
      uid: 169348b2-de68-4cd0-8bb0-57f3213fb810
    resourceVersion: "19781899"
    uid: cb722254-62d6-426b-ad50-d38bc7a2fa1f
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-grv6l
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-grv6l/hello-world-grv6l"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-grv6l
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-grv6l/hello-world-grv6l"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-grv6l
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-grv6l
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-grv6l/hello-world-grv6l"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-grv6l
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-124.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:41Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:37Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:37Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f1e06592c57e3ae04e7317cceb1f284ae94f5782e2a5f3e65bb08aefdd656dfc
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://f1e06592c57e3ae04e7317cceb1f284ae94f5782e2a5f3e65bb08aefdd656dfc
          exitCode: 0
          finishedAt: "2022-06-30T12:56:43Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:43Z"
    - containerID: docker://5cd2a832d91a0660e3b2dd9262186507e6c6006f0385b1039293923fe454e8b4
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://5cd2a832d91a0660e3b2dd9262186507e6c6006f0385b1039293923fe454e8b4
          exitCode: 0
          finishedAt: "2022-06-30T12:56:44Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:42Z"
    hostIP: 10.0.12.124
    initContainerStatuses:
    - containerID: docker://e2d7f5353ad68802ca56d4406d18ecf5894ef3f552af1ea4006ebcad0237e33c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://e2d7f5353ad68802ca56d4406d18ecf5894ef3f552af1ea4006ebcad0237e33c
          exitCode: 0
          finishedAt: "2022-06-30T12:56:40Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:40Z"
    phase: Succeeded
    podIP: 10.200.84.109
    podIPs:
    - ip: 10.200.84.109
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-gzzfg
      workflows.argoproj.io/node-name: hello-world-gzzfg
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-gzzfg/hello-world-gzzfg/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:54:56Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-gzzfg
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"32f4e672-af95-4f74-87aa-56e314309188"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:54:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.74"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:03Z"
    name: hello-world-gzzfg
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-gzzfg
      uid: 32f4e672-af95-4f74-87aa-56e314309188
    resourceVersion: "19780149"
    uid: 6339183a-305a-49ad-b2f6-f04146aed784
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-gzzfg
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-gzzfg/hello-world-gzzfg"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-gzzfg
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-gzzfg/hello-world-gzzfg"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-gzzfg
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-gzzfg
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-gzzfg/hello-world-gzzfg"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-gzzfg
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:56Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:56Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://12fed11ac0dbd470492fae3a30c9ac84608f9aba67fafc842a63d8809b65e88e
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://12fed11ac0dbd470492fae3a30c9ac84608f9aba67fafc842a63d8809b65e88e
          exitCode: 0
          finishedAt: "2022-06-30T12:55:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:02Z"
    - containerID: docker://a0714ccabfdf1f438a044218c45864d69eb39a0f37a41e05d5ffaa5dec4b1269
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://a0714ccabfdf1f438a044218c45864d69eb39a0f37a41e05d5ffaa5dec4b1269
          exitCode: 0
          finishedAt: "2022-06-30T12:55:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:00Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://ee1e61d67f85570dfef95f680dff417a62d7a5f20ca5820d9b0948ff3163045e
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://ee1e61d67f85570dfef95f680dff417a62d7a5f20ca5820d9b0948ff3163045e
          exitCode: 0
          finishedAt: "2022-06-30T12:54:58Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:58Z"
    phase: Succeeded
    podIP: 10.200.29.74
    podIPs:
    - ip: 10.200.29.74
    qosClass: BestEffort
    startTime: "2022-06-30T12:54:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-h5x6m
      workflows.argoproj.io/node-name: hello-world-h5x6m
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-h5x6m/hello-world-h5x6m/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:15Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-h5x6m
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e61a7f9f-1660-48d3-8578-01adc0a17916"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.137"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:23Z"
    name: hello-world-h5x6m
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-h5x6m
      uid: e61a7f9f-1660-48d3-8578-01adc0a17916
    resourceVersion: "19781520"
    uid: bf4b9e73-b097-4d92-921a-248274d26d34
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-h5x6m
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-h5x6m/hello-world-h5x6m"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-h5x6m
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-h5x6m/hello-world-h5x6m"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-h5x6m
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-h5x6m
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-h5x6m/hello-world-h5x6m"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-h5x6m
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:18Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:15Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:15Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://cc3080ec8f808ae476c1cd372153f26209ab6603a27f72529c4977c092bac0a6
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://cc3080ec8f808ae476c1cd372153f26209ab6603a27f72529c4977c092bac0a6
          exitCode: 0
          finishedAt: "2022-06-30T12:56:21Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:21Z"
    - containerID: docker://733fc6be459a8bfe81d960e607ef55906330ecc0df67287e112ad62c8f5488dd
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://733fc6be459a8bfe81d960e607ef55906330ecc0df67287e112ad62c8f5488dd
          exitCode: 0
          finishedAt: "2022-06-30T12:56:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:20Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://c1af7f363701c4c71d4dbf5bdf2c98149289c10993eaa9bd486baa2ea5e86df9
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://c1af7f363701c4c71d4dbf5bdf2c98149289c10993eaa9bd486baa2ea5e86df9
          exitCode: 0
          finishedAt: "2022-06-30T12:56:18Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:17Z"
    phase: Succeeded
    podIP: 10.200.25.137
    podIPs:
    - ip: 10.200.25.137
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-h7hdw
      workflows.argoproj.io/node-name: hello-world-h7hdw
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-h7hdw/hello-world-h7hdw/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:57Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-h7hdw
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"03240e76-5c7b-412e-89a9-3a533748bffb"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.10.118"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:04Z"
    name: hello-world-h7hdw
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-h7hdw
      uid: 03240e76-5c7b-412e-89a9-3a533748bffb
    resourceVersion: "19782225"
    uid: 08a3d567-e27d-4b0f-b973-17d5f609c38b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-h7hdw
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-h7hdw/hello-world-h7hdw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-h7hdw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-h7hdw/hello-world-h7hdw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-h7hdw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-h7hdw
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-h7hdw/hello-world-h7hdw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-h7hdw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-123.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:57Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:57Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://349d9d1b7680e576cff2897884c116b1d80e19a3d5d3f3157bd66a5c218f7171
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://349d9d1b7680e576cff2897884c116b1d80e19a3d5d3f3157bd66a5c218f7171
          exitCode: 0
          finishedAt: "2022-06-30T12:57:03Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:03Z"
    - containerID: docker://bb628141e07120b2e9f96c50439878c68afcc5a74bc141ce976d7ade8557d488
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://bb628141e07120b2e9f96c50439878c68afcc5a74bc141ce976d7ade8557d488
          exitCode: 0
          finishedAt: "2022-06-30T12:57:03Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:01Z"
    hostIP: 10.0.12.123
    initContainerStatuses:
    - containerID: docker://69427e8b0209a36790206adcff7b4a58a093e12914223cb588352e5be1fda9da
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://69427e8b0209a36790206adcff7b4a58a093e12914223cb588352e5be1fda9da
          exitCode: 0
          finishedAt: "2022-06-30T12:56:59Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:59Z"
    phase: Succeeded
    podIP: 10.200.10.118
    podIPs:
    - ip: 10.200.10.118
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-hcvnc
      workflows.argoproj.io/node-name: hello-world-hcvnc
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-hcvnc/hello-world-hcvnc/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:29Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-hcvnc
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c14d5386-3210-4ef0-afbd-5e518e4ab313"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:29Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.101"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:36Z"
    name: hello-world-hcvnc
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-hcvnc
      uid: c14d5386-3210-4ef0-afbd-5e518e4ab313
    resourceVersion: "19781728"
    uid: 131f0689-0a68-46c0-b82b-280571f00a0f
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-hcvnc
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-hcvnc/hello-world-hcvnc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-hcvnc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-hcvnc/hello-world-hcvnc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-hcvnc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-hcvnc
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-hcvnc/hello-world-hcvnc"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-hcvnc
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:32Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:29Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:29Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8a856810c1323e83fe8d186c007ef199fda6fea85f267ee3b62b2d19d248535c
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://8a856810c1323e83fe8d186c007ef199fda6fea85f267ee3b62b2d19d248535c
          exitCode: 0
          finishedAt: "2022-06-30T12:56:35Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:35Z"
    - containerID: docker://de5cef7699bea044c30b00a558d1068c84ffa2825edd96d8186df9d42e65f10c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://de5cef7699bea044c30b00a558d1068c84ffa2825edd96d8186df9d42e65f10c
          exitCode: 0
          finishedAt: "2022-06-30T12:56:35Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:33Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://9ed5408cedaa1dd7e41e48f89cb1c61f000ca0dfcc4d02274739ec616f5eb31c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://9ed5408cedaa1dd7e41e48f89cb1c61f000ca0dfcc4d02274739ec616f5eb31c
          exitCode: 0
          finishedAt: "2022-06-30T12:56:31Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:31Z"
    phase: Succeeded
    podIP: 10.200.45.101
    podIPs:
    - ip: 10.200.45.101
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-hrhrd
      workflows.argoproj.io/node-name: hello-world-hrhrd
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-hrhrd/hello-world-hrhrd/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:27Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-hrhrd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c6509956-926d-4c11-aab2-e1f738543e33"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.147"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:35Z"
    name: hello-world-hrhrd
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-hrhrd
      uid: c6509956-926d-4c11-aab2-e1f738543e33
    resourceVersion: "19782712"
    uid: 47928ef6-8834-48b6-aa1f-710fc7db7e32
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-hrhrd
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-hrhrd/hello-world-hrhrd"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-hrhrd
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-hrhrd/hello-world-hrhrd"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-hrhrd
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-hrhrd
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-hrhrd/hello-world-hrhrd"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-hrhrd
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:31Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:27Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:27Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8bcf0203969efa3d35c069b4071ad7a630b40f292ca61be85e8929754dcd9d7a
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://8bcf0203969efa3d35c069b4071ad7a630b40f292ca61be85e8929754dcd9d7a
          exitCode: 0
          finishedAt: "2022-06-30T12:57:34Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:33Z"
    - containerID: docker://b425adca081a5aeb3b2263e80633439acfa752964e962c8378ea1c4e8595f2e9
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://b425adca081a5aeb3b2263e80633439acfa752964e962c8378ea1c4e8595f2e9
          exitCode: 0
          finishedAt: "2022-06-30T12:57:34Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:32Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://a67bdc5691c47d062aa098da50b31cf260949b2c822c407087b6cdcdc5066569
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://a67bdc5691c47d062aa098da50b31cf260949b2c822c407087b6cdcdc5066569
          exitCode: 0
          finishedAt: "2022-06-30T12:57:30Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:30Z"
    phase: Succeeded
    podIP: 10.200.25.147
    podIPs:
    - ip: 10.200.25.147
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-jn2qp
      workflows.argoproj.io/node-name: hello-world-jn2qp
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-jn2qp/hello-world-jn2qp/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:56Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-jn2qp
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cb862845-715e-4ab9-bbc6-5da87fe3d38f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.10.116"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:03Z"
    name: hello-world-jn2qp
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-jn2qp
      uid: cb862845-715e-4ab9-bbc6-5da87fe3d38f
    resourceVersion: "19781189"
    uid: 5db08943-4357-4f8a-92f6-f31e7e9a737b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-jn2qp
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-jn2qp/hello-world-jn2qp"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-jn2qp
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-jn2qp/hello-world-jn2qp"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-jn2qp
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-jn2qp
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-jn2qp/hello-world-jn2qp"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-jn2qp
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-123.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:56Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:56Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://fe5e5f4cf255dc18823db15f93773d267fe0fd68da55083aa25086ca6e443f90
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://fe5e5f4cf255dc18823db15f93773d267fe0fd68da55083aa25086ca6e443f90
          exitCode: 0
          finishedAt: "2022-06-30T12:56:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:02Z"
    - containerID: docker://8895e91d93986e55c4c0401b4988be536c5644a6c137c5027889bf4d3e7bdfc4
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://8895e91d93986e55c4c0401b4988be536c5644a6c137c5027889bf4d3e7bdfc4
          exitCode: 0
          finishedAt: "2022-06-30T12:56:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:00Z"
    hostIP: 10.0.12.123
    initContainerStatuses:
    - containerID: docker://7bdc32ee83eefaefbfe8221d623896d49f06797d1fec726f1a0edcf23ca17cfa
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://7bdc32ee83eefaefbfe8221d623896d49f06797d1fec726f1a0edcf23ca17cfa
          exitCode: 0
          finishedAt: "2022-06-30T12:55:58Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:58Z"
    phase: Succeeded
    podIP: 10.200.10.116
    podIPs:
    - ip: 10.200.10.116
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-kk45h
      workflows.argoproj.io/node-name: hello-world-kk45h
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-kk45h/hello-world-kk45h/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:36Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-kk45h
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"19cee967-b098-4a0d-94de-5f25f7c4ff8c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.22.111"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:44Z"
    name: hello-world-kk45h
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-kk45h
      uid: 19cee967-b098-4a0d-94de-5f25f7c4ff8c
    resourceVersion: "19781872"
    uid: 91f38a7d-63f7-49d7-b16e-98db8e986d1a
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-kk45h
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-kk45h/hello-world-kk45h"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-kk45h
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-kk45h/hello-world-kk45h"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-kk45h
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-kk45h
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-kk45h/hello-world-kk45h"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-kk45h
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-58.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:39Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://801e84739e3fd9ae59cef34dad5a12b71119c4562cf5838a44d6132a1c92e818
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://801e84739e3fd9ae59cef34dad5a12b71119c4562cf5838a44d6132a1c92e818
          exitCode: 0
          finishedAt: "2022-06-30T12:56:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:42Z"
    - containerID: docker://38cc8cf2e78b444e8b4222a1ef9de61a589e814f749b2d62e75b3ff48446d012
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://38cc8cf2e78b444e8b4222a1ef9de61a589e814f749b2d62e75b3ff48446d012
          exitCode: 0
          finishedAt: "2022-06-30T12:56:43Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:40Z"
    hostIP: 10.0.13.58
    initContainerStatuses:
    - containerID: docker://a9bc822680126420005e78de676f843a3b67fdde6e47b9520b4ff01be260c331
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://a9bc822680126420005e78de676f843a3b67fdde6e47b9520b4ff01be260c331
          exitCode: 0
          finishedAt: "2022-06-30T12:56:38Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:38Z"
    phase: Succeeded
    podIP: 10.200.22.111
    podIPs:
    - ip: 10.200.22.111
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-lrxvk
      workflows.argoproj.io/node-name: hello-world-lrxvk
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-lrxvk/hello-world-lrxvk/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:55Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-lrxvk
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"efd4102a-67ef-4388-a2a0-3117c2dadcd0"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.142"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:01Z"
    name: hello-world-lrxvk
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-lrxvk
      uid: efd4102a-67ef-4388-a2a0-3117c2dadcd0
    resourceVersion: "19782192"
    uid: abc515ad-492f-46ae-ac1e-f131ca4f8eb8
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-lrxvk
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-lrxvk/hello-world-lrxvk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-lrxvk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-lrxvk/hello-world-lrxvk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-lrxvk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-lrxvk
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-lrxvk/hello-world-lrxvk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-lrxvk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:57Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:55Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:55Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b07d49f3926871589327795b07953dd6009c93f977cb8b04d7066c46b587f1b8
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://b07d49f3926871589327795b07953dd6009c93f977cb8b04d7066c46b587f1b8
          exitCode: 0
          finishedAt: "2022-06-30T12:57:00Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:00Z"
    - containerID: docker://fa144a270b5c0f2420cfd0770928bca8c0704af50955f64fdfa6ddd003d2d110
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://fa144a270b5c0f2420cfd0770928bca8c0704af50955f64fdfa6ddd003d2d110
          exitCode: 0
          finishedAt: "2022-06-30T12:57:01Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:58Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://fe09fd79b972ca883cfcae04f6c63a8757139cc2bd6a0223a3607ba82001b220
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://fe09fd79b972ca883cfcae04f6c63a8757139cc2bd6a0223a3607ba82001b220
          exitCode: 0
          finishedAt: "2022-06-30T12:56:57Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:57Z"
    phase: Succeeded
    podIP: 10.200.25.142
    podIPs:
    - ip: 10.200.25.142
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-m5mbf
      workflows.argoproj.io/node-name: hello-world-m5mbf
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-m5mbf/hello-world-m5mbf/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:54:57Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-m5mbf
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"036f13e2-55d5-4b8a-a088-0aff5d049645"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:54:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.4.115"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:05Z"
    name: hello-world-m5mbf
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-m5mbf
      uid: 036f13e2-55d5-4b8a-a088-0aff5d049645
    resourceVersion: "19780172"
    uid: 126cc9f0-c6e9-473c-a79f-6529aa42ec1b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-m5mbf
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-m5mbf/hello-world-m5mbf"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-m5mbf
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-m5mbf/hello-world-m5mbf"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-m5mbf
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-m5mbf
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-m5mbf/hello-world-m5mbf"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-m5mbf
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-60.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:57Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:57Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://997949b0e7699c5b3db1de4950da449a72950495035386f9c18c709b439267c4
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://997949b0e7699c5b3db1de4950da449a72950495035386f9c18c709b439267c4
          exitCode: 0
          finishedAt: "2022-06-30T12:55:03Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:03Z"
    - containerID: docker://8cfd23583c5fd4f016dcc53e45784315abf15ac226376311db47a1f69cfb0542
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://8cfd23583c5fd4f016dcc53e45784315abf15ac226376311db47a1f69cfb0542
          exitCode: 0
          finishedAt: "2022-06-30T12:55:04Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:02Z"
    hostIP: 10.0.13.60
    initContainerStatuses:
    - containerID: docker://789ef3f51c51261a1de0c7ffd15db172d4d9a38d741d1c866695b74093e2d7c6
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://789ef3f51c51261a1de0c7ffd15db172d4d9a38d741d1c866695b74093e2d7c6
          exitCode: 0
          finishedAt: "2022-06-30T12:55:00Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:00Z"
    phase: Succeeded
    podIP: 10.200.4.115
    podIPs:
    - ip: 10.200.4.115
    qosClass: BestEffort
    startTime: "2022-06-30T12:54:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-mcsvb
      workflows.argoproj.io/node-name: hello-world-mcsvb
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-mcsvb/hello-world-mcsvb/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:57Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-mcsvb
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"13695b81-17d4-4c36-b839-eb6132cb2c04"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.22.112"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:05Z"
    name: hello-world-mcsvb
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-mcsvb
      uid: 13695b81-17d4-4c36-b839-eb6132cb2c04
    resourceVersion: "19782238"
    uid: b305edfd-2c63-4121-b6b9-25f90ee6ec5d
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-mcsvb
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mcsvb/hello-world-mcsvb"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mcsvb
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mcsvb/hello-world-mcsvb"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mcsvb
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-mcsvb
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mcsvb/hello-world-mcsvb"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mcsvb
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-58.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:01Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:57Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:57Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://99da7802455ad3e75f61515d7db29250f9e54083e4312781f7d79d2dcea9b945
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://99da7802455ad3e75f61515d7db29250f9e54083e4312781f7d79d2dcea9b945
          exitCode: 0
          finishedAt: "2022-06-30T12:57:04Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:04Z"
    - containerID: docker://5a0c12f83877d45d8186799105c01d2eeea5cc7328f287c6b7af2cdcbae2fe9c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://5a0c12f83877d45d8186799105c01d2eeea5cc7328f287c6b7af2cdcbae2fe9c
          exitCode: 0
          finishedAt: "2022-06-30T12:57:04Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:02Z"
    hostIP: 10.0.13.58
    initContainerStatuses:
    - containerID: docker://a740761c834bf19a15318aa6c1d497be790dce1ba4e756cbb77514f48f659973
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://a740761c834bf19a15318aa6c1d497be790dce1ba4e756cbb77514f48f659973
          exitCode: 0
          finishedAt: "2022-06-30T12:57:00Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:00Z"
    phase: Succeeded
    podIP: 10.200.22.112
    podIPs:
    - ip: 10.200.22.112
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-mfvbz
      workflows.argoproj.io/node-name: hello-world-mfvbz
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-mfvbz/hello-world-mfvbz/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:15Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-mfvbz
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fd3223c4-6507-4414-a7c0-b565f1580d77"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.146"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:23Z"
    name: hello-world-mfvbz
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-mfvbz
      uid: fd3223c4-6507-4414-a7c0-b565f1580d77
    resourceVersion: "19782544"
    uid: 62c79189-2de0-4ef9-91c5-03db69a0ce34
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-mfvbz
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mfvbz/hello-world-mfvbz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mfvbz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mfvbz/hello-world-mfvbz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mfvbz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-mfvbz
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mfvbz/hello-world-mfvbz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mfvbz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:15Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:15Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f972da643198f4cd27a594011f35b4876609b7d70763da79b2ae0c25f2508023
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://f972da643198f4cd27a594011f35b4876609b7d70763da79b2ae0c25f2508023
          exitCode: 0
          finishedAt: "2022-06-30T12:57:21Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:21Z"
    - containerID: docker://4b176241624e612b76b475cd7f5c9154bff202725af75fa8e1291ca006790901
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://4b176241624e612b76b475cd7f5c9154bff202725af75fa8e1291ca006790901
          exitCode: 0
          finishedAt: "2022-06-30T12:57:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:20Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://d59b393e9b3c26a332055be72eb74918a3deadd2df2dde332b1998eae8ae839a
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://d59b393e9b3c26a332055be72eb74918a3deadd2df2dde332b1998eae8ae839a
          exitCode: 0
          finishedAt: "2022-06-30T12:57:18Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:18Z"
    phase: Succeeded
    podIP: 10.200.25.146
    podIPs:
    - ip: 10.200.25.146
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-mhs7f
      workflows.argoproj.io/node-name: hello-world-mhs7f
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-mhs7f/hello-world-mhs7f/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:09Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-mhs7f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5ab2101d-fd00-4bd7-8ab3-d2dc5507ee78"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.105"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:16Z"
    name: hello-world-mhs7f
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-mhs7f
      uid: 5ab2101d-fd00-4bd7-8ab3-d2dc5507ee78
    resourceVersion: "19782415"
    uid: 8ce4bd64-99e6-475b-84d7-43f89aba5c9b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-mhs7f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mhs7f/hello-world-mhs7f"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mhs7f
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mhs7f/hello-world-mhs7f"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mhs7f
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-mhs7f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mhs7f/hello-world-mhs7f"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mhs7f
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:09Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:09Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://47d51891a3126d9089dcd2718ff9bf4557b3a510fec538d2a16d0a975b5c81ef
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://47d51891a3126d9089dcd2718ff9bf4557b3a510fec538d2a16d0a975b5c81ef
          exitCode: 0
          finishedAt: "2022-06-30T12:57:15Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:15Z"
    - containerID: docker://0b7bf5b373318528d4f45a52ce5fe762b87aab8d3c31c025195aae08b8775acc
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://0b7bf5b373318528d4f45a52ce5fe762b87aab8d3c31c025195aae08b8775acc
          exitCode: 0
          finishedAt: "2022-06-30T12:57:15Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:13Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://c868c2e353ea5dcb2d1c248b8048b8fd7ee1a88eba24786cdfaafd3bd38d73cc
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://c868c2e353ea5dcb2d1c248b8048b8fd7ee1a88eba24786cdfaafd3bd38d73cc
          exitCode: 0
          finishedAt: "2022-06-30T12:57:11Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:11Z"
    phase: Succeeded
    podIP: 10.200.45.105
    podIPs:
    - ip: 10.200.45.105
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-mlnp6
      workflows.argoproj.io/node-name: hello-world-mlnp6
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-mlnp6/hello-world-mlnp6/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:36Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-mlnp6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cb8fdaab-0fd1-40c7-bc07-aa977ad98410"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.10.115"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:43Z"
    name: hello-world-mlnp6
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-mlnp6
      uid: cb8fdaab-0fd1-40c7-bc07-aa977ad98410
    resourceVersion: "19780840"
    uid: a22ce7c3-356a-47a7-9b30-be4ae4f649eb
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-mlnp6
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mlnp6/hello-world-mlnp6"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mlnp6
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mlnp6/hello-world-mlnp6"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mlnp6
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-mlnp6
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mlnp6/hello-world-mlnp6"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mlnp6
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-123.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:39Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7d9834cea584bb298af2c27c8c122182521281c32667775dd151060c9c9d786d
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://7d9834cea584bb298af2c27c8c122182521281c32667775dd151060c9c9d786d
          exitCode: 0
          finishedAt: "2022-06-30T12:55:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:42Z"
    - containerID: docker://cddc289a52bb25d3d3a32b991259d0a02354b5f5c105f6876aa7e3fe3700b163
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://cddc289a52bb25d3d3a32b991259d0a02354b5f5c105f6876aa7e3fe3700b163
          exitCode: 0
          finishedAt: "2022-06-30T12:55:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:40Z"
    hostIP: 10.0.12.123
    initContainerStatuses:
    - containerID: docker://0585983ce957499772786f8c98eecd4aa5cf2db3e5582b34d44428a263146b72
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://0585983ce957499772786f8c98eecd4aa5cf2db3e5582b34d44428a263146b72
          exitCode: 0
          finishedAt: "2022-06-30T12:55:38Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:38Z"
    phase: Succeeded
    podIP: 10.200.10.115
    podIPs:
    - ip: 10.200.10.115
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-mrgbx
      workflows.argoproj.io/node-name: hello-world-mrgbx
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-mrgbx/hello-world-mrgbx/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:07Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-mrgbx
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"eab3824a-ec81-474c-ae66-e899b308e0b2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.144"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:15Z"
    name: hello-world-mrgbx
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-mrgbx
      uid: eab3824a-ec81-474c-ae66-e899b308e0b2
    resourceVersion: "19782387"
    uid: 39470dc1-b254-4863-9a68-4ddf9a599ffb
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-mrgbx
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mrgbx/hello-world-mrgbx"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mrgbx
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mrgbx/hello-world-mrgbx"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mrgbx
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-mrgbx
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-mrgbx/hello-world-mrgbx"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-mrgbx
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:11Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:07Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:07Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://82b836253abdf1a6e159b137f924882cfb4ff21393351bd095578f093962dc2d
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://82b836253abdf1a6e159b137f924882cfb4ff21393351bd095578f093962dc2d
          exitCode: 0
          finishedAt: "2022-06-30T12:57:13Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:13Z"
    - containerID: docker://b03f43b1c657d6bfadc22ce64dfa0467f02b9af705fd9765ff8e1ab468954977
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://b03f43b1c657d6bfadc22ce64dfa0467f02b9af705fd9765ff8e1ab468954977
          exitCode: 0
          finishedAt: "2022-06-30T12:57:14Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:12Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://91f6caca7f1dc6618e09120dc12fbf81ecd62070d61587eef8ad93bff2857cad
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://91f6caca7f1dc6618e09120dc12fbf81ecd62070d61587eef8ad93bff2857cad
          exitCode: 0
          finishedAt: "2022-06-30T12:57:10Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:10Z"
    phase: Succeeded
    podIP: 10.200.25.144
    podIPs:
    - ip: 10.200.25.144
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-n847l
      workflows.argoproj.io/node-name: hello-world-n847l
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-n847l/hello-world-n847l/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:47Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-n847l
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d4a6ebcd-c265-4d7c-8d05-95f10692d685"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.132"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:55Z"
    name: hello-world-n847l
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-n847l
      uid: d4a6ebcd-c265-4d7c-8d05-95f10692d685
    resourceVersion: "19781018"
    uid: 8ad8b0be-ab79-4d3c-adf1-3cc60adde6e4
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-n847l
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-n847l/hello-world-n847l"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-n847l
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-n847l/hello-world-n847l"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-n847l
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-n847l
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-n847l/hello-world-n847l"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-n847l
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:51Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:47Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:47Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8bf537ee16413c90296ac05f8a5407d58d685734d56d8b54b1a078f0c6a8f7b1
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://8bf537ee16413c90296ac05f8a5407d58d685734d56d8b54b1a078f0c6a8f7b1
          exitCode: 0
          finishedAt: "2022-06-30T12:55:53Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:53Z"
    - containerID: docker://40b836d5c9ab46c7b9c22db215b7177b632587b374e60abd35d5b17ba7c83cc0
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://40b836d5c9ab46c7b9c22db215b7177b632587b374e60abd35d5b17ba7c83cc0
          exitCode: 0
          finishedAt: "2022-06-30T12:55:54Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:52Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://29c2b45ffd89cba84f09344e5a5562d1967631affd29678ecbcb20cd2f9812d8
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://29c2b45ffd89cba84f09344e5a5562d1967631affd29678ecbcb20cd2f9812d8
          exitCode: 0
          finishedAt: "2022-06-30T12:55:50Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:50Z"
    phase: Succeeded
    podIP: 10.200.25.132
    podIPs:
    - ip: 10.200.25.132
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-nj4gd
      workflows.argoproj.io/node-name: hello-world-nj4gd
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-nj4gd/hello-world-nj4gd/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:16Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-nj4gd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"001765d1-ae84-462a-855c-1e922db1ffc5"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.101"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:23Z"
    name: hello-world-nj4gd
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-nj4gd
      uid: 001765d1-ae84-462a-855c-1e922db1ffc5
    resourceVersion: "19781525"
    uid: 0e8ae415-373c-4372-b417-d04361aba708
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-nj4gd
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-nj4gd/hello-world-nj4gd"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-nj4gd
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-nj4gd/hello-world-nj4gd"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-nj4gd
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-nj4gd
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-nj4gd/hello-world-nj4gd"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-nj4gd
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:16Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:16Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f1bd9114205caaa32c40678df70923f6d6e15cf93bb78003ca4ccb413022b7d2
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://f1bd9114205caaa32c40678df70923f6d6e15cf93bb78003ca4ccb413022b7d2
          exitCode: 0
          finishedAt: "2022-06-30T12:56:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:22Z"
    - containerID: docker://8411a8ac77e3448841e8392b62848618748e026224139a58dbdb805f9e69f5e2
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://8411a8ac77e3448841e8392b62848618748e026224139a58dbdb805f9e69f5e2
          exitCode: 0
          finishedAt: "2022-06-30T12:56:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:20Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://deed2795111a3384f4bb620dc16c88cc25c9d2a38f8dd12da5022debbea58c7c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://deed2795111a3384f4bb620dc16c88cc25c9d2a38f8dd12da5022debbea58c7c
          exitCode: 0
          finishedAt: "2022-06-30T12:56:18Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:18Z"
    phase: Succeeded
    podIP: 10.200.56.101
    podIPs:
    - ip: 10.200.56.101
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-njtmn
      workflows.argoproj.io/node-name: hello-world-njtmn
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-njtmn/hello-world-njtmn/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:17Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-njtmn
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e62f4487-b93d-46c1-94cc-74baeb2698d6"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.10.119"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:24Z"
    name: hello-world-njtmn
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-njtmn
      uid: e62f4487-b93d-46c1-94cc-74baeb2698d6
    resourceVersion: "19782568"
    uid: 69b36754-92b7-43d5-b3a2-767d5667d359
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-njtmn
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-njtmn/hello-world-njtmn"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-njtmn
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-njtmn/hello-world-njtmn"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-njtmn
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-njtmn
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-njtmn/hello-world-njtmn"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-njtmn
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-123.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:20Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:17Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:17Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://53f592a437b5d867116d8742a2210c3d90e225f2173f63bf2832942880eff8f9
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://53f592a437b5d867116d8742a2210c3d90e225f2173f63bf2832942880eff8f9
          exitCode: 0
          finishedAt: "2022-06-30T12:57:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:23Z"
    - containerID: docker://453bd4d0828babbfe370a974c4daaf504ee61c2b1a27de5bc9e0dbc28419ae54
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://453bd4d0828babbfe370a974c4daaf504ee61c2b1a27de5bc9e0dbc28419ae54
          exitCode: 0
          finishedAt: "2022-06-30T12:57:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:21Z"
    hostIP: 10.0.12.123
    initContainerStatuses:
    - containerID: docker://74ca693dbe370401bdc60dfcb2670f12d6b5c16f8cd3b3dbdfcbfbe2cfff37a5
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://74ca693dbe370401bdc60dfcb2670f12d6b5c16f8cd3b3dbdfcbfbe2cfff37a5
          exitCode: 0
          finishedAt: "2022-06-30T12:57:19Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:19Z"
    phase: Succeeded
    podIP: 10.200.10.119
    podIPs:
    - ip: 10.200.10.119
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-p2rv9
      workflows.argoproj.io/node-name: hello-world-p2rv9
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-p2rv9/hello-world-p2rv9/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:08Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-p2rv9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"21276816-7280-4115-88f3-3c252cdb822a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:08Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.99"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:16Z"
    name: hello-world-p2rv9
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-p2rv9
      uid: 21276816-7280-4115-88f3-3c252cdb822a
    resourceVersion: "19781391"
    uid: fd781212-f6ee-4939-b845-bdf1714be0f3
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-p2rv9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-p2rv9/hello-world-p2rv9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-p2rv9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-p2rv9/hello-world-p2rv9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-p2rv9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-p2rv9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-p2rv9/hello-world-p2rv9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-p2rv9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:09Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:09Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://379a937ad54e8eea1af00071f8552f689edeaee1268b0262aabb91ed7f409fe3
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://379a937ad54e8eea1af00071f8552f689edeaee1268b0262aabb91ed7f409fe3
          exitCode: 0
          finishedAt: "2022-06-30T12:56:15Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:15Z"
    - containerID: docker://5ad5e89745c3e254fd17e02ae813ad31d66544068386c1cacafbec9ce03c77cb
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://5ad5e89745c3e254fd17e02ae813ad31d66544068386c1cacafbec9ce03c77cb
          exitCode: 0
          finishedAt: "2022-06-30T12:56:15Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:13Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://166fff5390130c5757eb11dbc24ce3b1fddef6c47219ef2912a78bcc9b5d6d5e
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://166fff5390130c5757eb11dbc24ce3b1fddef6c47219ef2912a78bcc9b5d6d5e
          exitCode: 0
          finishedAt: "2022-06-30T12:56:11Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:11Z"
    phase: Succeeded
    podIP: 10.200.45.99
    podIPs:
    - ip: 10.200.45.99
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-pgb54
      workflows.argoproj.io/node-name: hello-world-pgb54
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-pgb54/hello-world-pgb54/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:54:56Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-pgb54
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d33a0c08-5c64-4059-821e-d95755360c15"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:54:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.126"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:03Z"
    name: hello-world-pgb54
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-pgb54
      uid: d33a0c08-5c64-4059-821e-d95755360c15
    resourceVersion: "19780164"
    uid: 04514488-3eb5-48cf-abe3-1c94bce3fc0a
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-pgb54
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-pgb54/hello-world-pgb54"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-pgb54
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-pgb54/hello-world-pgb54"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-pgb54
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-pgb54
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-pgb54/hello-world-pgb54"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-pgb54
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:56Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:56Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://9fcb0de7f8f1d17e7b6e1fffe5dcb2e64e64331968c756e9b0461a1466d7417f
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://9fcb0de7f8f1d17e7b6e1fffe5dcb2e64e64331968c756e9b0461a1466d7417f
          exitCode: 0
          finishedAt: "2022-06-30T12:55:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:02Z"
    - containerID: docker://e0575c6d1f66b053e89be8e9f9a1051794ac9016325cce111509dca3a9d35c68
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://e0575c6d1f66b053e89be8e9f9a1051794ac9016325cce111509dca3a9d35c68
          exitCode: 0
          finishedAt: "2022-06-30T12:55:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:00Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://aa99fa423ca31954fade6fb88b904063c639b32eedac8faee2e2bd0c1571ef86
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://aa99fa423ca31954fade6fb88b904063c639b32eedac8faee2e2bd0c1571ef86
          exitCode: 0
          finishedAt: "2022-06-30T12:54:59Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:59Z"
    phase: Succeeded
    podIP: 10.200.25.126
    podIPs:
    - ip: 10.200.25.126
    qosClass: BestEffort
    startTime: "2022-06-30T12:54:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-pgjp9
      workflows.argoproj.io/node-name: hello-world-pgjp9
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-pgjp9/hello-world-pgjp9/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:54:54Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-pgjp9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cc8db49b-3c1e-4c62-92bd-6f2a68926b8b"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:54:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.85"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:01Z"
    name: hello-world-pgjp9
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-pgjp9
      uid: cc8db49b-3c1e-4c62-92bd-6f2a68926b8b
    resourceVersion: "19780122"
    uid: c531c969-1fd5-4e89-8f65-b95c9ea276a4
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-pgjp9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-pgjp9/hello-world-pgjp9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-pgjp9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-pgjp9/hello-world-pgjp9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-pgjp9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-pgjp9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-pgjp9/hello-world-pgjp9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-pgjp9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:57Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:54Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:54Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://cde385d34e8236e46978b4b8449ccf65df4b0b3b8ad865dec762aaf16fe15d53
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://cde385d34e8236e46978b4b8449ccf65df4b0b3b8ad865dec762aaf16fe15d53
          exitCode: 0
          finishedAt: "2022-06-30T12:55:00Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:00Z"
    - containerID: docker://4f96e9874160a0b6041cccbfc53316d2046bfcc79a255fafbf0e84486dc1ec86
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://4f96e9874160a0b6041cccbfc53316d2046bfcc79a255fafbf0e84486dc1ec86
          exitCode: 0
          finishedAt: "2022-06-30T12:55:00Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:58Z"
    hostIP: 10.0.13.61
    initContainerStatuses:
    - containerID: docker://e99604b58f23ee3f947b0cde0284848a545953924f0568319fcdbb808fbf1339
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://e99604b58f23ee3f947b0cde0284848a545953924f0568319fcdbb808fbf1339
          exitCode: 0
          finishedAt: "2022-06-30T12:54:56Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:56Z"
    phase: Succeeded
    podIP: 10.200.74.85
    podIPs:
    - ip: 10.200.74.85
    qosClass: BestEffort
    startTime: "2022-06-30T12:54:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-qfs6b
      workflows.argoproj.io/node-name: hello-world-qfs6b
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-qfs6b/hello-world-qfs6b/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:54Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-qfs6b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8d0c928f-6fb3-4520-8912-6766cc07eb91"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.92"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:01Z"
    name: hello-world-qfs6b
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-qfs6b
      uid: 8d0c928f-6fb3-4520-8912-6766cc07eb91
    resourceVersion: "19782186"
    uid: 55c02443-2215-4241-aee0-5d5cb1b21164
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-qfs6b
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-qfs6b/hello-world-qfs6b"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-qfs6b
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-qfs6b/hello-world-qfs6b"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-qfs6b
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-qfs6b
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-qfs6b/hello-world-qfs6b"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-qfs6b
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:57Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:54Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:54Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://fb08728ab853808dd8a969304407a73d7f71a80e8ec8c8dc9d81fa2722d723cf
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://fb08728ab853808dd8a969304407a73d7f71a80e8ec8c8dc9d81fa2722d723cf
          exitCode: 0
          finishedAt: "2022-06-30T12:57:00Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:00Z"
    - containerID: docker://8b8fdeb2e903bdaba8543b6937be2f9d61894bbec5fefc69155501ca2faf0d06
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://8b8fdeb2e903bdaba8543b6937be2f9d61894bbec5fefc69155501ca2faf0d06
          exitCode: 0
          finishedAt: "2022-06-30T12:57:01Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:58Z"
    hostIP: 10.0.13.61
    initContainerStatuses:
    - containerID: docker://a1b6a3799359edfb1c1e371c5dca390d731b1f8eb7e7cfda97e92d642086bc5c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://a1b6a3799359edfb1c1e371c5dca390d731b1f8eb7e7cfda97e92d642086bc5c
          exitCode: 0
          finishedAt: "2022-06-30T12:56:57Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:56Z"
    phase: Succeeded
    podIP: 10.200.74.92
    podIPs:
    - ip: 10.200.74.92
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-qsd6w
      workflows.argoproj.io/node-name: hello-world-qsd6w
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-qsd6w/hello-world-qsd6w/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:36Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-qsd6w
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5ef4856b-7047-447f-baa3-18e415be5b42"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.102"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:43Z"
    name: hello-world-qsd6w
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-qsd6w
      uid: 5ef4856b-7047-447f-baa3-18e415be5b42
    resourceVersion: "19781867"
    uid: ea4c2213-9350-45c9-9540-ce03a0d0e2d5
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-qsd6w
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-qsd6w/hello-world-qsd6w"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-qsd6w
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-qsd6w/hello-world-qsd6w"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-qsd6w
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-qsd6w
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-qsd6w/hello-world-qsd6w"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-qsd6w
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:39Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c77d88438e9d5719a823e05ee5c2a37da44ed9b324314c298dcc78dc43c9c49b
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c77d88438e9d5719a823e05ee5c2a37da44ed9b324314c298dcc78dc43c9c49b
          exitCode: 0
          finishedAt: "2022-06-30T12:56:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:42Z"
    - containerID: docker://c50e2762cfb816a1b24c67f3ecff3dc85fd73128f0ac1b1f99117a106ac45c6f
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c50e2762cfb816a1b24c67f3ecff3dc85fd73128f0ac1b1f99117a106ac45c6f
          exitCode: 0
          finishedAt: "2022-06-30T12:56:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:40Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://95672bb35bb587b5776d8d959100a60e8bfe5dc06c44ea5cf1d673fafc9bb659
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://95672bb35bb587b5776d8d959100a60e8bfe5dc06c44ea5cf1d673fafc9bb659
          exitCode: 0
          finishedAt: "2022-06-30T12:56:38Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:38Z"
    phase: Succeeded
    podIP: 10.200.56.102
    podIPs:
    - ip: 10.200.56.102
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-r9zkj
      workflows.argoproj.io/node-name: hello-world-r9zkj
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-r9zkj/hello-world-r9zkj/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:35Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-r9zkj
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7a0c47e2-afa7-4a9c-b8a1-055f1b23e749"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.139"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:43Z"
    name: hello-world-r9zkj
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-r9zkj
      uid: 7a0c47e2-afa7-4a9c-b8a1-055f1b23e749
    resourceVersion: "19781849"
    uid: b8634026-9692-4cd3-ae42-3d3e70b60d37
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-r9zkj
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-r9zkj/hello-world-r9zkj"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-r9zkj
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-r9zkj/hello-world-r9zkj"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-r9zkj
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-r9zkj
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-r9zkj/hello-world-r9zkj"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-r9zkj
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:38Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:35Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:35Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://08da3ce63e616012e18592cda05407ec0cb49506d03e13335d47725f4d4b4d23
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://08da3ce63e616012e18592cda05407ec0cb49506d03e13335d47725f4d4b4d23
          exitCode: 0
          finishedAt: "2022-06-30T12:56:41Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:41Z"
    - containerID: docker://364773cc97b127cbbe4ad0caedb81ef6d2d3924be58f02696327981d3b4a961e
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://364773cc97b127cbbe4ad0caedb81ef6d2d3924be58f02696327981d3b4a961e
          exitCode: 0
          finishedAt: "2022-06-30T12:56:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:39Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://a072b294cf5b94bcb9954e9faff631fe8df69558461c5375f841e953cb60ae4e
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://a072b294cf5b94bcb9954e9faff631fe8df69558461c5375f841e953cb60ae4e
          exitCode: 0
          finishedAt: "2022-06-30T12:56:37Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:37Z"
    phase: Succeeded
    podIP: 10.200.25.139
    podIPs:
    - ip: 10.200.25.139
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-rbvkl
      workflows.argoproj.io/node-name: hello-world-rbvkl
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-rbvkl/hello-world-rbvkl/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:55Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-rbvkl
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a30982df-465b-4d51-9090-40cdd1b695c6"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.134"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:03Z"
    name: hello-world-rbvkl
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-rbvkl
      uid: a30982df-465b-4d51-9090-40cdd1b695c6
    resourceVersion: "19781177"
    uid: f0789bfd-8a07-447c-a099-a625dc7c03ad
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rbvkl
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rbvkl/hello-world-rbvkl"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rbvkl
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rbvkl/hello-world-rbvkl"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rbvkl
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rbvkl
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rbvkl/hello-world-rbvkl"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rbvkl
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:58Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:55Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:55Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://71170b9379720ace7603d286f4caab873cecbad7ae1ed132cd9b16e84a152cc0
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://71170b9379720ace7603d286f4caab873cecbad7ae1ed132cd9b16e84a152cc0
          exitCode: 0
          finishedAt: "2022-06-30T12:56:01Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:01Z"
    - containerID: docker://c6686fec51f82b78cc10cd0771058abbe24df84a00c677bda1b80414b12627ba
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c6686fec51f82b78cc10cd0771058abbe24df84a00c677bda1b80414b12627ba
          exitCode: 0
          finishedAt: "2022-06-30T12:56:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:00Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://a81acc175114507042dd2abaef5614afe2050e5f81f13e27d86277979c0e2a94
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://a81acc175114507042dd2abaef5614afe2050e5f81f13e27d86277979c0e2a94
          exitCode: 0
          finishedAt: "2022-06-30T12:55:58Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:57Z"
    phase: Succeeded
    podIP: 10.200.25.134
    podIPs:
    - ip: 10.200.25.134
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-rdbts
      workflows.argoproj.io/node-name: hello-world-rdbts
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-rdbts/hello-world-rdbts/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:55Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-rdbts
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"76374312-71bd-45d8-b091-353c9ca20b24"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.133"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:02Z"
    name: hello-world-rdbts
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-rdbts
      uid: 76374312-71bd-45d8-b091-353c9ca20b24
    resourceVersion: "19781171"
    uid: 500f657e-d2f7-4d4a-a189-5da421f7c4da
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rdbts
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rdbts/hello-world-rdbts"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rdbts
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rdbts/hello-world-rdbts"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rdbts
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rdbts
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rdbts/hello-world-rdbts"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rdbts
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:57Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:55Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:55Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7b5380e36cb86a962d41cef11bb013733b70d74c91879e1844c1bd43519ce5b5
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://7b5380e36cb86a962d41cef11bb013733b70d74c91879e1844c1bd43519ce5b5
          exitCode: 0
          finishedAt: "2022-06-30T12:56:00Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:00Z"
    - containerID: docker://8cf5465084aaf25a94804d73a9ef904fbbcc4ee0919365a8c8630699bffcfadf
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://8cf5465084aaf25a94804d73a9ef904fbbcc4ee0919365a8c8630699bffcfadf
          exitCode: 0
          finishedAt: "2022-06-30T12:56:01Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:58Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://43982127e0e051fb485952f33cd1d0cfabc50cbffe71c9fdc226fd0857a27ba8
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://43982127e0e051fb485952f33cd1d0cfabc50cbffe71c9fdc226fd0857a27ba8
          exitCode: 0
          finishedAt: "2022-06-30T12:55:57Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:57Z"
    phase: Succeeded
    podIP: 10.200.25.133
    podIPs:
    - ip: 10.200.25.133
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-rfdp4
      workflows.argoproj.io/node-name: hello-world-rfdp4
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-rfdp4/hello-world-rfdp4/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:16Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-rfdp4
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cbc8c723-7838-4cac-bbae-22c1b10c118e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.77"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:23Z"
    name: hello-world-rfdp4
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-rfdp4
      uid: cbc8c723-7838-4cac-bbae-22c1b10c118e
    resourceVersion: "19781531"
    uid: 34bac250-68e0-4fdd-872a-459124aebb62
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rfdp4
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rfdp4/hello-world-rfdp4"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rfdp4
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rfdp4/hello-world-rfdp4"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rfdp4
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rfdp4
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rfdp4/hello-world-rfdp4"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rfdp4
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:16Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:16Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://21bb396f0cc00b98f2ba807fe5e3dea772584bd10cbf51336da5ea6eac7a47b9
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://21bb396f0cc00b98f2ba807fe5e3dea772584bd10cbf51336da5ea6eac7a47b9
          exitCode: 0
          finishedAt: "2022-06-30T12:56:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:22Z"
    - containerID: docker://6847d4ded664f27ae53d5ec9a47bba4f5d90af5ca97b07792d99facf5dbd13f3
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://6847d4ded664f27ae53d5ec9a47bba4f5d90af5ca97b07792d99facf5dbd13f3
          exitCode: 0
          finishedAt: "2022-06-30T12:56:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:20Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://4dac4a1c65ce903cbccba3e5a63abf3baa95310cd4cd7e3ae480d5e434de14bb
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://4dac4a1c65ce903cbccba3e5a63abf3baa95310cd4cd7e3ae480d5e434de14bb
          exitCode: 0
          finishedAt: "2022-06-30T12:56:18Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:18Z"
    phase: Succeeded
    podIP: 10.200.29.77
    podIPs:
    - ip: 10.200.29.77
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-rlbsp
      workflows.argoproj.io/node-name: hello-world-rlbsp
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-rlbsp/hello-world-rlbsp/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:08Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-rlbsp
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e0a3b127-1002-434b-b5b1-9b8aa8b84c24"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:08Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.86"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:16Z"
    name: hello-world-rlbsp
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-rlbsp
      uid: e0a3b127-1002-434b-b5b1-9b8aa8b84c24
    resourceVersion: "19780348"
    uid: 5a9e2334-f729-41d6-92a5-50f796c81170
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rlbsp
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rlbsp/hello-world-rlbsp"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rlbsp
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rlbsp/hello-world-rlbsp"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rlbsp
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rlbsp
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rlbsp/hello-world-rlbsp"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rlbsp
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:08Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:08Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://27cd09939589849f987c5d596f133725bc95f3cd7d13895eefc6116b0465a28d
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://27cd09939589849f987c5d596f133725bc95f3cd7d13895eefc6116b0465a28d
          exitCode: 0
          finishedAt: "2022-06-30T12:55:14Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:14Z"
    - containerID: docker://cfb2e8ccd95dcccfa8d7340d528747c88e83edc1d57e440fcc1e5706d5bda05c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://cfb2e8ccd95dcccfa8d7340d528747c88e83edc1d57e440fcc1e5706d5bda05c
          exitCode: 0
          finishedAt: "2022-06-30T12:55:15Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:13Z"
    hostIP: 10.0.13.61
    initContainerStatuses:
    - containerID: docker://ea0cb70b1ddc2210a9f7614bcfe3a309500696c1db66f5f09f7970c1b5ce16f2
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://ea0cb70b1ddc2210a9f7614bcfe3a309500696c1db66f5f09f7970c1b5ce16f2
          exitCode: 0
          finishedAt: "2022-06-30T12:55:11Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:11Z"
    phase: Succeeded
    podIP: 10.200.74.86
    podIPs:
    - ip: 10.200.74.86
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-rpgmf
      workflows.argoproj.io/node-name: hello-world-rpgmf
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-rpgmf/hello-world-rpgmf/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:56Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-rpgmf
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9c9ca9eb-27a0-4341-9224-a00e0f75aae3"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.79"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:03Z"
    name: hello-world-rpgmf
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-rpgmf
      uid: 9c9ca9eb-27a0-4341-9224-a00e0f75aae3
    resourceVersion: "19782212"
    uid: 393a8a0c-8014-43ab-8b01-a6b8a627d73d
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rpgmf
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rpgmf/hello-world-rpgmf"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rpgmf
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rpgmf/hello-world-rpgmf"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rpgmf
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rpgmf
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rpgmf/hello-world-rpgmf"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rpgmf
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:56Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:56Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://157b7f08533cdc2c2988955609856a23d4663cea3b8bad4d1d41fb816493c9fb
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://157b7f08533cdc2c2988955609856a23d4663cea3b8bad4d1d41fb816493c9fb
          exitCode: 0
          finishedAt: "2022-06-30T12:57:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:02Z"
    - containerID: docker://db02e01bb8211830651848bba04dd1e2650cf9c240b7aae82699b12c379fe683
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://db02e01bb8211830651848bba04dd1e2650cf9c240b7aae82699b12c379fe683
          exitCode: 0
          finishedAt: "2022-06-30T12:57:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:00Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://6072c508a986280ca64f67afc8792ba277446f3f4ccfd1448ca58664577b6dca
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://6072c508a986280ca64f67afc8792ba277446f3f4ccfd1448ca58664577b6dca
          exitCode: 0
          finishedAt: "2022-06-30T12:56:58Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:58Z"
    phase: Succeeded
    podIP: 10.200.29.79
    podIPs:
    - ip: 10.200.29.79
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-rzx97
      workflows.argoproj.io/node-name: hello-world-rzx97
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-rzx97/hello-world-rzx97/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:14Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-rzx97
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e659d205-523f-47b4-a5a5-d38029ac6dd2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.93"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:22Z"
    name: hello-world-rzx97
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-rzx97
      uid: e659d205-523f-47b4-a5a5-d38029ac6dd2
    resourceVersion: "19782530"
    uid: bc590892-a660-46c8-85f6-6616bd487963
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rzx97
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rzx97/hello-world-rzx97"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rzx97
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rzx97/hello-world-rzx97"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rzx97
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-rzx97
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-rzx97/hello-world-rzx97"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-rzx97
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:17Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:14Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:14Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0341c445351dca01e2c51c11606315e2231688a8b1ef03c10d419b3c2b7aa610
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://0341c445351dca01e2c51c11606315e2231688a8b1ef03c10d419b3c2b7aa610
          exitCode: 0
          finishedAt: "2022-06-30T12:57:20Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:20Z"
    - containerID: docker://6c65af3d473441bff5723d2f4e068955e31917a957b28f1b0cbe89c1c212304b
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://6c65af3d473441bff5723d2f4e068955e31917a957b28f1b0cbe89c1c212304b
          exitCode: 0
          finishedAt: "2022-06-30T12:57:21Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:18Z"
    hostIP: 10.0.13.61
    initContainerStatuses:
    - containerID: docker://1f478ccb2a89d2e803c69ebc405066fbec891b77deb7b081442d8609e4c6c878
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://1f478ccb2a89d2e803c69ebc405066fbec891b77deb7b081442d8609e4c6c878
          exitCode: 0
          finishedAt: "2022-06-30T12:57:17Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:16Z"
    phase: Succeeded
    podIP: 10.200.74.93
    podIPs:
    - ip: 10.200.74.93
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-scfgk
      workflows.argoproj.io/node-name: hello-world-scfgk
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-scfgk/hello-world-scfgk/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:29Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-scfgk
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"23d54099-0ab1-4e03-8ba9-bf9c93cc5345"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:29Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.107"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:36Z"
    name: hello-world-scfgk
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-scfgk
      uid: 23d54099-0ab1-4e03-8ba9-bf9c93cc5345
    resourceVersion: "19782741"
    uid: 4ebb48ea-ea04-482b-bfce-cd80bfde8400
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-scfgk
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-scfgk/hello-world-scfgk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-scfgk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-scfgk/hello-world-scfgk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-scfgk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-scfgk
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-scfgk/hello-world-scfgk"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-scfgk
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:32Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:29Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:29Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://48b9c3bc3b9b08cf977b1972049687b7820a3a6cdc27f35fb6c0e7124c9daf2a
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://48b9c3bc3b9b08cf977b1972049687b7820a3a6cdc27f35fb6c0e7124c9daf2a
          exitCode: 0
          finishedAt: "2022-06-30T12:57:35Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:35Z"
    - containerID: docker://3deabf5d254a982bbc8eb24a903811e609714436bf57ee9258e5418b8bbd1ba6
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://3deabf5d254a982bbc8eb24a903811e609714436bf57ee9258e5418b8bbd1ba6
          exitCode: 0
          finishedAt: "2022-06-30T12:57:35Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:33Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://794f38cf7d83fde8edb88e4152d60cc359b361fab1dbc2e47cd1c23927f924cf
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://794f38cf7d83fde8edb88e4152d60cc359b361fab1dbc2e47cd1c23927f924cf
          exitCode: 0
          finishedAt: "2022-06-30T12:57:31Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:31Z"
    phase: Succeeded
    podIP: 10.200.45.107
    podIPs:
    - ip: 10.200.45.107
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-sdtm9
      workflows.argoproj.io/node-name: hello-world-sdtm9
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-sdtm9/hello-world-sdtm9/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:16Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-sdtm9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ef58013b-4d54-4bfc-a7f1-e424fbc7209f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.84.110"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:24Z"
    name: hello-world-sdtm9
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-sdtm9
      uid: ef58013b-4d54-4bfc-a7f1-e424fbc7209f
    resourceVersion: "19782556"
    uid: f0234764-dfb3-43d3-ac1b-827a360a53c7
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-sdtm9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-sdtm9/hello-world-sdtm9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-sdtm9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-sdtm9/hello-world-sdtm9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-sdtm9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-sdtm9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-sdtm9/hello-world-sdtm9"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-sdtm9
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-124.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:16Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:16Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://2c82889872a823db1713c288e04060558088bdb90e79c83eb41b11557834ea89
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://2c82889872a823db1713c288e04060558088bdb90e79c83eb41b11557834ea89
          exitCode: 0
          finishedAt: "2022-06-30T12:57:22Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:22Z"
    - containerID: docker://424a9a1bc53ef57727e0a97a5a939c789c6d5616d6c2bf7f1d983ac5475a21ef
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://424a9a1bc53ef57727e0a97a5a939c789c6d5616d6c2bf7f1d983ac5475a21ef
          exitCode: 0
          finishedAt: "2022-06-30T12:57:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:21Z"
    hostIP: 10.0.12.124
    initContainerStatuses:
    - containerID: docker://8f69db6c36d086048e8e98b4bee33698961497b7a6c84464a6160bfec76cc83d
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://8f69db6c36d086048e8e98b4bee33698961497b7a6c84464a6160bfec76cc83d
          exitCode: 0
          finishedAt: "2022-06-30T12:57:19Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:18Z"
    phase: Succeeded
    podIP: 10.200.84.110
    podIPs:
    - ip: 10.200.84.110
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-sfbnw
      workflows.argoproj.io/node-name: hello-world-sfbnw
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-sfbnw/hello-world-sfbnw/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:35Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-sfbnw
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6e4a617f-955c-423f-bc41-d5746292c715"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.140"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:43Z"
    name: hello-world-sfbnw
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-sfbnw
      uid: 6e4a617f-955c-423f-bc41-d5746292c715
    resourceVersion: "19781858"
    uid: 30f8fa72-7f9b-440a-bbaa-49b4d82419b3
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-sfbnw
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-sfbnw/hello-world-sfbnw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-sfbnw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-sfbnw/hello-world-sfbnw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-sfbnw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-sfbnw
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-sfbnw/hello-world-sfbnw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-sfbnw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:38Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:35Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:35Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://246cb291af0a8c54774d0a6e788bbdad82a29833ba1b43f5673cf6aeb35bff11
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://246cb291af0a8c54774d0a6e788bbdad82a29833ba1b43f5673cf6aeb35bff11
          exitCode: 0
          finishedAt: "2022-06-30T12:56:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:42Z"
    - containerID: docker://1a663874054d1ed9966463bd5cc3fdff322b5b6ce017796d3c938d8cfec9cc85
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://1a663874054d1ed9966463bd5cc3fdff322b5b6ce017796d3c938d8cfec9cc85
          exitCode: 0
          finishedAt: "2022-06-30T12:56:43Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:39Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://3f143286902e8018f8c857fd13a48d8f10b303a2f458a820452de215b85467d7
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://3f143286902e8018f8c857fd13a48d8f10b303a2f458a820452de215b85467d7
          exitCode: 0
          finishedAt: "2022-06-30T12:56:38Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:37Z"
    phase: Succeeded
    podIP: 10.200.25.140
    podIPs:
    - ip: 10.200.25.140
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-srfdd
      workflows.argoproj.io/node-name: hello-world-srfdd
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-srfdd/hello-world-srfdd/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:36Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-srfdd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a464ab2-bf01-439d-8907-7cff148a936d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.56.105"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:43Z"
    name: hello-world-srfdd
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-srfdd
      uid: 6a464ab2-bf01-439d-8907-7cff148a936d
    resourceVersion: "19782850"
    uid: cf43167c-3aef-437d-8f01-deb156cadfec
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-srfdd
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-srfdd/hello-world-srfdd"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-srfdd
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-srfdd/hello-world-srfdd"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-srfdd
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-srfdd
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-srfdd/hello-world-srfdd"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-srfdd
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-59.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:39Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d1612089b588faa7c7c1e99c5ff9cb030ed821427afc59140b5742e42910fbed
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://d1612089b588faa7c7c1e99c5ff9cb030ed821427afc59140b5742e42910fbed
          exitCode: 0
          finishedAt: "2022-06-30T12:57:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:42Z"
    - containerID: docker://663c7e269f47303a510014fdd9998cbb302354625205c41e380e8b79d8179345
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://663c7e269f47303a510014fdd9998cbb302354625205c41e380e8b79d8179345
          exitCode: 0
          finishedAt: "2022-06-30T12:57:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:40Z"
    hostIP: 10.0.13.59
    initContainerStatuses:
    - containerID: docker://cf314c1abbd59ee3171d43d14ed28adf9d8d251268d85d9b87d9bf0375f4f73c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://cf314c1abbd59ee3171d43d14ed28adf9d8d251268d85d9b87d9bf0375f4f73c
          exitCode: 0
          finishedAt: "2022-06-30T12:57:38Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:38Z"
    phase: Succeeded
    podIP: 10.200.56.105
    podIPs:
    - ip: 10.200.56.105
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-strwr
      workflows.argoproj.io/node-name: hello-world-strwr
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-strwr/hello-world-strwr/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:36Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-strwr
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8eec6fed-cd11-4546-aed7-4f9f11873ea8"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.84.111"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:44Z"
    name: hello-world-strwr
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-strwr
      uid: 8eec6fed-cd11-4546-aed7-4f9f11873ea8
    resourceVersion: "19782860"
    uid: d585dbb4-8d4b-4006-9f62-e50a4c8bdadb
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-strwr
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-strwr/hello-world-strwr"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-strwr
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-strwr/hello-world-strwr"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-strwr
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-strwr
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-strwr/hello-world-strwr"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-strwr
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-124.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:39Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1e9d18a9eba5d08464cdb019cb9a7875c87991f35bc54b48ed3b9890a90eca0d
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://1e9d18a9eba5d08464cdb019cb9a7875c87991f35bc54b48ed3b9890a90eca0d
          exitCode: 0
          finishedAt: "2022-06-30T12:57:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:42Z"
    - containerID: docker://c443ed28391657708f608f8e1639103ddc497d33665fee0fce48bee6fd3aff16
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c443ed28391657708f608f8e1639103ddc497d33665fee0fce48bee6fd3aff16
          exitCode: 0
          finishedAt: "2022-06-30T12:57:43Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:41Z"
    hostIP: 10.0.12.124
    initContainerStatuses:
    - containerID: docker://997ee23ac1a93162040d4945e4af32f10cf4c324374150417eeab0ae27218029
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://997ee23ac1a93162040d4945e4af32f10cf4c324374150417eeab0ae27218029
          exitCode: 0
          finishedAt: "2022-06-30T12:57:39Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:39Z"
    phase: Succeeded
    podIP: 10.200.84.111
    podIPs:
    - ip: 10.200.84.111
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-t79bq
      workflows.argoproj.io/node-name: hello-world-t79bq
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-t79bq/hello-world-t79bq/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:37Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-t79bq
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8f2c6713-02cb-4276-9488-414d71e77d40"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.84.106"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:45Z"
    name: hello-world-t79bq
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-t79bq
      uid: 8f2c6713-02cb-4276-9488-414d71e77d40
    resourceVersion: "19780870"
    uid: c333518d-ce87-4693-be11-582460c2a0e9
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-t79bq
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-t79bq/hello-world-t79bq"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-t79bq
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-t79bq/hello-world-t79bq"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-t79bq
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-t79bq
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-t79bq/hello-world-t79bq"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-t79bq
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-124.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:40Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:37Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:37Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4dcd63341f4c6c05fcd8df313c158b073a6b361e7f853cd529b6d6dddbe4fe6e
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://4dcd63341f4c6c05fcd8df313c158b073a6b361e7f853cd529b6d6dddbe4fe6e
          exitCode: 0
          finishedAt: "2022-06-30T12:55:43Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:43Z"
    - containerID: docker://7c4faf995541d3e23a07a11084140ccac216e4c6f37dd593b96a67700e44dbc3
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://7c4faf995541d3e23a07a11084140ccac216e4c6f37dd593b96a67700e44dbc3
          exitCode: 0
          finishedAt: "2022-06-30T12:55:44Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:42Z"
    hostIP: 10.0.12.124
    initContainerStatuses:
    - containerID: docker://36799de9a2e4ce98b537760012ede4b526fdb90c21a1d248fd983a11f57f5a8f
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://36799de9a2e4ce98b537760012ede4b526fdb90c21a1d248fd983a11f57f5a8f
          exitCode: 0
          finishedAt: "2022-06-30T12:55:40Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:40Z"
    phase: Succeeded
    podIP: 10.200.84.106
    podIPs:
    - ip: 10.200.84.106
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-v9fq5
      workflows.argoproj.io/node-name: hello-world-v9fq5
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-v9fq5/hello-world-v9fq5/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:54:56Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-v9fq5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"91113bc6-2c88-4181-b4f5-676906d731bd"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:54:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.22.108"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:04Z"
    name: hello-world-v9fq5
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-v9fq5
      uid: 91113bc6-2c88-4181-b4f5-676906d731bd
    resourceVersion: "19780155"
    uid: c4a28542-55fa-4359-a473-16f7e19c7704
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-v9fq5
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-v9fq5/hello-world-v9fq5"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-v9fq5
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-v9fq5/hello-world-v9fq5"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-v9fq5
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-v9fq5
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-v9fq5/hello-world-v9fq5"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-v9fq5
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-58.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:56Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:56Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1135a247e3ece3feb82493bf202a7b276f6323453d30fb033dff71fba0675efb
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://1135a247e3ece3feb82493bf202a7b276f6323453d30fb033dff71fba0675efb
          exitCode: 0
          finishedAt: "2022-06-30T12:55:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:02Z"
    - containerID: docker://0adf1d9b750c97314bcf594a1c10c20ce6182735383eed5df68f1bf2b2cac516
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://0adf1d9b750c97314bcf594a1c10c20ce6182735383eed5df68f1bf2b2cac516
          exitCode: 0
          finishedAt: "2022-06-30T12:55:03Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:01Z"
    hostIP: 10.0.13.58
    initContainerStatuses:
    - containerID: docker://35e9ef44aa0762c4d3090d6dbd2984da4215ad801fdd8fb69c49fb8d78e52784
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://35e9ef44aa0762c4d3090d6dbd2984da4215ad801fdd8fb69c49fb8d78e52784
          exitCode: 0
          finishedAt: "2022-06-30T12:54:58Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:58Z"
    phase: Succeeded
    podIP: 10.200.22.108
    podIPs:
    - ip: 10.200.22.108
    qosClass: BestEffort
    startTime: "2022-06-30T12:54:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-vz97c
      workflows.argoproj.io/node-name: hello-world-vz97c
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-vz97c/hello-world-vz97c/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:57Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-vz97c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"830ea217-3817-4c7f-a39b-a763b203e98c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.84.107"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:04Z"
    name: hello-world-vz97c
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-vz97c
      uid: 830ea217-3817-4c7f-a39b-a763b203e98c
    resourceVersion: "19781200"
    uid: 17472b17-b5b7-40e4-9981-c2715ee8dbb9
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-vz97c
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-vz97c/hello-world-vz97c"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-vz97c
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-vz97c/hello-world-vz97c"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-vz97c
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-vz97c
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-vz97c/hello-world-vz97c"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-vz97c
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-124.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:57Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:57Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3f7a034f9b7aa0994a4ed3cd9660bb902c6819a51506393a4b5ef99b2ca2abfe
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://3f7a034f9b7aa0994a4ed3cd9660bb902c6819a51506393a4b5ef99b2ca2abfe
          exitCode: 0
          finishedAt: "2022-06-30T12:56:03Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:03Z"
    - containerID: docker://c011e4fc0db4d3d6eebae141aee9101c35d7ccb0e115dae58396987d9df6e61d
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c011e4fc0db4d3d6eebae141aee9101c35d7ccb0e115dae58396987d9df6e61d
          exitCode: 0
          finishedAt: "2022-06-30T12:56:03Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:01Z"
    hostIP: 10.0.12.124
    initContainerStatuses:
    - containerID: docker://0382e0ff1d65ad31ca22a76f498211e74293f0ff241e356e3aa72da7348e62b8
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://0382e0ff1d65ad31ca22a76f498211e74293f0ff241e356e3aa72da7348e62b8
          exitCode: 0
          finishedAt: "2022-06-30T12:55:59Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:59Z"
    phase: Succeeded
    podIP: 10.200.84.107
    podIPs:
    - ip: 10.200.84.107
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-vzp6f
      workflows.argoproj.io/node-name: hello-world-vzp6f
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-vzp6f/hello-world-vzp6f/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:17Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-vzp6f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9be33c63-0339-433c-9624-216126f069b6"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.84.108"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:25Z"
    name: hello-world-vzp6f
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-vzp6f
      uid: 9be33c63-0339-433c-9624-216126f069b6
    resourceVersion: "19781556"
    uid: de83bb0d-c138-42a8-bf1f-3bfebfb48f5a
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-vzp6f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-vzp6f/hello-world-vzp6f"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-vzp6f
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-vzp6f/hello-world-vzp6f"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-vzp6f
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-vzp6f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-vzp6f/hello-world-vzp6f"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-vzp6f
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-124.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:21Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:17Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:17Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://2ae298f9b06634867957d4fb3cf10283580500818e3a0531e9885ee71a6cc9d3
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://2ae298f9b06634867957d4fb3cf10283580500818e3a0531e9885ee71a6cc9d3
          exitCode: 0
          finishedAt: "2022-06-30T12:56:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:23Z"
    - containerID: docker://ecd892c98c911f505ac2a2e2c70ffa8f285bacafeee18d0eb89fc16858d5301c
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://ecd892c98c911f505ac2a2e2c70ffa8f285bacafeee18d0eb89fc16858d5301c
          exitCode: 0
          finishedAt: "2022-06-30T12:56:24Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:22Z"
    hostIP: 10.0.12.124
    initContainerStatuses:
    - containerID: docker://23776689840fc4375f02904e880c8e9433a1d4bd6edba177e561e3ab27143a8b
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://23776689840fc4375f02904e880c8e9433a1d4bd6edba177e561e3ab27143a8b
          exitCode: 0
          finishedAt: "2022-06-30T12:56:20Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:20Z"
    phase: Succeeded
    podIP: 10.200.84.108
    podIPs:
    - ip: 10.200.84.108
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-wnrdw
      workflows.argoproj.io/node-name: hello-world-wnrdw
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-wnrdw/hello-world-wnrdw/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:37Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-wnrdw
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7ebb5493-42a4-4ab6-84be-f8ea533cef51"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.76"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:44Z"
    name: hello-world-wnrdw
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-wnrdw
      uid: 7ebb5493-42a4-4ab6-84be-f8ea533cef51
    resourceVersion: "19780851"
    uid: 12df4d5c-964d-4e06-a3c7-894ce327a0cd
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-wnrdw
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-wnrdw/hello-world-wnrdw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-wnrdw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-wnrdw/hello-world-wnrdw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-wnrdw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-wnrdw
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-wnrdw/hello-world-wnrdw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-wnrdw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:40Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:37Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:37Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ebb25541afaf399ce237cfb8e5567a97b63cb743d0be361b349756112c675449
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://ebb25541afaf399ce237cfb8e5567a97b63cb743d0be361b349756112c675449
          exitCode: 0
          finishedAt: "2022-06-30T12:55:43Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:43Z"
    - containerID: docker://876cfdffc3f661e91961b9bb4bfbebc9ad5f0c71e70cfb4d0cf032b6d4e4c96f
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://876cfdffc3f661e91961b9bb4bfbebc9ad5f0c71e70cfb4d0cf032b6d4e4c96f
          exitCode: 0
          finishedAt: "2022-06-30T12:55:43Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:41Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://b2395845e209ffe729b3ff555debc9127e39b619b90a37058ffcadfbd6d4903d
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://b2395845e209ffe729b3ff555debc9127e39b619b90a37058ffcadfbd6d4903d
          exitCode: 0
          finishedAt: "2022-06-30T12:55:39Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:39Z"
    phase: Succeeded
    podIP: 10.200.29.76
    podIPs:
    - ip: 10.200.29.76
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-wtv4s
      workflows.argoproj.io/node-name: hello-world-wtv4s
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-wtv4s/hello-world-wtv4s/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:47Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-wtv4s
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"70d740e0-ac99-486c-97e2-1e20d89d4a0b"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.141"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:55Z"
    name: hello-world-wtv4s
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-wtv4s
      uid: 70d740e0-ac99-486c-97e2-1e20d89d4a0b
    resourceVersion: "19782041"
    uid: 20fad0cc-cea8-4d56-b13f-aff17c303e2b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-wtv4s
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-wtv4s/hello-world-wtv4s"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-wtv4s
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-wtv4s/hello-world-wtv4s"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-wtv4s
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-wtv4s
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-wtv4s/hello-world-wtv4s"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-wtv4s
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:51Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:47Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:47Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://779588c1f4f9fb62e207b54aa9071edcc3fc6a5d643c0d2f8d492dc747a1f768
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://779588c1f4f9fb62e207b54aa9071edcc3fc6a5d643c0d2f8d492dc747a1f768
          exitCode: 0
          finishedAt: "2022-06-30T12:56:53Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:53Z"
    - containerID: docker://46272bbb14b77d631c3323f692d89052378b92870d70bd8dcaddd9d37f3953f0
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://46272bbb14b77d631c3323f692d89052378b92870d70bd8dcaddd9d37f3953f0
          exitCode: 0
          finishedAt: "2022-06-30T12:56:54Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:52Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://5ef8e6abf94c07ccd4cb92194a213978dda85eab7e3f337db341ea51124e600f
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://5ef8e6abf94c07ccd4cb92194a213978dda85eab7e3f337db341ea51124e600f
          exitCode: 0
          finishedAt: "2022-06-30T12:56:50Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:50Z"
    phase: Succeeded
    podIP: 10.200.25.141
    podIPs:
    - ip: 10.200.25.141
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-xdmzw
      workflows.argoproj.io/node-name: hello-world-xdmzw
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-xdmzw/hello-world-xdmzw/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:54:28Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-xdmzw
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1abd7a4a-6dde-4160-9074-12ac237b9b6c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:54:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:54:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.22.107"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:54:36Z"
    name: hello-world-xdmzw
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-xdmzw
      uid: 1abd7a4a-6dde-4160-9074-12ac237b9b6c
    resourceVersion: "19779688"
    uid: 8e5e8891-90cb-48d3-84cd-e6f2121fb035
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xdmzw
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xdmzw/hello-world-xdmzw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xdmzw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xdmzw/hello-world-xdmzw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xdmzw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xdmzw
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xdmzw/hello-world-xdmzw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xdmzw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-58.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:32Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:28Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:28Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7cb660611b52d1c66d124d8d4e6563293d393446c83a15b95cd6745bb638b9ac
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://7cb660611b52d1c66d124d8d4e6563293d393446c83a15b95cd6745bb638b9ac
          exitCode: 0
          finishedAt: "2022-06-30T12:54:35Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:34Z"
    - containerID: docker://3b1531a8a10a86f77ee2a2215b51493b70b5a2d88afe3c9893d779ba074ae88f
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://3b1531a8a10a86f77ee2a2215b51493b70b5a2d88afe3c9893d779ba074ae88f
          exitCode: 0
          finishedAt: "2022-06-30T12:54:35Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:33Z"
    hostIP: 10.0.13.58
    initContainerStatuses:
    - containerID: docker://791b06e9ad8088d8d103d7b76c921bf8fae352c00d2a9db32905f7133ca2bb8f
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://791b06e9ad8088d8d103d7b76c921bf8fae352c00d2a9db32905f7133ca2bb8f
          exitCode: 0
          finishedAt: "2022-06-30T12:54:31Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:31Z"
    phase: Succeeded
    podIP: 10.200.22.107
    podIPs:
    - ip: 10.200.22.107
    qosClass: BestEffort
    startTime: "2022-06-30T12:54:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-xfc48
      workflows.argoproj.io/node-name: hello-world-xfc48
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-xfc48/hello-world-xfc48/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:14Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-xfc48
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2f695cc8-48b6-4d43-b592-17bf267681ea"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.127"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:22Z"
    name: hello-world-xfc48
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-xfc48
      uid: 2f695cc8-48b6-4d43-b592-17bf267681ea
    resourceVersion: "19780467"
    uid: 1f8e2e11-6c6c-4eda-a6bb-6f93984f8ed1
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xfc48
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xfc48/hello-world-xfc48"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xfc48
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xfc48/hello-world-xfc48"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xfc48
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xfc48
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xfc48/hello-world-xfc48"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xfc48
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:17Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:14Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:14Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://df6c3e6a42558c1409cf2ecd1c1ad17d7fafbafa08f3e9c2910bf17f063a1949
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://df6c3e6a42558c1409cf2ecd1c1ad17d7fafbafa08f3e9c2910bf17f063a1949
          exitCode: 0
          finishedAt: "2022-06-30T12:55:20Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:20Z"
    - containerID: docker://31b2bca3a897c73dc08b696f968bb3c3131624099410db821a9559609035b487
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://31b2bca3a897c73dc08b696f968bb3c3131624099410db821a9559609035b487
          exitCode: 0
          finishedAt: "2022-06-30T12:55:21Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:19Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://b342d3fc80963bc60c3a44bdc78e7b197dddf44aca6cfdea6a80c0dca2243a1a
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://b342d3fc80963bc60c3a44bdc78e7b197dddf44aca6cfdea6a80c0dca2243a1a
          exitCode: 0
          finishedAt: "2022-06-30T12:55:16Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:16Z"
    phase: Succeeded
    podIP: 10.200.25.127
    podIPs:
    - ip: 10.200.25.127
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-xkrxw
      workflows.argoproj.io/node-name: hello-world-xkrxw
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-xkrxw/hello-world-xkrxw/main.log"}}]}'
    creationTimestamp: "2022-07-07T17:30:14Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-xkrxw
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"80304356-29d6-41a7-8aca-8d210084e253"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-07-07T17:30:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-07-07T17:30:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.81"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-07-07T17:30:22Z"
    name: hello-world-xkrxw
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-xkrxw
      uid: 80304356-29d6-41a7-8aca-8d210084e253
    resourceVersion: "22041090"
    uid: 5318bad9-b4d3-476a-85b1-8c82f7c70584
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xkrxw
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xkrxw/hello-world-xkrxw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xkrxw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xkrxw/hello-world-xkrxw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xkrxw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xkrxw
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xkrxw/hello-world-xkrxw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xkrxw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T17:30:17Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T17:30:14Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T17:30:14Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-07-07T17:30:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d77d0602569129057bd5609c2fb13eaa00304f745489f59e9d095b4380196745
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://d77d0602569129057bd5609c2fb13eaa00304f745489f59e9d095b4380196745
          exitCode: 0
          finishedAt: "2022-07-07T17:30:20Z"
          reason: Completed
          startedAt: "2022-07-07T17:30:20Z"
    - containerID: docker://ad3ce84c879007008ed5df5a5c09257cbb433b9e645ed6941c7f9fdd7d02b617
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://ad3ce84c879007008ed5df5a5c09257cbb433b9e645ed6941c7f9fdd7d02b617
          exitCode: 0
          finishedAt: "2022-07-07T17:30:21Z"
          reason: Completed
          startedAt: "2022-07-07T17:30:19Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://43016f71c199d42ba0f513953ac415ec678b6bf27f914e0ed2876802255de36a
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://43016f71c199d42ba0f513953ac415ec678b6bf27f914e0ed2876802255de36a
          exitCode: 0
          finishedAt: "2022-07-07T17:30:17Z"
          reason: Completed
          startedAt: "2022-07-07T17:30:17Z"
    phase: Succeeded
    podIP: 10.200.29.81
    podIPs:
    - ip: 10.200.29.81
    qosClass: BestEffort
    startTime: "2022-07-07T17:30:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-xlzs4
      workflows.argoproj.io/node-name: hello-world-xlzs4
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-xlzs4/hello-world-xlzs4/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:54:48Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-xlzs4
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"af8e99f4-33c6-4646-9bed-7a6930b6c6af"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:54:48Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:54:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.73"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:54:56Z"
    name: hello-world-xlzs4
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-xlzs4
      uid: af8e99f4-33c6-4646-9bed-7a6930b6c6af
    resourceVersion: "19780001"
    uid: 9e0c32be-506b-4e3b-a9d4-0f1d37d5433e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xlzs4
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xlzs4/hello-world-xlzs4"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xlzs4
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xlzs4/hello-world-xlzs4"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xlzs4
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xlzs4
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xlzs4/hello-world-xlzs4"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xlzs4
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:51Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:48Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:48Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:54:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e44891649f7c6a93482c9e3f009ef50e1957bdada02eb42e12f5e0c1861bbe40
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://e44891649f7c6a93482c9e3f009ef50e1957bdada02eb42e12f5e0c1861bbe40
          exitCode: 0
          finishedAt: "2022-06-30T12:54:54Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:54Z"
    - containerID: docker://5212f8c3d8346f2fe522ca4b3bce85f5c18ef93fc3cd42404932e1386a817cd4
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://5212f8c3d8346f2fe522ca4b3bce85f5c18ef93fc3cd42404932e1386a817cd4
          exitCode: 0
          finishedAt: "2022-06-30T12:54:55Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:53Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://7c8b8315523c6bf686ce17873ac97cf0386200e3037f8b0372eb638a0b2aa304
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://7c8b8315523c6bf686ce17873ac97cf0386200e3037f8b0372eb638a0b2aa304
          exitCode: 0
          finishedAt: "2022-06-30T12:54:51Z"
          reason: Completed
          startedAt: "2022-06-30T12:54:51Z"
    phase: Succeeded
    podIP: 10.200.29.73
    podIPs:
    - ip: 10.200.29.73
    qosClass: BestEffort
    startTime: "2022-06-30T12:54:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-xv4mz
      workflows.argoproj.io/node-name: hello-world-xv4mz
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-xv4mz/hello-world-xv4mz/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:17Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-xv4mz
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b5c78f81-d88b-4bb2-bf58-166bbcd46eb4"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.29.75"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:25Z"
    name: hello-world-xv4mz
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-xv4mz
      uid: b5c78f81-d88b-4bb2-bf58-166bbcd46eb4
    resourceVersion: "19780520"
    uid: 6cf0ac34-7c5f-47f9-b7d7-4a4adc74531b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xv4mz
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xv4mz/hello-world-xv4mz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xv4mz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xv4mz/hello-world-xv4mz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xv4mz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xv4mz
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xv4mz/hello-world-xv4mz"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xv4mz
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-126.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:20Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:17Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:17Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://30faa675c401a6a1eb8e5431683943134ecf9c632bebf9cee95a0e4e896f7362
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://30faa675c401a6a1eb8e5431683943134ecf9c632bebf9cee95a0e4e896f7362
          exitCode: 0
          finishedAt: "2022-06-30T12:55:23Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:23Z"
    - containerID: docker://2295dad052fad7a6c87ab76acbd9f36472aba5ffe837ca1aac7888e7c7a11379
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://2295dad052fad7a6c87ab76acbd9f36472aba5ffe837ca1aac7888e7c7a11379
          exitCode: 0
          finishedAt: "2022-06-30T12:55:24Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:22Z"
    hostIP: 10.0.12.126
    initContainerStatuses:
    - containerID: docker://c504de8630c1ef63770d1272cedcdd6f50b19a84af2d35e0bde0630bdd82347d
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://c504de8630c1ef63770d1272cedcdd6f50b19a84af2d35e0bde0630bdd82347d
          exitCode: 0
          finishedAt: "2022-06-30T12:55:20Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:20Z"
    phase: Succeeded
    podIP: 10.200.29.75
    podIPs:
    - ip: 10.200.29.75
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-xwhch
      workflows.argoproj.io/node-name: hello-world-xwhch
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-xwhch/hello-world-xwhch/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:27Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-xwhch
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fffd5051-c86f-4b55-b217-1600880333f2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.129"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:35Z"
    name: hello-world-xwhch
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-xwhch
      uid: fffd5051-c86f-4b55-b217-1600880333f2
    resourceVersion: "19780664"
    uid: 9fb7e7b2-2eab-4d6d-a02f-eea2526e34a1
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xwhch
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xwhch/hello-world-xwhch"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xwhch
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xwhch/hello-world-xwhch"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xwhch
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-xwhch
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-xwhch/hello-world-xwhch"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-xwhch
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:30Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:27Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:27Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://64351d5fddbed5a597aabd0b4b203443dab95a12ac6607a54e010fd8ae8b0050
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://64351d5fddbed5a597aabd0b4b203443dab95a12ac6607a54e010fd8ae8b0050
          exitCode: 0
          finishedAt: "2022-06-30T12:55:33Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:33Z"
    - containerID: docker://b02cd2dc00af6befe1ce07e68dbc50ff4517755fc5742188c8d6cfa5d79d2a3e
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://b02cd2dc00af6befe1ce07e68dbc50ff4517755fc5742188c8d6cfa5d79d2a3e
          exitCode: 0
          finishedAt: "2022-06-30T12:55:34Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:32Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://90fb92bb69151bc76d8d76d2254c347ceebc13c684bee02eebd1bff420ab0086
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://90fb92bb69151bc76d8d76d2254c347ceebc13c684bee02eebd1bff420ab0086
          exitCode: 0
          finishedAt: "2022-06-30T12:55:30Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:30Z"
    phase: Succeeded
    podIP: 10.200.25.129
    podIPs:
    - ip: 10.200.25.129
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-z9jlb
      workflows.argoproj.io/node-name: hello-world-z9jlb
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-z9jlb/hello-world-z9jlb/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:34Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-z9jlb
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a23fd3ec-b446-4f6f-8273-014e8ec81d07"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.74.94"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:42Z"
    name: hello-world-z9jlb
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-z9jlb
      uid: a23fd3ec-b446-4f6f-8273-014e8ec81d07
    resourceVersion: "19782825"
    uid: dbeb5d17-9a23-490e-844a-0e11fcfb396e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-z9jlb
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-z9jlb/hello-world-z9jlb"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-z9jlb
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-z9jlb/hello-world-z9jlb"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-z9jlb
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-z9jlb
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-z9jlb/hello-world-z9jlb"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-z9jlb
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-13-61.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:37Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:34Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:34Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1201aeb518c9b83cc9fb27f01a9be831eec54dde029ee592521e4c2868c3ae37
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://1201aeb518c9b83cc9fb27f01a9be831eec54dde029ee592521e4c2868c3ae37
          exitCode: 0
          finishedAt: "2022-06-30T12:57:40Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:40Z"
    - containerID: docker://09c9dc88d35b4bf88b9a58855d96e69346248818b8a2b49786fd398c1561da83
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://09c9dc88d35b4bf88b9a58855d96e69346248818b8a2b49786fd398c1561da83
          exitCode: 0
          finishedAt: "2022-06-30T12:57:41Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:38Z"
    hostIP: 10.0.13.61
    initContainerStatuses:
    - containerID: docker://c6038edb20f98d7987ee78092ff14aba71e10fd630df328028f3dffd9b9cbab5
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://c6038edb20f98d7987ee78092ff14aba71e10fd630df328028f3dffd9b9cbab5
          exitCode: 0
          finishedAt: "2022-06-30T12:57:37Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:36Z"
    phase: Succeeded
    podIP: 10.200.74.94
    podIPs:
    - ip: 10.200.74.94
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-zc5gw
      workflows.argoproj.io/node-name: hello-world-zc5gw
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-zc5gw/hello-world-zc5gw/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:56:07Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-zc5gw
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0ff331f7-8b8a-4988-926b-cfc6eb7c6812"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:56:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.135"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:15Z"
    name: hello-world-zc5gw
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-zc5gw
      uid: 0ff331f7-8b8a-4988-926b-cfc6eb7c6812
    resourceVersion: "19781364"
    uid: d7dc91a0-4d5a-47c3-b4d6-9b7c87582528
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-zc5gw
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zc5gw/hello-world-zc5gw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zc5gw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zc5gw/hello-world-zc5gw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zc5gw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-zc5gw
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zc5gw/hello-world-zc5gw"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zc5gw
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:11Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:07Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:07Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:56:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://37af5f1987c24fc483a9b7fb6f49c48aa3d9fcfdefb69301d2397b8d32f94731
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://37af5f1987c24fc483a9b7fb6f49c48aa3d9fcfdefb69301d2397b8d32f94731
          exitCode: 0
          finishedAt: "2022-06-30T12:56:13Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:13Z"
    - containerID: docker://bf43fe391de16020a058b81fa345a7e32f594bbd24a5b8a2313a3b07e2de3c11
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://bf43fe391de16020a058b81fa345a7e32f594bbd24a5b8a2313a3b07e2de3c11
          exitCode: 0
          finishedAt: "2022-06-30T12:56:14Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:12Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://fd1b96aedac53ddd8b7dee618fe1036f6f01b5aa2ecb7d35cae66239d59e744e
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://fd1b96aedac53ddd8b7dee618fe1036f6f01b5aa2ecb7d35cae66239d59e744e
          exitCode: 0
          finishedAt: "2022-06-30T12:56:10Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:10Z"
    phase: Succeeded
    podIP: 10.200.25.135
    podIPs:
    - ip: 10.200.25.135
    qosClass: BestEffort
    startTime: "2022-06-30T12:56:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-zjmkm
      workflows.argoproj.io/node-name: hello-world-zjmkm
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-zjmkm/hello-world-zjmkm/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:57:35Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-zjmkm
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"336913b8-3449-4bd5-80f1-d21def0f5312"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:57:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:57:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.149"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:57:43Z"
    name: hello-world-zjmkm
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-zjmkm
      uid: 336913b8-3449-4bd5-80f1-d21def0f5312
    resourceVersion: "19782837"
    uid: 7f88345c-eea9-4325-82b1-81c4cc054845
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-zjmkm
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zjmkm/hello-world-zjmkm"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zjmkm
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zjmkm/hello-world-zjmkm"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zjmkm
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-zjmkm
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zjmkm/hello-world-zjmkm"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zjmkm
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:38Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:35Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:35Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:57:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ea73511c4d5eeb8ecaf1228c98a436421b099f5a17af357ab137cedf9a0d666d
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://ea73511c4d5eeb8ecaf1228c98a436421b099f5a17af357ab137cedf9a0d666d
          exitCode: 0
          finishedAt: "2022-06-30T12:57:41Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:41Z"
    - containerID: docker://c964d5c19013aa16633af56f2e54ae97f0ab0aecfebd8ab36fde712b3969241b
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c964d5c19013aa16633af56f2e54ae97f0ab0aecfebd8ab36fde712b3969241b
          exitCode: 0
          finishedAt: "2022-06-30T12:57:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:40Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://ca318673b9e2d7f19f1bd5a1f8ca4b83bb4a6840cd56f9923c64ebc4e278441d
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://ca318673b9e2d7f19f1bd5a1f8ca4b83bb4a6840cd56f9923c64ebc4e278441d
          exitCode: 0
          finishedAt: "2022-06-30T12:57:38Z"
          reason: Completed
          startedAt: "2022-06-30T12:57:38Z"
    phase: Succeeded
    podIP: 10.200.25.149
    podIPs:
    - ip: 10.200.25.149
    qosClass: BestEffort
    startTime: "2022-06-30T12:57:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-zmkcx
      workflows.argoproj.io/node-name: hello-world-zmkcx
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-zmkcx/hello-world-zmkcx/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:56Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-zmkcx
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3fb58142-9faf-489f-a949-251c7e2b7fac"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:56:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.45.98"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:56:04Z"
    name: hello-world-zmkcx
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-zmkcx
      uid: 3fb58142-9faf-489f-a949-251c7e2b7fac
    resourceVersion: "19781194"
    uid: fc8a991e-a5a4-4558-b11a-4c1636119141
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-zmkcx
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zmkcx/hello-world-zmkcx"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zmkcx
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zmkcx/hello-world-zmkcx"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zmkcx
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-zmkcx
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zmkcx/hello-world-zmkcx"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zmkcx
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-125.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:56Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:56Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c3aa367c66d58a30950c67022e7a09939503936345c7e4e4ba0dd2b81d6ca1bc
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://c3aa367c66d58a30950c67022e7a09939503936345c7e4e4ba0dd2b81d6ca1bc
          exitCode: 0
          finishedAt: "2022-06-30T12:56:02Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:02Z"
    - containerID: docker://16883cd2fcbd29355a9eec1395f2269ed9b74071bda377305b78fcd7586cbe36
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://16883cd2fcbd29355a9eec1395f2269ed9b74071bda377305b78fcd7586cbe36
          exitCode: 0
          finishedAt: "2022-06-30T12:56:03Z"
          reason: Completed
          startedAt: "2022-06-30T12:56:00Z"
    hostIP: 10.0.12.125
    initContainerStatuses:
    - containerID: docker://92a7044b86cf331372591a15a538dc3a3d0443f6ccff8718e82932278558e784
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://92a7044b86cf331372591a15a538dc3a3d0443f6ccff8718e82932278558e784
          exitCode: 0
          finishedAt: "2022-06-30T12:55:59Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:59Z"
    phase: Succeeded
    podIP: 10.200.45.98
    podIPs:
    - ip: 10.200.45.98
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: hello-world-zp8gh
      workflows.argoproj.io/node-name: hello-world-zp8gh
      workflows.argoproj.io/outputs: '{"artifacts":[{"name":"main-logs","s3":{"key":"hello-world-zp8gh/hello-world-zp8gh/main.log"}}]}'
    creationTimestamp: "2022-06-30T12:55:35Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: hello-world-zp8gh
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3f0cf391-b5b8-4063-9865-cd23e0e207e5"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_POD_UID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/secret/minio-secret"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"minio-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2022-06-30T12:55:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:workflows.argoproj.io/outputs: {}
      manager: argoexec
      operation: Update
      time: "2022-06-30T12:55:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.25.131"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:55:43Z"
    name: hello-world-zp8gh
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: hello-world-zp8gh
      uid: 3f0cf391-b5b8-4063-9865-cd23e0e207e5
    resourceVersion: "19780824"
    uid: 1ed89824-2aa6-4d39-b1b4-893916b0966c
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-zp8gh
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zp8gh/hello-world-zp8gh"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zp8gh
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    - args:
      - hello world
      command:
      - /var/run/argo/argoexec
      - emissary
      - --
      - cowsay
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zp8gh/hello-world-zp8gh"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zp8gh
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker/whalesay:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: emissary
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: hello-world-zp8gh
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"whalesay","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"docker/whalesay:latest","command":["cowsay"],"args":["hello
          world"],"resources":{}},"archiveLocation":{"archiveLogs":true,"s3":{"endpoint":"argo-artifacts:9000","bucket":"algnext-dev-output","region":"us-east-1","insecure":true,"accessKeySecret":{"name":"minio-secret","key":"accesskey"},"secretKeySecret":{"name":"minio-secret","key":"secretkey"},"key":"hello-world-zp8gh/hello-world-zp8gh"}}}'
      - name: ARGO_NODE_ID
        value: hello-world-zp8gh
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imagePullPolicy: Always
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/minio-secret
        name: minio-secret
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-h4gdf
        readOnly: true
    nodeName: ip-10-0-12-122.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: minio-secret
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: minio-secret
    - name: default-token-h4gdf
      secret:
        defaultMode: 420
        secretName: default-token-h4gdf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:38Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:35Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:35Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:55:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://60e8a41b787ae6cb0f994b4f323030f02a9e5dd6010a5d8d21ac782385e40afe
      image: docker/whalesay:latest
      imageID: docker-pullable://docker/whalesay@sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://60e8a41b787ae6cb0f994b4f323030f02a9e5dd6010a5d8d21ac782385e40afe
          exitCode: 0
          finishedAt: "2022-06-30T12:55:41Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:41Z"
    - containerID: docker://ae75a7063c0ec64b715ae1ee5fd19856f3f193dcb2e0a1cb795dbbf61225086b
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: docker://ae75a7063c0ec64b715ae1ee5fd19856f3f193dcb2e0a1cb795dbbf61225086b
          exitCode: 0
          finishedAt: "2022-06-30T12:55:42Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:39Z"
    hostIP: 10.0.12.122
    initContainerStatuses:
    - containerID: docker://f4e2477473c65375dbd356f4406d516ea9c0a6b7b653bb6eec9497a5a4e43bf1
      image: bitnami/argo-workflow-exec:3.3.5-debian-10-r19
      imageID: docker-pullable://bitnami/argo-workflow-exec@sha256:fb80148e2ac141021c8cc463075e0ebbc3b35d8cdf85204d277b8fe0428bb042
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://f4e2477473c65375dbd356f4406d516ea9c0a6b7b653bb6eec9497a5a4e43bf1
          exitCode: 0
          finishedAt: "2022-06-30T12:55:37Z"
          reason: Completed
          startedAt: "2022-06-30T12:55:37Z"
    phase: Succeeded
    podIP: 10.200.25.131
    podIPs:
    - ip: 10.200.25.131
    qosClass: BestEffort
    startTime: "2022-06-30T12:55:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: prometheus
    creationTimestamp: "2022-06-30T12:44:51Z"
    generateName: prometheus-algnext-kube-prometheus-prometheus-
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: algnext-kube-prometheus-prometheus
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/version: 2.35.0
      controller-revision-hash: prometheus-algnext-kube-prometheus-prometheus-6d664cc7fd
      operator.prometheus.io/name: algnext-kube-prometheus-prometheus
      operator.prometheus.io/shard: "0"
      prometheus: algnext-kube-prometheus-prometheus
      statefulset.kubernetes.io/pod-name: prometheus-algnext-kube-prometheus-prometheus-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:operator.prometheus.io/name: {}
            f:operator.prometheus.io/shard: {}
            f:prometheus: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"de52d899-08da-400d-8fb3-a599f2772027"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/prometheus/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"prometheus"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/prometheus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/prometheus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:initContainers:
            .: {}
            k:{"name":"init-config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/prometheus/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"config-out"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"prometheus-algnext-kube-prometheus-prometheus-db"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"prometheus-algnext-kube-prometheus-prometheus-rulefiles-0"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"tls-assets"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"web-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.200.70.218"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-06-30T12:45:28Z"
    name: prometheus-algnext-kube-prometheus-prometheus-0
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: prometheus-algnext-kube-prometheus-prometheus
      uid: de52d899-08da-400d-8fb3-a599f2772027
    resourceVersion: "19777185"
    uid: 986e8adc-de8a-4f0f-b636-d6b9bd3656a1
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: prometheus
                app.kubernetes.io/instance: algnext
                app.kubernetes.io/name: kube-prometheus
            namespaces:
            - algnext-ns
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=10d
      - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.external-url=http://algnext-kube-prometheus-prometheus.algnext-ns:9090/
      - --web.route-prefix=/
      - --web.config.file=/etc/prometheus/web_config/web-config.yaml
      image: docker.io/bitnami/prometheus:2.35.0-debian-10-r30
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /-/healthy
          port: web
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: prometheus
      ports:
      - containerPort: 9090
        name: web
        protocol: TCP
      readinessProbe:
        failureThreshold: 10
        httpGet:
          path: /-/ready
          port: web
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
      startupProbe:
        failureThreshold: 60
        httpGet:
          path: /-/ready
          port: web
          scheme: HTTP
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: tls-assets
        readOnly: true
      - mountPath: /prometheus
        name: prometheus-algnext-kube-prometheus-prometheus-db
      - mountPath: /etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
        name: prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
      - mountPath: /etc/prometheus/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-kube-prometheus-prometheus-token-5tlhs
        readOnly: true
    - args:
      - --listen-address=:8080
      - --reload-url=http://127.0.0.1:9090/-/reload
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: docker.io/bitnami/prometheus-operator:0.56.3-debian-10-r0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: reloader-web
        timeoutSeconds: 5
      name: config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: reloader-web
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
        name: prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-kube-prometheus-prometheus-token-5tlhs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: prometheus-algnext-kube-prometheus-prometheus-0
    initContainers:
    - args:
      - --watch-interval=0
      - --listen-address=:8080
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: docker.io/bitnami/prometheus-operator:0.56.3-debian-10-r0
      imagePullPolicy: IfNotPresent
      name: init-config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
        name: prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: algnext-kube-prometheus-prometheus-token-5tlhs
        readOnly: true
    nodeName: ip-10-0-13-62.us-gov-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: algnext-kube-prometheus-prometheus
    serviceAccountName: algnext-kube-prometheus-prometheus
    subdomain: prometheus-operated
    terminationGracePeriodSeconds: 600
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: config
      secret:
        defaultMode: 420
        secretName: prometheus-algnext-kube-prometheus-prometheus
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: prometheus-algnext-kube-prometheus-prometheus-tls-assets-0
    - emptyDir: {}
      name: config-out
    - configMap:
        defaultMode: 420
        name: prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
      name: prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
    - name: web-config
      secret:
        defaultMode: 420
        secretName: prometheus-algnext-kube-prometheus-prometheus-web-config
    - emptyDir: {}
      name: prometheus-algnext-kube-prometheus-prometheus-db
    - name: algnext-kube-prometheus-prometheus-token-5tlhs
      secret:
        defaultMode: 420
        secretName: algnext-kube-prometheus-prometheus-token-5tlhs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:45:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-06-30T12:44:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://68fff0f795150ee89f509265fd7c171ad012e1a29b91739a694d243f81518898
      image: bitnami/prometheus-operator:0.56.3-debian-10-r0
      imageID: docker-pullable://bitnami/prometheus-operator@sha256:5918c9a4d49616cf70c764c7dc471aaffdd2c5453d08bbd0967d5927d58e8729
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:45:09Z"
    - containerID: docker://fae9a3a8b00c5063abaf25e6f720c6ea568f288319cf8ab71c04afd4f77ec3ce
      image: bitnami/prometheus:2.35.0-debian-10-r30
      imageID: docker-pullable://bitnami/prometheus@sha256:8e616acfb4d719fd63c5ca3b5152e9d9321e250c7fdba182030bedf5de82624b
      lastState: {}
      name: prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-06-30T12:45:08Z"
    hostIP: 10.0.13.62
    initContainerStatuses:
    - containerID: docker://c2a0579976d2fc44c71d2502388a60fbde34516624e057dc619008b81022754f
      image: bitnami/prometheus-operator:0.56.3-debian-10-r0
      imageID: docker-pullable://bitnami/prometheus-operator@sha256:5918c9a4d49616cf70c764c7dc471aaffdd2c5453d08bbd0967d5927d58e8729
      lastState: {}
      name: init-config-reloader
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://c2a0579976d2fc44c71d2502388a60fbde34516624e057dc619008b81022754f
          exitCode: 0
          finishedAt: "2022-06-30T12:44:53Z"
          reason: Completed
          startedAt: "2022-06-30T12:44:53Z"
    phase: Running
    podIP: 10.200.70.218
    podIPs:
    - ip: 10.200.70.218
    qosClass: Burstable
    startTime: "2022-06-30T12:44:51Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-06-30T12:44:50Z"
    labels:
      operated-alertmanager: "true"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:operated-alertmanager: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6ca037a6-bc07-41cb-aab5-a45bb79924e6"}:
              .: {}
              f:apiVersion: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":9093,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9094,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9094,"protocol":"UDP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: PrometheusOperator
      operation: Update
      time: "2022-06-30T12:44:50Z"
    name: alertmanager-operated
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      kind: Alertmanager
      name: algnext-kube-prometheus-alertmanager
      uid: 6ca037a6-bc07-41cb-aab5-a45bb79924e6
    resourceVersion: "19776802"
    uid: 53a43857-843d-407a-9069-03f077fbb5f2
  spec:
    clusterIP: None
    clusterIPs:
    - None
    ports:
    - name: web
      port: 9093
      protocol: TCP
      targetPort: web
    - name: tcp-mesh
      port: 9094
      protocol: TCP
      targetPort: 9094
    - name: udp-mesh
      port: 9094
      protocol: UDP
      targetPort: 9094
    selector:
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      app.kubernetes.io/part-of: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:helm.sh/chart: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    name: algnext-argo-workflows-controller
    namespace: algnext-ns
    resourceVersion: "19776355"
    uid: eaab4d93-996e-48d0-ba0f-f6a5e85262a6
  spec:
    clusterIP: 10.100.200.235
    clusterIPs:
    - 10.100.200.235
    ports:
    - name: tcp-metrics
      port: 8080
      protocol: TCP
      targetPort: 9090
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/name: argo-workflows
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      app.kubernetes.io/part-of: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:helm.sh/chart: {}
        f:spec:
          f:externalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:nodePort: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:type: {}
      manager: kubectl-edit
      operation: Update
      time: "2022-06-30T18:21:47Z"
    name: algnext-argo-workflows-server
    namespace: algnext-ns
    resourceVersion: "19853709"
    uid: c947e9c4-1c9a-4085-b6c7-e49fffca1717
  spec:
    clusterIP: 10.100.200.122
    clusterIPs:
    - 10.100.200.122
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: web
    selector:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/name: argo-workflows
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      helm.sh/chart: grafana-7.8.1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:externalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":3000,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:nodePort: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    name: algnext-grafana
    namespace: algnext-ns
    resourceVersion: "19776386"
    uid: 73f3ecd8-06a5-4d40-a57b-04676238efee
  spec:
    clusterIP: 10.100.200.233
    clusterIPs:
    - 10.100.200.233
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 30003
      port: 3000
      protocol: TCP
      targetPort: dashboard
    selector:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/name: grafana
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/component: alertmanager
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":9093,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:alertmanager: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    name: algnext-kube-prometheus-alertmanager
    namespace: algnext-ns
    resourceVersion: "19776395"
    uid: 19919c0d-cab0-45d6-b511-5d65a7ba46a8
  spec:
    clusterIP: 10.100.200.19
    clusterIPs:
    - 10.100.200.19
    ports:
    - name: http
      port: 9093
      protocol: TCP
      targetPort: 9093
    selector:
      alertmanager: algnext-kube-prometheus-alertmanager
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/component: blackbox-exporter
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":19115,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:publishNotReadyAddresses: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    name: algnext-kube-prometheus-blackbox-exporter
    namespace: algnext-ns
    resourceVersion: "19776410"
    uid: 4b3ca700-10d2-46a2-a0fe-c5f04207886f
  spec:
    clusterIP: 10.100.200.123
    clusterIPs:
    - 10.100.200.123
    ports:
    - name: http
      port: 19115
      protocol: TCP
      targetPort: http
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: blackbox-exporter
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/name: kube-prometheus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    name: algnext-kube-prometheus-operator
    namespace: algnext-ns
    resourceVersion: "19776402"
    uid: d0c1611e-1fb6-4394-9be5-e17a5ac4b63f
  spec:
    clusterIP: 10.100.200.119
    clusterIPs:
    - 10.100.200.119
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/component: operator
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/name: kube-prometheus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:externalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":9090,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/name: {}
            f:prometheus: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    name: algnext-kube-prometheus-prometheus
    namespace: algnext-ns
    resourceVersion: "19776411"
    uid: 290126f9-6274-4d54-9e16-0b3e90b7222a
  spec:
    clusterIP: 10.100.200.128
    clusterIPs:
    - 10.100.200.128
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 30379
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app.kubernetes.io/name: prometheus
      prometheus: algnext-kube-prometheus-prometheus
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      helm.sh/chart: kube-state-metrics-2.2.24
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    name: algnext-kube-state-metrics
    namespace: algnext-ns
    resourceVersion: "19776376"
    uid: abd63e68-6c72-4ccf-a22b-dd32feb9c274
  spec:
    clusterIP: 10.100.200.201
    clusterIPs:
    - 10.100.200.201
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/name: kube-state-metrics
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
      prometheus.io/scrape: "true"
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      helm.sh/chart: node-exporter-2.4.16
      jobLabel: node-exporter
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:prometheus.io/scrape: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:jobLabel: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":9100,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    name: algnext-node-exporter
    namespace: algnext-ns
    resourceVersion: "19776387"
    uid: c4e5c1d0-682f-4669-9cbf-c30f1fd7f2bd
  spec:
    clusterIP: 10.100.200.227
    clusterIPs:
    - 10.100.200.227
    ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: metrics
    selector:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/name: node-exporter
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-11.2.6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":5432,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    name: algnext-postgresql
    namespace: algnext-ns
    resourceVersion: "19776353"
    uid: b9c6cc5e-9a4b-4bbd-a984-f96ae4d4f029
  spec:
    clusterIP: 10.100.200.141
    clusterIPs:
    - 10.100.200.141
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-11.2.6
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:service.alpha.kubernetes.io/tolerate-unready-endpoints: {}
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":5432,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:publishNotReadyAddresses: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    name: algnext-postgresql-hl
    namespace: algnext-ns
    resourceVersion: "19776349"
    uid: 72f19b97-c94a-4119-8370-4d65a0068021
  spec:
    clusterIP: None
    clusterIPs:
    - None
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: minio
      helm.sh/chart: minio-11.5.1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:externalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":9000,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:nodePort: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9001,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:nodePort: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    name: argo-artifacts
    namespace: algnext-ns
    resourceVersion: "19776383"
    uid: 19598f64-d289-48de-962d-a6cdec3c7e64
  spec:
    clusterIP: 10.100.200.37
    clusterIPs:
    - 10.100.200.37
    externalTrafficPolicy: Cluster
    ports:
    - name: minio-api
      nodePort: 31000
      port: 9000
      protocol: TCP
      targetPort: minio-api
    - name: minio-console
      nodePort: 30001
      port: 9001
      protocol: TCP
      targetPort: minio-console
    selector:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/name: minio
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      resource-spec-hash: "2054828232"
    creationTimestamp: "2022-06-30T12:44:49Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      controller: eventbus-controller
      eventbus-name: default
      owner-name: default
      stan: "yes"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:resource-spec-hash: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:controller: {}
            f:eventbus-name: {}
            f:owner-name: {}
            f:stan: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a0c30937-5d5b-4b15-ac53-89f77cbf0b27"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":4222,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":6222,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":8222,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:controller: {}
            f:eventbus-name: {}
            f:owner-name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: argo-events
      operation: Update
      time: "2022-06-30T12:44:49Z"
    name: eventbus-default-stan-svc
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: EventBus
      name: default
      uid: a0c30937-5d5b-4b15-ac53-89f77cbf0b27
    resourceVersion: "19776757"
    uid: 2d545cef-eb9d-4625-a98e-5d17d2a3ff62
  spec:
    clusterIP: None
    clusterIPs:
    - None
    ports:
    - name: tcp-client
      port: 4222
      protocol: TCP
      targetPort: 4222
    - name: cluster
      port: 6222
      protocol: TCP
      targetPort: 6222
    - name: monitor
      port: 8222
      protocol: TCP
      targetPort: 8222
    selector:
      controller: eventbus-controller
      eventbus-name: default
      owner-name: default
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-06-30T12:44:51Z"
    labels:
      operated-prometheus: "true"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:operated-prometheus: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3f8f7a4e-6709-4207-ae70-c8985724e433"}:
              .: {}
              f:apiVersion: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":9090,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: PrometheusOperator
      operation: Update
      time: "2022-06-30T12:44:51Z"
    name: prometheus-operated
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      kind: Prometheus
      name: algnext-kube-prometheus-prometheus
      uid: 3f8f7a4e-6709-4207-ae70-c8985724e433
    resourceVersion: "19776819"
    uid: 19d6e1f0-5073-4bef-80a4-90f4b057009e
  spec:
    clusterIP: None
    clusterIPs:
    - None
    ports:
    - name: web
      port: 9090
      protocol: TCP
      targetPort: web
    selector:
      app.kubernetes.io/name: prometheus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: node-exporter
      helm.sh/chart: node-exporter-2.4.16
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"node-exporter"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9100,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/host/proc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/sys"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:hostPID: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"proc"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"sys"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:24Z"
    name: algnext-node-exporter
    namespace: algnext-ns
    resourceVersion: "19777164"
    uid: 154b0376-0086-4cd2-ab93-b2dd90b6f93c
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: node-exporter
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: node-exporter
          helm.sh/chart: node-exporter-2.4.16
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: node-exporter
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --path.procfs=/host/proc
          - --path.sysfs=/host/sys
          - --web.listen-address=0.0.0.0:9100
          - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
          - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
          image: docker.io/bitnami/node-exporter:1.3.1-debian-10-r160
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: node-exporter
          ports:
          - containerPort: 9100
            hostPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/proc
            name: proc
            readOnly: true
          - mountPath: /host/sys
            name: sys
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsUser: 1001
        serviceAccount: algnext-node-exporter
        serviceAccountName: algnext-node-exporter
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /proc
            type: ""
          name: proc
        - hostPath:
            path: /sys
            type: ""
          name: sys
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 10
    desiredNumberScheduled: 10
    numberAvailable: 10
    numberMisscheduled: 0
    numberReady: 10
    observedGeneration: 1
    updatedNumberScheduled: 10
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 2
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      app.kubernetes.io/part-of: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:helm.sh/chart: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"controller"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ARGO_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"LEADER_ELECTION_IDENTITY"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6060,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9090,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:metadata:
              f:annotations:
                f:kubectl.kubernetes.io/restartedAt: {}
      manager: dashboard
      operation: Update
      time: "2022-07-08T18:17:24Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-07-08T18:18:25Z"
    name: algnext-argo-workflows-controller
    namespace: algnext-ns
    resourceVersion: "22366612"
    uid: 595a79e8-15f6-44b2-9880-4cf18ef4397d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: argo-workflows
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
          kubectl.kubernetes.io/restartedAt: "2022-07-08T18:17:24Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argo-workflows
          helm.sh/chart: argo-workflows-2.2.1
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: controller
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: argo-workflows
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --configmap
          - algnext-argo-workflows-controller
          - --executor-image
          - docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
          - --executor-image-pull-policy
          - Always
          - --loglevel
          - info
          - --gloglevel
          - "0"
          - --workflow-workers
          - "32"
          env:
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: LEADER_ELECTION_IDENTITY
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: docker.io/bitnami/argo-workflow-controller:3.3.5-scratch-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 90
            periodSeconds: 60
            successThreshold: 1
            tcpSocket:
              port: 6060
            timeoutSeconds: 30
          name: controller
          ports:
          - containerPort: 9090
            name: metrics
            protocol: TCP
          - containerPort: 6060
            name: controller
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            tcpSocket:
              port: 6060
            timeoutSeconds: 30
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: algnext-argo-workflows-controller
        serviceAccountName: algnext-argo-workflows-controller
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-06-30T12:46:17Z"
      lastUpdateTime: "2022-06-30T12:46:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-06-30T12:44:45Z"
      lastUpdateTime: "2022-07-08T18:18:25Z"
      message: ReplicaSet "algnext-argo-workflows-controller-bc47b48c4" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 5
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      app.kubernetes.io/part-of: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
    name: algnext-argo-workflows-server
    namespace: algnext-ns
    resourceVersion: "22368650"
    uid: 172ad106-e301-4695-9e38-8b1f5711ffc7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: argo-workflows
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
          kubectl.kubernetes.io/restartedAt: "2022-07-08T18:27:05Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argo-workflows
          helm.sh/chart: argo-workflows-2.2.1
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: server
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: argo-workflows
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - server
          - --configmap=algnext-argo-workflows-controller
          - --secure=false
          - --auth-mode
          - client
          - --port
          - "2746"
          env:
          - name: BASE_HREF
            value: /app/algnext/
          - name: IN_CLUSTER
            value: "true"
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/bitnami/argo-workflow-cli:3.3.5-scratch-r2
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: argo-server
          ports:
          - containerPort: 2746
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: algnext-argo-workflows-server
        serviceAccountName: algnext-argo-workflows-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-06-30T12:45:49Z"
      lastUpdateTime: "2022-06-30T12:45:49Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-06-30T12:44:45Z"
      lastUpdateTime: "2022-07-08T18:27:23Z"
      message: ReplicaSet "algnext-argo-workflows-server-66cd88cb47" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app: algnext-eventbus-controller
      app.kubernetes.io/managed-by: Helm
      chart: argo-events-1.13.0
      heritage: Helm
      release: algnext
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/managed-by: {}
            f:chart: {}
            f:heritage: {}
            f:release: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:release: {}
            f:spec:
              f:containers:
                k:{"name":"eventbus-controller"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"NATS_METRICS_EXPORTER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NATS_STREAMING_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:53Z"
    name: algnext-eventbus-controller
    namespace: algnext-ns
    resourceVersion: "19776875"
    uid: 1af1ca5c-233c-4d9f-9dc0-8ce6a2ff1cb6
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: algnext-eventbus-controller
        release: algnext
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: algnext-eventbus-controller
          release: algnext
      spec:
        containers:
        - args:
          - eventbus-controller
          - --namespaced
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NATS_STREAMING_IMAGE
            value: nats-streaming:0.22.1
          - name: NATS_METRICS_EXPORTER_IMAGE
            value: natsio/prometheus-nats-exporter:0.8.0
          image: quay.io/argoproj/argo-events:v1.6.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: eventbus-controller
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          runAsUser: 9731
        serviceAccount: argo-events-sa
        serviceAccountName: argo-events-sa
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-06-30T12:44:53Z"
      lastUpdateTime: "2022-06-30T12:44:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-06-30T12:44:45Z"
      lastUpdateTime: "2022-06-30T12:44:53Z"
      message: ReplicaSet "algnext-eventbus-controller-9cdb4778f" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app: algnext-eventsource-controller
      app.kubernetes.io/managed-by: Helm
      chart: argo-events-1.13.0
      heritage: Helm
      release: algnext
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/managed-by: {}
            f:chart: {}
            f:heritage: {}
            f:release: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:release: {}
            f:spec:
              f:containers:
                k:{"name":"eventsource-controller"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"EVENTSOURCE_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:52Z"
    name: algnext-eventsource-controller
    namespace: algnext-ns
    resourceVersion: "19776863"
    uid: ab451de8-51cf-4c01-8f01-2d06d5658c89
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: algnext-eventsource-controller
        release: algnext
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: algnext-eventsource-controller
          release: algnext
      spec:
        containers:
        - args:
          - eventsource-controller
          - --namespaced
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: EVENTSOURCE_IMAGE
            value: quay.io/argoproj/argo-events:v1.6.0
          image: quay.io/argoproj/argo-events:v1.6.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: eventsource-controller
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          runAsUser: 9731
        serviceAccount: argo-events-sa
        serviceAccountName: argo-events-sa
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-06-30T12:44:52Z"
      lastUpdateTime: "2022-06-30T12:44:52Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-06-30T12:44:45Z"
      lastUpdateTime: "2022-06-30T12:44:52Z"
      message: ReplicaSet "algnext-eventsource-controller-8c99b48bc" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      helm.sh/chart: grafana-7.8.1
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
                f:checksum/dashboard-provider: {}
                f:checksum/secret: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"grafana"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"GF_SECURITY_ADMIN_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":3000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/opt/bitnami/grafana/conf/provisioning/dashboards"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/bitnami/grafana/conf/provisioning/datasources"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/bitnami/grafana/dashboards/argo-workflows-controller-dash.json"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
                    k:{"mountPath":"/opt/bitnami/grafana/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"argo-workflows-controller-dash"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"dashboards-provider"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
                k:{"name":"datasources"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:51Z"
    name: algnext-grafana
    namespace: algnext-ns
    resourceVersion: "19777307"
    uid: b854f302-c5d0-42db-bed7-e4ba0ef878f5
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: grafana
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: grafana
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: d7896ad385f216aacb163112514df14dd73075ede9b1d5d8297d1082a635a734
          checksum/dashboard-provider: deaaaf2448c97596cc368026544a49b8ecbb8efd729ecc44814399aceef000f9
          checksum/secret: c01667fd514fce67f5e8f16e3bada1c2f4262274ce6cb72a311586a83bb0315c
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: grafana
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: grafana
          helm.sh/chart: grafana-7.8.1
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: grafana
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: grafana
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: GF_SECURITY_ADMIN_PASSWORD
                name: algnext-grafana-admin
          envFrom:
          - configMapRef:
              name: algnext-grafana-envvars
          image: docker.io/bitnami/grafana:8.5.3-debian-10-r5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /api/health
              port: dashboard
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: grafana
          ports:
          - containerPort: 3000
            name: dashboard
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /api/health
              port: dashboard
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/bitnami/grafana/data
            name: data
          - mountPath: /opt/bitnami/grafana/conf/provisioning/dashboards
            name: dashboards-provider
          - mountPath: /opt/bitnami/grafana/dashboards/argo-workflows-controller-dash.json
            name: argo-workflows-controller-dash
            subPath: argo-workflows-controller-dash.json
          - mountPath: /opt/bitnami/grafana/conf/provisioning/datasources
            name: datasources
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
        serviceAccount: algnext-grafana
        serviceAccountName: algnext-grafana
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: algnext-grafana
        - configMap:
            defaultMode: 420
            name: algnext-grafana-provider
          name: dashboards-provider
        - configMap:
            defaultMode: 420
            name: argo-workflows-controller-dash
          name: argo-workflows-controller-dash
        - name: datasources
          secret:
            defaultMode: 420
            secretName: grafana-datasources
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-06-30T12:45:51Z"
      lastUpdateTime: "2022-06-30T12:45:51Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-06-30T12:44:45Z"
      lastUpdateTime: "2022-06-30T12:45:51Z"
      message: ReplicaSet "algnext-grafana-69d7dcdc94" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/component: blackbox-exporter
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"blackbox-exporter"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":19115,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/bitnami/blackbox-exporter/conf"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"blackbox-exporter-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:52Z"
    name: algnext-kube-prometheus-blackbox-exporter
    namespace: algnext-ns
    resourceVersion: "19777319"
    uid: 24b7ca5f-6e01-4b9a-a320-2331c8a7a40c
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: blackbox-exporter
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: kube-prometheus
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 8c938de560d9ec36e6f0645a081c3da3ac5e7c97fab385ebadbd76c07633df27
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: blackbox-exporter
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-prometheus
          helm.sh/chart: kube-prometheus-6.13.3
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: blackbox-exporter
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: kube-prometheus
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --config.file=/bitnami/blackbox-exporter/conf/config.yml
          - --web.listen-address=:19115
          image: docker.io/bitnami/blackbox-exporter:0.20.0-debian-10-r66
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: blackbox-exporter
          ports:
          - containerPort: 19115
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/blackbox-exporter/conf
            name: blackbox-exporter-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: algnext-kube-prometheus-blackbox-exporter
        serviceAccountName: algnext-kube-prometheus-blackbox-exporter
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: algnext-kube-prometheus-blackbox-exporter
          name: blackbox-exporter-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-06-30T12:45:52Z"
      lastUpdateTime: "2022-06-30T12:45:52Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-06-30T12:44:45Z"
      lastUpdateTime: "2022-06-30T12:45:52Z"
      message: ReplicaSet "algnext-kube-prometheus-blackbox-exporter-57bc6fdc94" has
        successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"prometheus-operator"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"PROMETHEUS_CONFIG_RELOADER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:22Z"
    name: algnext-kube-prometheus-operator
    namespace: algnext-ns
    resourceVersion: "19777131"
    uid: 21420e58-406b-4a19-9513-9be94f74e02d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: kube-prometheus
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: operator
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-prometheus
          helm.sh/chart: kube-prometheus-6.13.3
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: operator
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: kube-prometheus
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --kubelet-service=kube-system/algnext-kube-prometheus-kubelet
          - --log-format=logfmt
          - --log-level=info
          - --localhost=127.0.0.1
          - --prometheus-config-reloader=$(PROMETHEUS_CONFIG_RELOADER)
          env:
          - name: PROMETHEUS_CONFIG_RELOADER
            valueFrom:
              configMapKeyRef:
                key: prometheus-config-reloader
                name: algnext-kube-prometheus-operator
          image: docker.io/bitnami/prometheus-operator:0.56.3-debian-10-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /metrics
              port: http
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: prometheus-operator
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /metrics
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsUser: 1001
        serviceAccount: algnext-kube-prometheus-operator
        serviceAccountName: algnext-kube-prometheus-operator
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-06-30T12:45:22Z"
      lastUpdateTime: "2022-06-30T12:45:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-06-30T12:44:45Z"
      lastUpdateTime: "2022-06-30T12:45:22Z"
      message: ReplicaSet "algnext-kube-prometheus-operator-5f85cb66" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      helm.sh/chart: kube-state-metrics-2.2.24
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"kube-state-metrics"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:23Z"
    name: algnext-kube-state-metrics
    namespace: algnext-ns
    resourceVersion: "19777141"
    uid: 8dc336c5-cf35-4f4a-a8a6-e995b1429d56
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: kube-state-metrics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          helm.sh/chart: kube-state-metrics-2.2.24
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: kube-state-metrics
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --resources=certificatesigningrequests
          - --resources=configmaps
          - --resources=cronjobs
          - --resources=daemonsets
          - --resources=deployments
          - --resources=endpoints
          - --resources=horizontalpodautoscalers
          - --resources=ingresses
          - --resources=jobs
          - --resources=limitranges
          - --resources=mutatingwebhookconfigurations
          - --resources=namespaces
          - --resources=networkpolicies
          - --resources=nodes
          - --resources=persistentvolumeclaims
          - --resources=persistentvolumes
          - --resources=poddisruptionbudgets
          - --resources=pods
          - --resources=replicasets
          - --resources=replicationcontrollers
          - --resources=resourcequotas
          - --resources=secrets
          - --resources=services
          - --resources=statefulsets
          - --resources=storageclasses
          - --resources=volumeattachments
          image: docker.io/bitnami/kube-state-metrics:2.4.2-debian-10-r72
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsUser: 1001
        serviceAccount: algnext-kube-state-metrics
        serviceAccountName: algnext-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-06-30T12:45:23Z"
      lastUpdateTime: "2022-06-30T12:45:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-06-30T12:44:45Z"
      lastUpdateTime: "2022-06-30T12:45:23Z"
      message: ReplicaSet "algnext-kube-state-metrics-75bb59fbf9" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app: algnext-sensor-controller
      app.kubernetes.io/managed-by: Helm
      chart: argo-events-1.13.0
      heritage: Helm
      release: algnext
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/managed-by: {}
            f:chart: {}
            f:heritage: {}
            f:release: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:release: {}
            f:spec:
              f:containers:
                k:{"name":"sensor-controller"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"SENSOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:51Z"
    name: algnext-sensor-controller
    namespace: algnext-ns
    resourceVersion: "19776851"
    uid: 4a613f43-5e24-4a54-9d91-eb3a845c858e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: algnext-sensor-controller
        release: algnext
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: algnext-sensor-controller
          release: algnext
      spec:
        containers:
        - args:
          - sensor-controller
          - --namespaced
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: SENSOR_IMAGE
            value: quay.io/argoproj/argo-events:v1.6.0
          image: quay.io/argoproj/argo-events:v1.6.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: sensor-controller
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          runAsUser: 9731
        serviceAccount: argo-events-sa
        serviceAccountName: argo-events-sa
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-06-30T12:44:51Z"
      lastUpdateTime: "2022-06-30T12:44:51Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-06-30T12:44:45Z"
      lastUpdateTime: "2022-06-30T12:44:51Z"
      message: ReplicaSet "algnext-sensor-controller-664dff7b95" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: minio
      helm.sh/chart: minio-11.5.1
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/credentials-secret: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"minio"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"BITNAMI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_BROWSER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_CONSOLE_PORT_NUMBER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_DEFAULT_BUCKETS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_FORCE_NEW_KEYS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_PROMETHEUS_AUTH_TYPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_ROOT_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MINIO_ROOT_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MINIO_SCHEME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9001,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:00Z"
    name: argo-artifacts
    namespace: algnext-ns
    resourceVersion: "19776982"
    uid: 8c9bdf2a-3072-4c85-8fb4-faf0585bc586
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: minio
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          checksum/credentials-secret: 4352ee7f804ca17d5a91bf7f2ac440c439838055e927d1e52fcab48f86a01947
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: minio
          helm.sh/chart: minio-11.5.1
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: minio
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: MINIO_SCHEME
            value: http
          - name: MINIO_FORCE_NEW_KEYS
            value: "no"
          - name: MINIO_ROOT_USER
            valueFrom:
              secretKeyRef:
                key: root-user
                name: argo-artifacts
          - name: MINIO_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: root-password
                name: argo-artifacts
          - name: MINIO_DEFAULT_BUCKETS
            value: algnext-dev-input algnext-dev-output
          - name: MINIO_BROWSER
            value: "on"
          - name: MINIO_PROMETHEUS_AUTH_TYPE
            value: public
          - name: MINIO_CONSOLE_PORT_NUMBER
            value: "9001"
          image: docker.io/bitnami/minio:2022.5.8-debian-10-r8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /minio/health/live
              port: minio-api
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: minio
          ports:
          - containerPort: 9000
            name: minio-api
            protocol: TCP
          - containerPort: 9001
            name: minio-console
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: minio-api
            timeoutSeconds: 1
          resources: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: argo-artifacts
        serviceAccountName: argo-artifacts
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: argo-artifacts
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-06-30T12:45:00Z"
      lastUpdateTime: "2022-06-30T12:45:00Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-06-30T12:44:45Z"
      lastUpdateTime: "2022-06-30T12:45:00Z"
      message: ReplicaSet "argo-artifacts-f59f788b9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 2
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
      pod-template-hash: 58d85d6c5b
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"595a79e8-15f6-44b2-9880-4cf18ef4397d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"controller"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ARGO_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"LEADER_ELECTION_IDENTITY"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6060,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9090,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-07-08T18:18:25Z"
    name: algnext-argo-workflows-controller-58d85d6c5b
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-argo-workflows-controller
      uid: 595a79e8-15f6-44b2-9880-4cf18ef4397d
    resourceVersion: "22366610"
    uid: a0af9eda-75a1-4e8b-87d8-344ab58941d6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: argo-workflows
        pod-template-hash: 58d85d6c5b
    template:
      metadata:
        annotations:
          checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argo-workflows
          helm.sh/chart: argo-workflows-2.2.1
          pod-template-hash: 58d85d6c5b
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: controller
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: argo-workflows
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --configmap
          - algnext-argo-workflows-controller
          - --executor-image
          - docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
          - --executor-image-pull-policy
          - Always
          - --loglevel
          - info
          - --gloglevel
          - "0"
          - --workflow-workers
          - "32"
          env:
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: LEADER_ELECTION_IDENTITY
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: docker.io/bitnami/argo-workflow-controller:3.3.5-scratch-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 90
            periodSeconds: 60
            successThreshold: 1
            tcpSocket:
              port: 6060
            timeoutSeconds: 30
          name: controller
          ports:
          - containerPort: 9090
            name: metrics
            protocol: TCP
          - containerPort: 6060
            name: controller
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            tcpSocket:
              port: 6060
            timeoutSeconds: 30
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: algnext-argo-workflows-controller
        serviceAccountName: algnext-argo-workflows-controller
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-07-08T18:17:24Z"
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
      pod-template-hash: bc47b48c4
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"595a79e8-15f6-44b2-9880-4cf18ef4397d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"controller"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ARGO_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"LEADER_ELECTION_IDENTITY"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6060,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9090,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-07-08T18:18:25Z"
    name: algnext-argo-workflows-controller-bc47b48c4
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-argo-workflows-controller
      uid: 595a79e8-15f6-44b2-9880-4cf18ef4397d
    resourceVersion: "22366601"
    uid: 4bdde772-9295-444a-8ce3-6b0b91d6dda0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: argo-workflows
        pod-template-hash: bc47b48c4
    template:
      metadata:
        annotations:
          checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
          kubectl.kubernetes.io/restartedAt: "2022-07-08T18:17:24Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argo-workflows
          helm.sh/chart: argo-workflows-2.2.1
          pod-template-hash: bc47b48c4
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: controller
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: argo-workflows
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --configmap
          - algnext-argo-workflows-controller
          - --executor-image
          - docker.io/bitnami/argo-workflow-exec:3.3.5-debian-10-r19
          - --executor-image-pull-policy
          - Always
          - --loglevel
          - info
          - --gloglevel
          - "0"
          - --workflow-workers
          - "32"
          env:
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: LEADER_ELECTION_IDENTITY
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: docker.io/bitnami/argo-workflow-controller:3.3.5-scratch-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 90
            periodSeconds: 60
            successThreshold: 1
            tcpSocket:
              port: 6060
            timeoutSeconds: 30
          name: controller
          ports:
          - containerPort: 9090
            name: metrics
            protocol: TCP
          - containerPort: 6060
            name: controller
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            tcpSocket:
              port: 6060
            timeoutSeconds: 30
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: algnext-argo-workflows-controller
        serviceAccountName: algnext-argo-workflows-controller
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-07-08T18:16:34Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
      pod-template-hash: 57ddfcdc5f
    name: algnext-argo-workflows-server-57ddfcdc5f
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-argo-workflows-server
      uid: 172ad106-e301-4695-9e38-8b1f5711ffc7
    resourceVersion: "22367313"
    uid: ab9a7186-857d-42dd-837b-9a18635e39ea
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: argo-workflows
        pod-template-hash: 57ddfcdc5f
    template:
      metadata:
        annotations:
          checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argo-workflows
          helm.sh/chart: argo-workflows-2.2.1
          pod-template-hash: 57ddfcdc5f
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: server
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: argo-workflows
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - server
          - --configmap=algnext-argo-workflows-controller
          - --secure=false
          - --auth-mode
          - client
          - --port
          - "2746"
          env:
          - name: BASE_HREF
            value: /app/algnext
          - name: IN_CLUSTER
            value: "true"
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: BASE_HREF
            value: /
          image: docker.io/bitnami/argo-workflow-cli:3.3.5-scratch-r2
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: argo-server
          ports:
          - containerPort: 2746
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: algnext-argo-workflows-server
        serviceAccountName: algnext-argo-workflows-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-07-08T18:27:05Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
      pod-template-hash: 66cd88cb47
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"172ad106-e301-4695-9e38-8b1f5711ffc7"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"argo-server"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ARGO_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"BASE_HREF"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"IN_CLUSTER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":2746,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-07-08T18:27:23Z"
    name: algnext-argo-workflows-server-66cd88cb47
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-argo-workflows-server
      uid: 172ad106-e301-4695-9e38-8b1f5711ffc7
    resourceVersion: "22368639"
    uid: 47a22d45-ef2c-42a2-ac7f-36d55247a8c0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: argo-workflows
        pod-template-hash: 66cd88cb47
    template:
      metadata:
        annotations:
          checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
          kubectl.kubernetes.io/restartedAt: "2022-07-08T18:27:05Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argo-workflows
          helm.sh/chart: argo-workflows-2.2.1
          pod-template-hash: 66cd88cb47
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: server
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: argo-workflows
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - server
          - --configmap=algnext-argo-workflows-controller
          - --secure=false
          - --auth-mode
          - client
          - --port
          - "2746"
          env:
          - name: BASE_HREF
            value: /app/algnext/
          - name: IN_CLUSTER
            value: "true"
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/bitnami/argo-workflow-cli:3.3.5-scratch-r2
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: argo-server
          ports:
          - containerPort: 2746
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: algnext-argo-workflows-server
        serviceAccountName: algnext-argo-workflows-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
      pod-template-hash: 6bf49b5657
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"172ad106-e301-4695-9e38-8b1f5711ffc7"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"argo-server"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ARGO_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"BASE_HREF"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"IN_CLUSTER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":2746,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-07-07T14:30:59Z"
    name: algnext-argo-workflows-server-6bf49b5657
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-argo-workflows-server
      uid: 172ad106-e301-4695-9e38-8b1f5711ffc7
    resourceVersion: "22001841"
    uid: 3cfb3c04-fdf8-4c64-8dec-3ea03a6e6f8d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: argo-workflows
        pod-template-hash: 6bf49b5657
    template:
      metadata:
        annotations:
          checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argo-workflows
          helm.sh/chart: argo-workflows-2.2.1
          pod-template-hash: 6bf49b5657
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: server
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: argo-workflows
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - server
          - --configmap=algnext-argo-workflows-controller
          - --secure=false
          - --auth-mode
          - server
          - --port
          - "2746"
          env:
          - name: IN_CLUSTER
            value: "true"
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: BASE_HREF
            value: /
          image: docker.io/bitnami/argo-workflow-cli:3.3.5-scratch-r2
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: argo-server
          ports:
          - containerPort: 2746
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: algnext-argo-workflows-server
        serviceAccountName: algnext-argo-workflows-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-07-08T18:20:57Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
      pod-template-hash: 9f5644675
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"172ad106-e301-4695-9e38-8b1f5711ffc7"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"argo-server"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ARGO_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"BASE_HREF"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"IN_CLUSTER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":2746,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-07-08T18:27:23Z"
    name: algnext-argo-workflows-server-9f5644675
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-argo-workflows-server
      uid: 172ad106-e301-4695-9e38-8b1f5711ffc7
    resourceVersion: "22368649"
    uid: f4c48434-e993-46ef-ac2a-b02fd7f3e1ca
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: argo-workflows
        pod-template-hash: 9f5644675
    template:
      metadata:
        annotations:
          checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argo-workflows
          helm.sh/chart: argo-workflows-2.2.1
          pod-template-hash: 9f5644675
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: server
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: argo-workflows
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - server
          - --configmap=algnext-argo-workflows-controller
          - --secure=false
          - --auth-mode
          - client
          - --port
          - "2746"
          env:
          - name: BASE_HREF
            value: /app/algnext/
          - name: IN_CLUSTER
            value: "true"
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/bitnami/argo-workflow-cli:3.3.5-scratch-r2
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: argo-server
          ports:
          - containerPort: 2746
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: algnext-argo-workflows-server
        serviceAccountName: algnext-argo-workflows-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-07-07T14:30:33Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argo-workflows
      helm.sh/chart: argo-workflows-2.2.1
      pod-template-hash: ffc6bd9c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"172ad106-e301-4695-9e38-8b1f5711ffc7"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"argo-server"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ARGO_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"BASE_HREF"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"IN_CLUSTER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":2746,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-07-08T18:16:53Z"
    name: algnext-argo-workflows-server-ffc6bd9c
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-argo-workflows-server
      uid: 172ad106-e301-4695-9e38-8b1f5711ffc7
    resourceVersion: "22366237"
    uid: af3ae14e-6e7e-4372-b34a-97c5343f1e21
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: argo-workflows
        pod-template-hash: ffc6bd9c
    template:
      metadata:
        annotations:
          checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: argo-workflows
          helm.sh/chart: argo-workflows-2.2.1
          pod-template-hash: ffc6bd9c
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: server
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: argo-workflows
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - server
          - --configmap=algnext-argo-workflows-controller
          - --secure=false
          - --auth-mode
          - client
          - --port
          - "2746"
          env:
          - name: IN_CLUSTER
            value: "true"
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: BASE_HREF
            value: /
          image: docker.io/bitnami/argo-workflow-cli:3.3.5-scratch-r2
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: argo-server
          ports:
          - containerPort: 2746
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: algnext-argo-workflows-server
        serviceAccountName: algnext-argo-workflows-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app: algnext-eventbus-controller
      pod-template-hash: 9cdb4778f
      release: algnext
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1af1ca5c-233c-4d9f-9dc0-8ce6a2ff1cb6"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
                f:release: {}
            f:spec:
              f:containers:
                k:{"name":"eventbus-controller"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"NATS_METRICS_EXPORTER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NATS_STREAMING_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:53Z"
    name: algnext-eventbus-controller-9cdb4778f
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-eventbus-controller
      uid: 1af1ca5c-233c-4d9f-9dc0-8ce6a2ff1cb6
    resourceVersion: "19776874"
    uid: a24b93c1-2f50-4bfd-8a0a-2b0f2f0813b2
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: algnext-eventbus-controller
        pod-template-hash: 9cdb4778f
        release: algnext
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: algnext-eventbus-controller
          pod-template-hash: 9cdb4778f
          release: algnext
      spec:
        containers:
        - args:
          - eventbus-controller
          - --namespaced
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NATS_STREAMING_IMAGE
            value: nats-streaming:0.22.1
          - name: NATS_METRICS_EXPORTER_IMAGE
            value: natsio/prometheus-nats-exporter:0.8.0
          image: quay.io/argoproj/argo-events:v1.6.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: eventbus-controller
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          runAsUser: 9731
        serviceAccount: argo-events-sa
        serviceAccountName: argo-events-sa
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app: algnext-eventsource-controller
      pod-template-hash: 8c99b48bc
      release: algnext
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ab451de8-51cf-4c01-8f01-2d06d5658c89"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
                f:release: {}
            f:spec:
              f:containers:
                k:{"name":"eventsource-controller"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"EVENTSOURCE_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:52Z"
    name: algnext-eventsource-controller-8c99b48bc
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-eventsource-controller
      uid: ab451de8-51cf-4c01-8f01-2d06d5658c89
    resourceVersion: "19776862"
    uid: 699cf3dc-c877-4eeb-bf79-a73f1ae1bf46
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: algnext-eventsource-controller
        pod-template-hash: 8c99b48bc
        release: algnext
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: algnext-eventsource-controller
          pod-template-hash: 8c99b48bc
          release: algnext
      spec:
        containers:
        - args:
          - eventsource-controller
          - --namespaced
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: EVENTSOURCE_IMAGE
            value: quay.io/argoproj/argo-events:v1.6.0
          image: quay.io/argoproj/argo-events:v1.6.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: eventsource-controller
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          runAsUser: 9731
        serviceAccount: argo-events-sa
        serviceAccountName: argo-events-sa
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      helm.sh/chart: grafana-7.8.1
      pod-template-hash: 69d7dcdc94
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b854f302-c5d0-42db-bed7-e4ba0ef878f5"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
                f:checksum/dashboard-provider: {}
                f:checksum/secret: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"grafana"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"GF_SECURITY_ADMIN_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":3000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/opt/bitnami/grafana/conf/provisioning/dashboards"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/bitnami/grafana/conf/provisioning/datasources"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/bitnami/grafana/dashboards/argo-workflows-controller-dash.json"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
                    k:{"mountPath":"/opt/bitnami/grafana/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"argo-workflows-controller-dash"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"dashboards-provider"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
                k:{"name":"datasources"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:51Z"
    name: algnext-grafana-69d7dcdc94
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-grafana
      uid: b854f302-c5d0-42db-bed7-e4ba0ef878f5
    resourceVersion: "19777305"
    uid: cd20d428-15c2-4b38-b3b5-a69def548a63
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: grafana
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: grafana
        pod-template-hash: 69d7dcdc94
    template:
      metadata:
        annotations:
          checksum/config: d7896ad385f216aacb163112514df14dd73075ede9b1d5d8297d1082a635a734
          checksum/dashboard-provider: deaaaf2448c97596cc368026544a49b8ecbb8efd729ecc44814399aceef000f9
          checksum/secret: c01667fd514fce67f5e8f16e3bada1c2f4262274ce6cb72a311586a83bb0315c
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: grafana
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: grafana
          helm.sh/chart: grafana-7.8.1
          pod-template-hash: 69d7dcdc94
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: grafana
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: grafana
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: GF_SECURITY_ADMIN_PASSWORD
                name: algnext-grafana-admin
          envFrom:
          - configMapRef:
              name: algnext-grafana-envvars
          image: docker.io/bitnami/grafana:8.5.3-debian-10-r5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /api/health
              port: dashboard
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: grafana
          ports:
          - containerPort: 3000
            name: dashboard
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /api/health
              port: dashboard
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/bitnami/grafana/data
            name: data
          - mountPath: /opt/bitnami/grafana/conf/provisioning/dashboards
            name: dashboards-provider
          - mountPath: /opt/bitnami/grafana/dashboards/argo-workflows-controller-dash.json
            name: argo-workflows-controller-dash
            subPath: argo-workflows-controller-dash.json
          - mountPath: /opt/bitnami/grafana/conf/provisioning/datasources
            name: datasources
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
        serviceAccount: algnext-grafana
        serviceAccountName: algnext-grafana
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: algnext-grafana
        - configMap:
            defaultMode: 420
            name: algnext-grafana-provider
          name: dashboards-provider
        - configMap:
            defaultMode: 420
            name: argo-workflows-controller-dash
          name: argo-workflows-controller-dash
        - name: datasources
          secret:
            defaultMode: 420
            secretName: grafana-datasources
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/component: blackbox-exporter
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
      pod-template-hash: 57bc6fdc94
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"24b7ca5f-6e01-4b9a-a320-2331c8a7a40c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"blackbox-exporter"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":19115,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/bitnami/blackbox-exporter/conf"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"blackbox-exporter-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:52Z"
    name: algnext-kube-prometheus-blackbox-exporter-57bc6fdc94
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-kube-prometheus-blackbox-exporter
      uid: 24b7ca5f-6e01-4b9a-a320-2331c8a7a40c
    resourceVersion: "19777318"
    uid: 31d98a48-069d-49ed-909c-18d965737f4d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: blackbox-exporter
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: kube-prometheus
        pod-template-hash: 57bc6fdc94
    template:
      metadata:
        annotations:
          checksum/config: 8c938de560d9ec36e6f0645a081c3da3ac5e7c97fab385ebadbd76c07633df27
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: blackbox-exporter
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-prometheus
          helm.sh/chart: kube-prometheus-6.13.3
          pod-template-hash: 57bc6fdc94
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: blackbox-exporter
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: kube-prometheus
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --config.file=/bitnami/blackbox-exporter/conf/config.yml
          - --web.listen-address=:19115
          image: docker.io/bitnami/blackbox-exporter:0.20.0-debian-10-r66
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: blackbox-exporter
          ports:
          - containerPort: 19115
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/blackbox-exporter/conf
            name: blackbox-exporter-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: algnext-kube-prometheus-blackbox-exporter
        serviceAccountName: algnext-kube-prometheus-blackbox-exporter
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: algnext-kube-prometheus-blackbox-exporter
          name: blackbox-exporter-config
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
      pod-template-hash: 5f85cb66
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"21420e58-406b-4a19-9513-9be94f74e02d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"prometheus-operator"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"PROMETHEUS_CONFIG_RELOADER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:22Z"
    name: algnext-kube-prometheus-operator-5f85cb66
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-kube-prometheus-operator
      uid: 21420e58-406b-4a19-9513-9be94f74e02d
    resourceVersion: "19777129"
    uid: ac0b9c5f-9476-447f-95e4-fe22e09f69db
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: kube-prometheus
        pod-template-hash: 5f85cb66
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: operator
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-prometheus
          helm.sh/chart: kube-prometheus-6.13.3
          pod-template-hash: 5f85cb66
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: operator
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: kube-prometheus
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --kubelet-service=kube-system/algnext-kube-prometheus-kubelet
          - --log-format=logfmt
          - --log-level=info
          - --localhost=127.0.0.1
          - --prometheus-config-reloader=$(PROMETHEUS_CONFIG_RELOADER)
          env:
          - name: PROMETHEUS_CONFIG_RELOADER
            valueFrom:
              configMapKeyRef:
                key: prometheus-config-reloader
                name: algnext-kube-prometheus-operator
          image: docker.io/bitnami/prometheus-operator:0.56.3-debian-10-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /metrics
              port: http
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: prometheus-operator
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /metrics
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsUser: 1001
        serviceAccount: algnext-kube-prometheus-operator
        serviceAccountName: algnext-kube-prometheus-operator
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      helm.sh/chart: kube-state-metrics-2.2.24
      pod-template-hash: 75bb59fbf9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8dc336c5-cf35-4f4a-a8a6-e995b1429d56"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"kube-state-metrics"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:23Z"
    name: algnext-kube-state-metrics-75bb59fbf9
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-kube-state-metrics
      uid: 8dc336c5-cf35-4f4a-a8a6-e995b1429d56
    resourceVersion: "19777140"
    uid: 6616b71d-615f-401e-9c55-4f0489e48b4f
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 75bb59fbf9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          helm.sh/chart: kube-state-metrics-2.2.24
          pod-template-hash: 75bb59fbf9
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: kube-state-metrics
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --resources=certificatesigningrequests
          - --resources=configmaps
          - --resources=cronjobs
          - --resources=daemonsets
          - --resources=deployments
          - --resources=endpoints
          - --resources=horizontalpodautoscalers
          - --resources=ingresses
          - --resources=jobs
          - --resources=limitranges
          - --resources=mutatingwebhookconfigurations
          - --resources=namespaces
          - --resources=networkpolicies
          - --resources=nodes
          - --resources=persistentvolumeclaims
          - --resources=persistentvolumes
          - --resources=poddisruptionbudgets
          - --resources=pods
          - --resources=replicasets
          - --resources=replicationcontrollers
          - --resources=resourcequotas
          - --resources=secrets
          - --resources=services
          - --resources=statefulsets
          - --resources=storageclasses
          - --resources=volumeattachments
          image: docker.io/bitnami/kube-state-metrics:2.4.2-debian-10-r72
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsUser: 1001
        serviceAccount: algnext-kube-state-metrics
        serviceAccountName: algnext-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app: algnext-sensor-controller
      pod-template-hash: 664dff7b95
      release: algnext
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4a613f43-5e24-4a54-9d91-eb3a845c858e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
                f:release: {}
            f:spec:
              f:containers:
                k:{"name":"sensor-controller"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"SENSOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:51Z"
    name: algnext-sensor-controller-664dff7b95
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: algnext-sensor-controller
      uid: 4a613f43-5e24-4a54-9d91-eb3a845c858e
    resourceVersion: "19776850"
    uid: 720277d4-64ab-45cb-9577-aab41698b252
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: algnext-sensor-controller
        pod-template-hash: 664dff7b95
        release: algnext
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: algnext-sensor-controller
          pod-template-hash: 664dff7b95
          release: algnext
      spec:
        containers:
        - args:
          - sensor-controller
          - --namespaced
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: SENSOR_IMAGE
            value: quay.io/argoproj/argo-events:v1.6.0
          image: quay.io/argoproj/argo-events:v1.6.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: sensor-controller
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          runAsUser: 9731
        serviceAccount: argo-events-sa
        serviceAccountName: argo-events-sa
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: minio
      helm.sh/chart: minio-11.5.1
      pod-template-hash: f59f788b9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8c9bdf2a-3072-4c85-8fb4-faf0585bc586"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/credentials-secret: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"minio"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"BITNAMI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_BROWSER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_CONSOLE_PORT_NUMBER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_DEFAULT_BUCKETS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_FORCE_NEW_KEYS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_PROMETHEUS_AUTH_TYPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MINIO_ROOT_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MINIO_ROOT_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MINIO_SCHEME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9001,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:00Z"
    name: argo-artifacts-f59f788b9
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argo-artifacts
      uid: 8c9bdf2a-3072-4c85-8fb4-faf0585bc586
    resourceVersion: "19776981"
    uid: a568d1fc-7750-4b3e-8337-fece049c2b31
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: minio
        pod-template-hash: f59f788b9
    template:
      metadata:
        annotations:
          checksum/credentials-secret: 4352ee7f804ca17d5a91bf7f2ac440c439838055e927d1e52fcab48f86a01947
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: minio
          helm.sh/chart: minio-11.5.1
          pod-template-hash: f59f788b9
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: minio
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: MINIO_SCHEME
            value: http
          - name: MINIO_FORCE_NEW_KEYS
            value: "no"
          - name: MINIO_ROOT_USER
            valueFrom:
              secretKeyRef:
                key: root-user
                name: argo-artifacts
          - name: MINIO_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: root-password
                name: argo-artifacts
          - name: MINIO_DEFAULT_BUCKETS
            value: algnext-dev-input algnext-dev-output
          - name: MINIO_BROWSER
            value: "on"
          - name: MINIO_PROMETHEUS_AUTH_TYPE
            value: public
          - name: MINIO_CONSOLE_PORT_NUMBER
            value: "9001"
          image: docker.io/bitnami/minio:2022.5.8-debian-10-r8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /minio/health/live
              port: minio-api
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: minio
          ports:
          - containerPort: 9000
            name: minio-api
            protocol: TCP
          - containerPort: 9001
            name: minio-console
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: minio-api
            timeoutSeconds: 1
          resources: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: argo-artifacts
        serviceAccountName: argo-artifacts
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: argo-artifacts
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
      prometheus-operator-input-hash: "16202479151459786449"
    creationTimestamp: "2022-06-30T12:44:50Z"
    generation: 1
    labels:
      app.kubernetes.io/component: alertmanager
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:prometheus-operator-input-hash: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6ca037a6-bc07-41cb-aab5-a45bb79924e6"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:podManagementPolicy: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:serviceName: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/default-container: {}
              f:labels:
                .: {}
                f:alertmanager: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/version: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"alertmanager"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_IP"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9093,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9094,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9094,"protocol":"UDP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/alertmanager"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/alertmanager/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/alertmanager/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"config-reloader"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"SHARD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/alertmanager/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"alertmanager-algnext-kube-prometheus-alertmanager-db"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"config-volume"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"tls-assets"}:
                  .: {}
                  f:name: {}
                  f:projected:
                    .: {}
                    f:defaultMode: {}
                    f:sources: {}
          f:updateStrategy:
            f:type: {}
        f:status:
          f:replicas: {}
      manager: PrometheusOperator
      operation: Update
      time: "2022-06-30T12:44:51Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:readyReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:33Z"
    name: alertmanager-algnext-kube-prometheus-alertmanager
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      blockOwnerDeletion: true
      controller: true
      kind: Alertmanager
      name: algnext-kube-prometheus-alertmanager
      uid: 6ca037a6-bc07-41cb-aab5-a45bb79924e6
    resourceVersion: "19777221"
    uid: 3735aefc-c536-40e4-8031-c801992823f2
  spec:
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        alertmanager: algnext-kube-prometheus-alertmanager
        app.kubernetes.io/instance: algnext-kube-prometheus-alertmanager
        app.kubernetes.io/managed-by: prometheus-operator
        app.kubernetes.io/name: alertmanager
    serviceName: alertmanager-operated
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: alertmanager
        creationTimestamp: null
        labels:
          alertmanager: algnext-kube-prometheus-alertmanager
          app.kubernetes.io/component: alertmanager
          app.kubernetes.io/instance: algnext-kube-prometheus-alertmanager
          app.kubernetes.io/managed-by: prometheus-operator
          app.kubernetes.io/name: alertmanager
          app.kubernetes.io/version: 0.24.0
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: alertmanager
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: kube-prometheus
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --config.file=/etc/alertmanager/config/alertmanager.yaml
          - --storage.path=/alertmanager
          - --data.retention=120h
          - --cluster.listen-address=
          - --web.listen-address=:9093
          - --web.external-url=http://algnext-kube-prometheus-alertmanager.algnext-ns:9093/
          - --web.route-prefix=/
          - --cluster.peer=alertmanager-algnext-kube-prometheus-alertmanager-0.alertmanager-operated:9094
          - --cluster.reconnect-timeout=5m
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: docker.io/bitnami/alertmanager:0.24.0-debian-10-r57
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 120
            httpGet:
              path: /-/healthy
              port: web
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          name: alertmanager
          ports:
          - containerPort: 9093
            name: web
            protocol: TCP
          - containerPort: 9094
            name: mesh-tcp
            protocol: TCP
          - containerPort: 9094
            name: mesh-udp
            protocol: UDP
          readinessProbe:
            failureThreshold: 120
            httpGet:
              path: /-/ready
              port: web
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            requests:
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/alertmanager/config
            name: config-volume
          - mountPath: /etc/alertmanager/certs
            name: tls-assets
            readOnly: true
          - mountPath: /alertmanager
            name: alertmanager-algnext-kube-prometheus-alertmanager-db
        - args:
          - --listen-address=:8080
          - --reload-url=http://127.0.0.1:9093/-/reload
          - --watched-dir=/etc/alertmanager/config
          command:
          - /bin/prometheus-config-reloader
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SHARD
            value: "-1"
          image: docker.io/bitnami/prometheus-operator:0.56.3-debian-10-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: reloader-web
            timeoutSeconds: 5
          name: config-reloader
          ports:
          - containerPort: 8080
            name: reloader-web
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: reloader-web
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/alertmanager/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsUser: 1001
        serviceAccount: algnext-kube-prometheus-alertmanager
        serviceAccountName: algnext-kube-prometheus-alertmanager
        terminationGracePeriodSeconds: 120
        volumes:
        - name: config-volume
          secret:
            defaultMode: 420
            secretName: alertmanager-algnext-kube-prometheus-alertmanager-generated
        - name: tls-assets
          projected:
            defaultMode: 420
            sources:
            - secret:
                name: alertmanager-algnext-kube-prometheus-alertmanager-tls-assets-0
        - emptyDir: {}
          name: alertmanager-algnext-kube-prometheus-alertmanager-db
    updateStrategy:
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: alertmanager-algnext-kube-prometheus-alertmanager-cd956b9bd
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: alertmanager-algnext-kube-prometheus-alertmanager-cd956b9bd
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
    creationTimestamp: "2022-06-30T12:44:45Z"
    generation: 1
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-11.2.6
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:podManagementPolicy: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:serviceName: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"postgresql"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"BITNAMI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PGDATA"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRES_DB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRES_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"POSTGRESQL_CLIENT_MIN_MESSAGES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_ENABLE_LDAP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_ENABLE_TLS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_LOG_CONNECTIONS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_LOG_DISCONNECTIONS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_LOG_HOSTNAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_PGAUDIT_LOG_CATALOG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_PORT_NUMBER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_SHARED_PRELOAD_LIBRARIES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_VOLUME_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5432,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/bitnami/postgresql"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/dev/shm"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"dshm"}:
                  .: {}
                  f:emptyDir:
                    .: {}
                    f:medium: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:partition: {}
            f:type: {}
          f:volumeClaimTemplates: {}
      manager: helm
      operation: Update
      time: "2022-06-30T12:44:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:collisionCount: {}
          f:currentReplicas: {}
          f:currentRevision: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updateRevision: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:27Z"
    name: algnext-postgresql
    namespace: algnext-ns
    resourceVersion: "19777179"
    uid: 740894fb-a693-4888-8035-8440754e0a93
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: algnext
        app.kubernetes.io/name: postgresql
    serviceName: algnext-postgresql-hl
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: primary
          app.kubernetes.io/instance: algnext
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: postgresql
          helm.sh/chart: postgresql-11.2.6
        name: algnext-postgresql
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: primary
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: postgresql
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: POSTGRESQL_PORT_NUMBER
            value: "5432"
          - name: POSTGRESQL_VOLUME_DIR
            value: /bitnami/postgresql
          - name: PGDATA
            value: /bitnami/postgresql/data
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgres-password
                name: algnext-postgresql
          - name: POSTGRES_DB
            value: bn_argo_workflows
          - name: POSTGRESQL_ENABLE_LDAP
            value: "no"
          - name: POSTGRESQL_ENABLE_TLS
            value: "no"
          - name: POSTGRESQL_LOG_HOSTNAME
            value: "false"
          - name: POSTGRESQL_LOG_CONNECTIONS
            value: "false"
          - name: POSTGRESQL_LOG_DISCONNECTIONS
            value: "false"
          - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
            value: "off"
          - name: POSTGRESQL_CLIENT_MIN_MESSAGES
            value: error
          - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
            value: pgaudit
          image: docker.io/bitnami/postgresql:14.3.0-debian-10-r8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -d "dbname=bn_argo_workflows" -h 127.0.0.1
                -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: postgresql
          ports:
          - containerPort: 5432
            name: tcp-postgresql
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - -e
              - |
                exec pg_isready -U "postgres" -d "dbname=bn_argo_workflows" -h 127.0.0.1 -p 5432
                [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /bitnami/postgresql
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: dshm
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        storageClassName: aws-efs
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: algnext-postgresql-6b8bdb6d7c
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: algnext-postgresql-6b8bdb6d7c
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      resource-spec-hash: "829092904"
    creationTimestamp: "2022-06-30T12:44:49Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      controller: eventbus-controller
      eventbus-name: default
      owner-name: default
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:resource-spec-hash: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:controller: {}
            f:eventbus-name: {}
            f:owner-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a0c30937-5d5b-4b15-ac53-89f77cbf0b27"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:podManagementPolicy: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:serviceName: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:controller: {}
                f:eventbus-name: {}
                f:owner-name: {}
            f:spec:
              f:containers:
                k:{"name":"metrics"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":7777,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                k:{"name":"stan"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"CLUSTER_ADVERTISE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":4222,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":6222,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":8222,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/data/stan"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/stan-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"config-volume"}:
                  .: {}
                  f:name: {}
                  f:projected:
                    .: {}
                    f:defaultMode: {}
                    f:sources: {}
                k:{"name":"stan-data"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:partition: {}
            f:type: {}
      manager: argo-events
      operation: Update
      time: "2022-06-30T12:44:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:collisionCount: {}
          f:currentReplicas: {}
          f:currentRevision: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updateRevision: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:44:57Z"
    name: eventbus-default-stan
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: EventBus
      name: default
      uid: a0c30937-5d5b-4b15-ac53-89f77cbf0b27
    resourceVersion: "19776999"
    uid: 3ea035e0-726e-4ab8-b211-8b3103bbfa23
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        controller: eventbus-controller
        eventbus-name: default
        owner-name: default
    serviceName: eventbus-default-stan-svc
    template:
      metadata:
        creationTimestamp: null
        labels:
          controller: eventbus-controller
          eventbus-name: default
          owner-name: default
      spec:
        containers:
        - command:
          - /nats-streaming-server
          - -sc
          - /etc/stan-config/stan.conf
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CLUSTER_ADVERTISE
            value: $(POD_NAME).eventbus-default-stan-svc.$(POD_NAMESPACE).svc
          image: nats-streaming:0.22.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8222
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: stan
          ports:
          - containerPort: 4222
            name: client
            protocol: TCP
          - containerPort: 6222
            name: cluster
            protocol: TCP
          - containerPort: 8222
            name: monitor
            protocol: TCP
          resources:
            requests:
              cpu: "0"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/stan-config
            name: config-volume
          - mountPath: /data/stan
            name: stan-data
        - args:
          - -connz
          - -routez
          - -subz
          - -varz
          - -channelz
          - -serverz
          - http://localhost:8222
          image: natsio/prometheus-nats-exporter:0.8.0
          imagePullPolicy: IfNotPresent
          name: metrics
          ports:
          - containerPort: 7777
            name: metrics
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: config-volume
          projected:
            defaultMode: 420
            sources:
            - configMap:
                items:
                - key: stan-config
                  path: stan.conf
                name: eventbus-default-stan-configmap
            - secret:
                items:
                - key: auth
                  path: auth.conf
                name: eventbus-default-server
        - emptyDir: {}
          name: stan-data
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 3
    currentRevision: eventbus-default-stan-787bc9645c
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updateRevision: eventbus-default-stan-787bc9645c
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: algnext
      meta.helm.sh/release-namespace: algnext-ns
      prometheus-operator-input-hash: "17527548274710167434"
    creationTimestamp: "2022-06-30T12:44:51Z"
    generation: 1
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: algnext
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus
      helm.sh/chart: kube-prometheus-6.13.3
      operator.prometheus.io/name: algnext-kube-prometheus-prometheus
      operator.prometheus.io/shard: "0"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:prometheus-operator-input-hash: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:operator.prometheus.io/name: {}
            f:operator.prometheus.io/shard: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3f8f7a4e-6709-4207-ae70-c8985724e433"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:podManagementPolicy: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:serviceName: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/default-container: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/version: {}
                f:operator.prometheus.io/name: {}
                f:operator.prometheus.io/shard: {}
                f:prometheus: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"config-reloader"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"SHARD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/prometheus/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/prometheus/config_out"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"prometheus"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9090,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/prometheus/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/prometheus/config_out"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                      f:subPath: {}
                    k:{"mountPath":"/prometheus"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"init-config-reloader"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"SHARD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/prometheus/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/prometheus/config_out"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"config-out"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"prometheus-algnext-kube-prometheus-prometheus-db"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"prometheus-algnext-kube-prometheus-prometheus-rulefiles-0"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tls-assets"}:
                  .: {}
                  f:name: {}
                  f:projected:
                    .: {}
                    f:defaultMode: {}
                    f:sources: {}
                k:{"name":"web-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
          f:updateStrategy:
            f:type: {}
        f:status:
          f:replicas: {}
      manager: PrometheusOperator
      operation: Update
      time: "2022-06-30T12:44:51Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:readyReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-30T12:45:28Z"
    name: prometheus-algnext-kube-prometheus-prometheus
    namespace: algnext-ns
    ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      blockOwnerDeletion: true
      controller: true
      kind: Prometheus
      name: algnext-kube-prometheus-prometheus
      uid: 3f8f7a4e-6709-4207-ae70-c8985724e433
    resourceVersion: "19777190"
    uid: de52d899-08da-400d-8fb3-a599f2772027
  spec:
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: algnext-kube-prometheus-prometheus
        app.kubernetes.io/managed-by: prometheus-operator
        app.kubernetes.io/name: prometheus
        operator.prometheus.io/name: algnext-kube-prometheus-prometheus
        operator.prometheus.io/shard: "0"
        prometheus: algnext-kube-prometheus-prometheus
    serviceName: prometheus-operated
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: prometheus
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: prometheus
          app.kubernetes.io/instance: algnext-kube-prometheus-prometheus
          app.kubernetes.io/managed-by: prometheus-operator
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/version: 2.35.0
          operator.prometheus.io/name: algnext-kube-prometheus-prometheus
          operator.prometheus.io/shard: "0"
          prometheus: algnext-kube-prometheus-prometheus
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: prometheus
                    app.kubernetes.io/instance: algnext
                    app.kubernetes.io/name: kube-prometheus
                namespaces:
                - algnext-ns
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: true
        containers:
        - args:
          - --web.console.templates=/etc/prometheus/consoles
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --storage.tsdb.retention.time=10d
          - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
          - --storage.tsdb.path=/prometheus
          - --web.enable-lifecycle
          - --web.external-url=http://algnext-kube-prometheus-prometheus.algnext-ns:9090/
          - --web.route-prefix=/
          - --web.config.file=/etc/prometheus/web_config/web-config.yaml
          image: docker.io/bitnami/prometheus:2.35.0-debian-10-r30
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /-/healthy
              port: web
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: prometheus
          ports:
          - containerPort: 9090
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /-/ready
              port: web
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: /-/ready
              port: web
              scheme: HTTP
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: tls-assets
            readOnly: true
          - mountPath: /prometheus
            name: prometheus-algnext-kube-prometheus-prometheus-db
          - mountPath: /etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
            name: prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
          - mountPath: /etc/prometheus/web_config/web-config.yaml
            name: web-config
            readOnly: true
            subPath: web-config.yaml
        - args:
          - --listen-address=:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          - --config-file=/etc/prometheus/config/prometheus.yaml.gz
          - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
          - --watched-dir=/etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
          command:
          - /bin/prometheus-config-reloader
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SHARD
            value: "0"
          image: docker.io/bitnami/prometheus-operator:0.56.3-debian-10-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: reloader-web
            timeoutSeconds: 5
          name: config-reloader
          ports:
          - containerPort: 8080
            name: reloader-web
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: reloader-web
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/prometheus/config
            name: config
          - mountPath: /etc/prometheus/config_out
            name: config-out
          - mountPath: /etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
            name: prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - --watch-interval=0
          - --listen-address=:8080
          - --config-file=/etc/prometheus/config/prometheus.yaml.gz
          - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
          - --watched-dir=/etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
          command:
          - /bin/prometheus-config-reloader
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SHARD
            value: "0"
          image: docker.io/bitnami/prometheus-operator:0.56.3-debian-10-r0
          imagePullPolicy: IfNotPresent
          name: init-config-reloader
          ports:
          - containerPort: 8080
            name: reloader-web
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/prometheus/config
            name: config
          - mountPath: /etc/prometheus/config_out
            name: config-out
          - mountPath: /etc/prometheus/rules/prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
            name: prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsUser: 1001
        serviceAccount: algnext-kube-prometheus-prometheus
        serviceAccountName: algnext-kube-prometheus-prometheus
        terminationGracePeriodSeconds: 600
        volumes:
        - name: config
          secret:
            defaultMode: 420
            secretName: prometheus-algnext-kube-prometheus-prometheus
        - name: tls-assets
          projected:
            defaultMode: 420
            sources:
            - secret:
                name: prometheus-algnext-kube-prometheus-prometheus-tls-assets-0
        - emptyDir: {}
          name: config-out
        - configMap:
            defaultMode: 420
            name: prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
          name: prometheus-algnext-kube-prometheus-prometheus-rulefiles-0
        - name: web-config
          secret:
            defaultMode: 420
            secretName: prometheus-algnext-kube-prometheus-prometheus-web-config
        - emptyDir: {}
          name: prometheus-algnext-kube-prometheus-prometheus-db
    updateStrategy:
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: prometheus-algnext-kube-prometheus-prometheus-6d664cc7fd
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: prometheus-algnext-kube-prometheus-prometheus-6d664cc7fd
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
